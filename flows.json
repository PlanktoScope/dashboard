[
    {
        "id": "0a3c403539f8c642",
        "type": "tab",
        "label": "Home",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5a1a7f62278e237a",
        "type": "tab",
        "label": "Sample",
        "disabled": false,
        "info": ""
    },
    {
        "id": "43fa0bedea4fee38",
        "type": "tab",
        "label": "Optic Configuration",
        "disabled": false,
        "info": ""
    },
    {
        "id": "411cf41f68dec3b9",
        "type": "tab",
        "label": "Fluidic Acquisition",
        "disabled": false,
        "info": ""
    },
    {
        "id": "12e3aa44e2f707ef",
        "type": "tab",
        "label": "Segmentation",
        "disabled": false,
        "info": ""
    },
    {
        "id": "12d10fb79abadf1c",
        "type": "tab",
        "label": "Gallery",
        "disabled": false,
        "info": ""
    },
    {
        "id": "60cc63102b460ae0",
        "type": "tab",
        "label": "Administration",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a93cd90e1ab9222e",
        "type": "tab",
        "label": "System Monitoring",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b25367d20738ca43",
        "type": "tab",
        "label": "WIFI Management",
        "disabled": false,
        "info": ""
    },
    {
        "id": "95ee9f794509d2bb",
        "type": "tab",
        "label": "MQTT Receive",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f3e0666d3cbcc3ae",
        "type": "tab",
        "label": "Hardware Settings",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1b667c6443413ced",
        "type": "tab",
        "label": "Home dashboard2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ab58b3fd0e6bcd77",
        "type": "tab",
        "label": "Preview",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "190b0c9aa75e8843",
        "type": "tab",
        "label": "Metadata",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "35d7387466dd0bc0",
        "type": "tab",
        "label": "Acquisition",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0fd76ac156d78937",
        "type": "tab",
        "label": "Segmentation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ae92a0a869ca847f",
        "type": "tab",
        "label": "Dev Kit",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "68f63f5275b147d3",
        "type": "tab",
        "label": "dashboard2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "83b2474231efac73",
        "type": "tab",
        "label": "Cron",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8555b76c53e789e0",
        "type": "tab",
        "label": "EcoTaxa API",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8018bd5586fd4054",
        "type": "tab",
        "label": "Calibration",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6426e7bea6900426",
        "type": "tab",
        "label": "Calibration - Saturation Level",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "14c685bd04db8be5",
        "type": "tab",
        "label": "Calibration - Lightness",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3afb1d2b21be9114",
        "type": "tab",
        "label": "Calibration - Pixel size",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d5b2c64b84f8ed4f",
        "type": "tab",
        "label": "Calibration - Pump",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4ed26b8b.253504",
        "type": "subflow",
        "name": "Save hardware config",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "53d163be.47cf24"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b7861ce703215a01",
        "type": "subflow",
        "name": "Load hardware config",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "0f16258953fae292"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 40,
                "wires": [
                    {
                        "id": "d0fbcd200cd09981",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "63c85b96537b7355",
        "type": "subflow",
        "name": "Config",
        "info": "An input to this subflow will get the configuration to be saved to disk.\n\nOn startup, this node outputs the loaded configuration",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 160,
                "wires": [
                    {
                        "id": "5248e5e225d854d1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1040,
                "y": 60,
                "wires": [
                    {
                        "id": "f1c0a882a9e3d927",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "349e8016ec7515c6",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Text Fields",
        "style": {
            "label": true
        },
        "nodes": [
            "f9b137cda6a41cc8",
            "e42e71164274acdc",
            "a2eff4bb38731253"
        ],
        "x": 48,
        "y": 273,
        "w": 844,
        "h": 174
    },
    {
        "id": "224fcab0880dd093",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Slider",
        "style": {
            "label": true
        },
        "nodes": [
            "b2b82b3ee278d4bc",
            "cead53fe6d7fe793"
        ],
        "x": 34,
        "y": 659,
        "w": 232,
        "h": 122
    },
    {
        "id": "951b589e9ecbbb70",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Button toggles",
        "style": {
            "label": true
        },
        "nodes": [
            "7777baf58bd1bc87",
            "a43e9d9c640f6a51"
        ],
        "x": 34,
        "y": 799,
        "w": 292,
        "h": 122
    },
    {
        "id": "0d9513e4fa8e671f",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "generic",
        "style": {
            "label": true
        },
        "nodes": [
            "6d725e9d6e6752bd"
        ],
        "x": 34,
        "y": 19,
        "w": 192,
        "h": 82
    },
    {
        "id": "9ac62e47f20b26b7",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Preview",
        "style": {
            "label": true
        },
        "nodes": [
            "eeeea47645f9daca",
            "55bf230acc0db31a"
        ],
        "x": 34,
        "y": 939,
        "w": 232,
        "h": 122
    },
    {
        "id": "f6e28f1fc85830b2",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Textareas",
        "style": {
            "label": true
        },
        "nodes": [
            "ff04e338f28791c1",
            "a1de4783b40b22c7"
        ],
        "x": 34,
        "y": 1079,
        "w": 252,
        "h": 122
    },
    {
        "id": "c4dc9bdc60c02255",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Home",
        "style": {
            "label": true
        },
        "nodes": [
            "af21295c7ed58d76",
            "0666ca0a7a83550a"
        ],
        "x": 34,
        "y": 119,
        "w": 232,
        "h": 122
    },
    {
        "id": "f8c01569bc2d2351",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Loading methods",
        "style": {
            "label": true
        },
        "nodes": [
            "bdd5061dc2808c7b",
            "c7af759e6348052a",
            "f8450ada286a255f",
            "05f282f697c8d264",
            "1c2b9fbce068ea00",
            "9496c5ceae312a6b"
        ],
        "x": 34,
        "y": 1239,
        "w": 1192,
        "h": 162
    },
    {
        "id": "c0721ac2a3ae24b9",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Get and set variable in Global",
        "style": {
            "label": true
        },
        "nodes": [
            "bdef59faea812013",
            "5a9af1c11b3c3c31",
            "fc73d6b9b216ac9c",
            "e3f11510712aac2d",
            "be327c38d0d4571c"
        ],
        "x": 34,
        "y": 1419,
        "w": 712,
        "h": 202
    },
    {
        "id": "351aed98aa7531c4",
        "type": "group",
        "z": "68f63f5275b147d3",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bca5fdb275411c2c",
            "e2f462edae65edea",
            "8a5154c6b080da73",
            "91bf1946ddb3fb46",
            "b7d4a1f82502ab3e",
            "081ff493602c602a",
            "7be7d0f4f8091465",
            "04397b2484b470d5",
            "7d9e940e0a76d817",
            "9c81667a4c9b050e",
            "aa10a7441bf3a0c3",
            "fb1a7d1e12afbf61"
        ],
        "x": 34,
        "y": 119,
        "w": 832,
        "h": 262
    },
    {
        "id": "d331e690efb7d6e9",
        "type": "group",
        "z": "68f63f5275b147d3",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c9f8f2f7d2212740",
            "868fd2a5b5a083db",
            "678bf0eece4ac552",
            "58ed3f02a7d7e0e4",
            "dd23dcc3b10954ae",
            "872168aa279da8f7",
            "391d8cca2dc63aca",
            "360e22bb264967c2",
            "2730ffc2f82eed88",
            "3994b52159965684",
            "869c5f15f4cc5845",
            "747a73dd5151b3bb"
        ],
        "x": 34,
        "y": 439,
        "w": 832,
        "h": 242
    },
    {
        "id": "69f91f750b49fcab",
        "type": "group",
        "z": "68f63f5275b147d3",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "50cb535cd51f7270",
            "25f508676747b988",
            "dba284710f71897e"
        ],
        "x": 34,
        "y": 759,
        "w": 832,
        "h": 82
    },
    {
        "id": "239ace7a73b8b6df",
        "type": "group",
        "z": "68f63f5275b147d3",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "23a52935692ecb49",
            "b09174ffcc9250a0",
            "746c989af736cb33",
            "7da6b39ccb75384c",
            "2451da81a82f7915",
            "66756e43efce9726",
            "ac01daf9daeecf2a",
            "4441ba5d435ed9d7",
            "030373d0c2e162e1",
            "7cf9eaa2eb0776bf",
            "fe63985e284437cd"
        ],
        "x": 34,
        "y": 899,
        "w": 832,
        "h": 262
    },
    {
        "id": "910e195536aea223",
        "type": "group",
        "z": "83b2474231efac73",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a197bfa71c1761b4",
            "495e1733d60d5651",
            "0fdba9b9b11427db",
            "019662c5bf05e430",
            "8dc5b8c9bfd7cc87",
            "1c782af30d1ff770",
            "5f5dec5ac53119ae",
            "61dde05d9a3f805e",
            "b17728471bdfc61e",
            "e4719fcedaa61149",
            "9301eaa353ece507",
            "67bcd7bd5a4c38cc",
            "2a55ae214f1e7273",
            "8447c9830c3aed1e"
        ],
        "x": -6,
        "y": 19,
        "w": 1412,
        "h": 577
    },
    {
        "id": "751429d7682830be",
        "type": "group",
        "z": "83b2474231efac73",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "caf377d323526d14",
            "316dae6f231575b7",
            "9e169af039fc8031",
            "1bc303a19fc9e38b",
            "ff83a2795f988098",
            "fd3ae27267703c27",
            "527165cd7171fe26",
            "50629a570b41196e",
            "0aef9a09d59e574c",
            "a9701575d8df4ce1",
            "60d1ad2a7e54e60e",
            "f8df009e737eb044",
            "e6eb3b16a1d6bf22",
            "1997fd46811f0331",
            "5f091b11b5c9fa40",
            "0650e037776b3d8a"
        ],
        "x": 14,
        "y": 739,
        "w": 1812,
        "h": 522
    },
    {
        "id": "93ddbf84de2d9329",
        "type": "group",
        "z": "83b2474231efac73",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "18a7624f3ce50b88",
            "f5775e188cdc7044",
            "8a8548667bffc918",
            "b252475c605ebbbe",
            "4e3b5bdeec6a0be0",
            "46278c30b8d8f8c2"
        ],
        "x": 14,
        "y": 1211.5,
        "w": 1172,
        "h": 97
    },
    {
        "id": "19c3570e48774bd0",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Streaming",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "3829aff60cdc5be4"
        ],
        "x": 34,
        "y": 119,
        "w": 192,
        "h": 82
    },
    {
        "id": "631f3e38acec1bc6",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Step 1. Reset the value of the gains",
        "style": {
            "label": true
        },
        "nodes": [
            "ea8c4596e202f964",
            "4c7717ee07b97e8b",
            "0fa68c34208c36d2",
            "958aac3964d0faf4",
            "857257c8697a3b76"
        ],
        "x": 34,
        "y": 359,
        "w": 552,
        "h": 222
    },
    {
        "id": "b04534747af369bb",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Step 4. Adjust White Balance Settings",
        "style": {
            "label": true
        },
        "nodes": [
            "f13c467a5f891268",
            "3b5d942eccbc14ba",
            "3574f41671e9c607",
            "0e406c9af3e5a51e",
            "6d6fdc0c504bbc26",
            "cab52c68fd58220b",
            "06e4799523ede341",
            "801d9c0cb77d4caa"
        ],
        "x": 34,
        "y": 799,
        "w": 672,
        "h": 182
    },
    {
        "id": "a885abc248b6ba6e",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Step 2. Measure the Current Saturation Level",
        "style": {
            "label": true
        },
        "nodes": [
            "a99be895898a4f2f",
            "f7aececeb25feee2",
            "4a99ebbebc9e7d65",
            "a6cfdc06c50e2b7c",
            "69f90516888fb4c2",
            "bc2f402f6cdd8434",
            "6104a1880402810c",
            "224eba65a1a42b91"
        ],
        "x": 34,
        "y": 599,
        "w": 1442,
        "h": 82
    },
    {
        "id": "64fb52a5fc759893",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Step 3. Display White Balance Settings",
        "style": {
            "label": true
        },
        "nodes": [
            "f3d25e1060563ac8",
            "45f2ad943cee341f"
        ],
        "x": 34,
        "y": 699,
        "w": 392,
        "h": 82
    },
    {
        "id": "f591255fbfc6c466",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Step Bar",
        "style": {
            "label": true
        },
        "nodes": [
            "062a3af5e12e8445",
            "e5da27b9abdcb156"
        ],
        "x": 34,
        "y": 19,
        "w": 372,
        "h": 82
    },
    {
        "id": "0dcebaf2b57a4374",
        "type": "group",
        "z": "14c685bd04db8be5",
        "name": "Streaming",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "300c2d2496f1d12d"
        ],
        "x": 34,
        "y": 119,
        "w": 192,
        "h": 82
    },
    {
        "id": "da1cb3ed0c90bb56",
        "type": "group",
        "z": "3afb1d2b21be9114",
        "name": "Step Bar",
        "style": {
            "label": true
        },
        "nodes": [
            "05a5a9c4530d07ea",
            "419cccaf23eb2548"
        ],
        "x": 34,
        "y": 19,
        "w": 372,
        "h": 82
    },
    {
        "id": "d7c2ea70e05a360f",
        "type": "group",
        "z": "3afb1d2b21be9114",
        "name": "Streaming",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "5b95342353581bba"
        ],
        "x": 34,
        "y": 119,
        "w": 192,
        "h": 82
    },
    {
        "id": "0861054b07c3373d",
        "type": "group",
        "z": "d5b2c64b84f8ed4f",
        "name": "Step Bar",
        "style": {
            "label": true
        },
        "nodes": [
            "c92cd7e25b01278d",
            "f8db1578262f6bc8"
        ],
        "x": 34,
        "y": 19,
        "w": 372,
        "h": 82
    },
    {
        "id": "508d01c8283ee722",
        "type": "group",
        "z": "d5b2c64b84f8ed4f",
        "name": "Streaming",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "71ba57a25304e08f"
        ],
        "x": 34,
        "y": 119,
        "w": 192,
        "h": 82
    },
    {
        "id": "426f6cef77fbb290",
        "type": "group",
        "z": "14c685bd04db8be5",
        "name": "Step Bar",
        "style": {
            "label": true
        },
        "nodes": [
            "5fbdba7e61973f9a",
            "25cb0163587aee15"
        ],
        "x": 34,
        "y": 19,
        "w": 372,
        "h": 82
    },
    {
        "id": "f5929f8fbe9df063",
        "type": "group",
        "z": "6426e7bea6900426",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ec5d9fecc6b0cece",
            "5c444b714f250678",
            "cb467ae07b125bcc",
            "aad16ea9eae8d3dd",
            "97541b0d6dcf6747"
        ],
        "x": 34,
        "y": 219,
        "w": 562,
        "h": 122
    },
    {
        "id": "6452e42f1093802f",
        "type": "group",
        "z": "ab58b3fd0e6bcd77",
        "name": "Streaming",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "a57a165cd0ce511b"
        ],
        "x": 214,
        "y": 79,
        "w": 192,
        "h": 82
    },
    {
        "id": "4b86185ad4a4ade1",
        "type": "group",
        "z": "35d7387466dd0bc0",
        "name": "Streaming",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "ffe728d961068c62"
        ],
        "x": 114,
        "y": 99,
        "w": 192,
        "h": 82
    },
    {
        "id": "e8ba2d3274c7e963",
        "type": "group",
        "z": "35d7387466dd0bc0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7630af38d8e62254",
            "b3987ca157e030f6",
            "c1d6882488c0b3ac",
            "dde296786a762acb",
            "aa6924c7e0aff26c"
        ],
        "x": 114,
        "y": 199,
        "w": 832,
        "h": 142
    },
    {
        "id": "f9b137cda6a41cc8",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "g": "349e8016ec7515c6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f142197f943e06c3",
            "ba32092924c21704"
        ],
        "x": 74,
        "y": 299,
        "w": 252,
        "h": 122
    },
    {
        "id": "e42e71164274acdc",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "g": "349e8016ec7515c6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "09145421eca576b2",
            "96d4f5ed69c26184"
        ],
        "x": 334,
        "y": 299,
        "w": 272,
        "h": 122
    },
    {
        "id": "a2eff4bb38731253",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "g": "349e8016ec7515c6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f467dd95ca327abe",
            "9460aed131d64851"
        ],
        "x": 614,
        "y": 299,
        "w": 252,
        "h": 122
    },
    {
        "id": "e6ae26617c24c3ea",
        "type": "ui-base",
        "name": "PlanktoScope GUI v.2",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": true,
        "headerContent": "dashpage",
        "navigationStyle": "icon",
        "titleBarStyle": "fixed",
        "showReconnectNotification": true,
        "notificationDisplayTime": "1",
        "showDisconnectNotification": true
    },
    {
        "id": "8dc3722c.06efa8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "0.0.0.0",
        "port": "1883",
        "clientid": "Client_node",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "55cfcc6ceb405689",
        "type": "ui_tab",
        "name": "Home",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4f3d5cfdc68fe922",
        "type": "ui_tab",
        "name": "Optic Configuration",
        "icon": "fa-eye",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "50761224ed86afc1",
        "type": "ui_tab",
        "name": "Fluidic Acquisition",
        "icon": "fa-flask",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "67cf80b5ea45df5f",
        "type": "ui_tab",
        "name": "Segmentation",
        "icon": "fa-crop",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a0eef8994b69e8cf",
        "type": "ui_tab",
        "name": "System Monitoring",
        "icon": "fa-thermometer-full",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ae5e9836443dd30f",
        "type": "ui_group",
        "name": "Optic Characterization",
        "tab": "4f3d5cfdc68fe922",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5b40c92dc3f644d6",
        "type": "ui_group",
        "name": "Preview",
        "tab": "50761224ed86afc1",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "b73d4f2d8efadb3d",
        "type": "ui_group",
        "name": "Navigation",
        "tab": "67cf80b5ea45df5f",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c1482a5fd6f72aee",
        "type": "ui_group",
        "name": "Metrics",
        "tab": "a0eef8994b69e8cf",
        "order": 1,
        "disp": true,
        "width": "24",
        "collapse": true,
        "className": ""
    },
    {
        "id": "81a80e32347ff991",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#5900ce",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#5900ce",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#7e1bff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#5900ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "PlanktoScope",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "Y-MM-DD",
            "sizes": {
                "sx": 55,
                "sy": 55,
                "gx": 4,
                "gy": 4,
                "cx": 4,
                "cy": 4,
                "px": 4,
                "py": 4
            }
        }
    },
    {
        "id": "173b6eb9255bd0f0",
        "type": "ui_tab",
        "name": "Gallery",
        "icon": "fa-file-image-o",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "88657f803f95a5e4",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "173b6eb9255bd0f0",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "486aec4ef1c78e84",
        "type": "ui_tab",
        "name": "Sample",
        "icon": "fa-eyedropper",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9357a47fd3bafade",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "55cfcc6ceb405689",
        "order": 2,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "eca1eb3a0876214f",
        "type": "ui_group",
        "name": "Sample Identification",
        "tab": "486aec4ef1c78e84",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "b6fee9bf11163a2f",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "55cfcc6ceb405689",
        "order": 3,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "0c9d4568cb6446b1",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "55cfcc6ceb405689",
        "order": 4,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "174cb1732c05bf38",
        "type": "ui_group",
        "name": "Group 4",
        "tab": "55cfcc6ceb405689",
        "order": 5,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "0658f981f8f2e64b",
        "type": "ui_group",
        "name": "Group 5",
        "tab": "55cfcc6ceb405689",
        "order": 6,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "bf2d0fec97d70aca",
        "type": "ui_group",
        "name": "Group 6",
        "tab": "55cfcc6ceb405689",
        "order": 7,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "1abdae6972d5d7ac",
        "type": "ui_group",
        "name": "Sample Location",
        "tab": "486aec4ef1c78e84",
        "order": 3,
        "disp": false,
        "width": "10",
        "collapse": false
    },
    {
        "id": "27a8265c91e47bed",
        "type": "ui_group",
        "name": "Validation",
        "tab": "486aec4ef1c78e84",
        "order": 5,
        "disp": false,
        "width": 10,
        "collapse": false
    },
    {
        "id": "0f4f3cbf586e85ea",
        "type": "ui_group",
        "name": "Focus Adjustment",
        "tab": "4f3d5cfdc68fe922",
        "order": 2,
        "disp": true,
        "width": 4,
        "collapse": false
    },
    {
        "id": "d82c494488c16b2d",
        "type": "ui_group",
        "name": "Fluidic Manual Manipulation",
        "tab": "4f3d5cfdc68fe922",
        "order": 5,
        "disp": true,
        "width": 4,
        "collapse": false
    },
    {
        "id": "b323218e17f7d382",
        "type": "ui_group",
        "name": "Navigation",
        "tab": "4f3d5cfdc68fe922",
        "order": 6,
        "disp": false,
        "width": 4,
        "collapse": false
    },
    {
        "id": "c44a5e0a7105676d",
        "type": "ui_group",
        "name": "Acquisition",
        "tab": "50761224ed86afc1",
        "order": 3,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "adef48d622d3f733",
        "type": "ui_group",
        "name": "Navigation",
        "tab": "50761224ed86afc1",
        "order": 6,
        "disp": false,
        "width": "10",
        "collapse": false
    },
    {
        "id": "9e3802a3d7e9c0a8",
        "type": "ui_group",
        "name": "Statistics",
        "tab": "50761224ed86afc1",
        "order": 4,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "091f470e867fbcb4",
        "type": "ui_group",
        "name": "Navigation",
        "tab": "a0eef8994b69e8cf",
        "order": 7,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "317006e814b5c013",
        "type": "ui_group",
        "name": "Control",
        "tab": "67cf80b5ea45df5f",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "abf415671756729d",
        "type": "ui_group",
        "name": "Net Metadata",
        "tab": "486aec4ef1c78e84",
        "order": 4,
        "disp": false,
        "width": "10",
        "collapse": false
    },
    {
        "id": "4ad5877ccff6436a",
        "type": "ui_group",
        "name": "Information",
        "tab": "a0eef8994b69e8cf",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "6f11621d3ee8169b",
        "type": "ui_group",
        "name": "Status",
        "tab": "50761224ed86afc1",
        "order": 5,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "91827485c5004c33",
        "type": "ui_group",
        "name": "Status",
        "tab": "67cf80b5ea45df5f",
        "order": 2,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "54687d94b65e7316",
        "type": "ui_group",
        "name": "Camera Settings",
        "tab": "4f3d5cfdc68fe922",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "05c7fdde6e47afc6",
        "type": "ui_group",
        "name": "USB Backup",
        "tab": "a0eef8994b69e8cf",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "c6ce9033858f44c0",
        "type": "ui_tab",
        "name": "Wifi",
        "icon": "wifi",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "308a7c461794d72a",
        "type": "ui_tab",
        "name": "Administration",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2c7a015904f5dfec",
        "type": "ui_tab",
        "name": "Hardware Settings",
        "icon": "fa-cogs",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "303dceab90225465",
        "type": "ui_group",
        "name": "Settings",
        "tab": "2c7a015904f5dfec",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4fba3e2ba69e29c6",
        "type": "ui_group",
        "name": "GPS Status",
        "tab": "486aec4ef1c78e84",
        "order": 6,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "eba47d5955b908ce",
        "type": "ui_group",
        "name": "Shutdown",
        "tab": "55cfcc6ceb405689",
        "order": 8,
        "disp": true,
        "width": 4,
        "collapse": false
    },
    {
        "id": "358f1a07bdf05e4e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "eba47d5955b908ce",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "063399c02685e235",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c44a5e0a7105676d",
        "order": 8,
        "width": 10,
        "height": 1
    },
    {
        "id": "baec8b84d57bd537",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9e3802a3d7e9c0a8",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "875b8d5f77ed0111",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9e3802a3d7e9c0a8",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "417097c66403664a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9e3802a3d7e9c0a8",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "3a064cfd441a4242",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9e3802a3d7e9c0a8",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "04438e91726a091e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9e3802a3d7e9c0a8",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "72dd8b3eb80335e3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9e3802a3d7e9c0a8",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "d5a8fe75d3ef9ff8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "adef48d622d3f733",
        "order": 2,
        "width": 5,
        "height": 1
    },
    {
        "id": "021c0998ba3239e3",
        "type": "ui_spacer",
        "z": "12e3aa44e2f707ef",
        "name": "spacer",
        "group": "317006e814b5c013",
        "order": 7,
        "width": 10,
        "height": 1
    },
    {
        "id": "fd894324df039bb7",
        "type": "ui_spacer",
        "z": "12e3aa44e2f707ef",
        "name": "spacer",
        "group": "317006e814b5c013",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "1048f1d1610f7abb",
        "type": "ui_spacer",
        "z": "12e3aa44e2f707ef",
        "name": "spacer",
        "group": "91827485c5004c33",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "4615995cb069caed",
        "type": "ui_spacer",
        "z": "12e3aa44e2f707ef",
        "name": "spacer",
        "group": "91827485c5004c33",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "88a3013e51ea77e0",
        "type": "ui_group",
        "name": "Culture Date and Time",
        "tab": "486aec4ef1c78e84",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8dbc281e86c556a7",
        "type": "ui_spacer",
        "z": "5a1a7f62278e237a",
        "name": "spacer",
        "group": "eca1eb3a0876214f",
        "order": 5,
        "width": 10,
        "height": 1
    },
    {
        "id": "7dc62a6172f93f96",
        "type": "ui_spacer",
        "z": "5a1a7f62278e237a",
        "name": "spacer",
        "group": "4fba3e2ba69e29c6",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "43b9ea9e31c23552",
        "type": "ui_group",
        "name": "Setup",
        "tab": "55cfcc6ceb405689",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "940cc4ca02b248fb",
        "type": "ui_group",
        "name": "Preview",
        "tab": "4f3d5cfdc68fe922",
        "order": 1,
        "disp": true,
        "width": 18,
        "collapse": false
    },
    {
        "id": "9e586edc6ceea6d8",
        "type": "ui_group",
        "name": "Logs",
        "tab": "308a7c461794d72a",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c2a365127d3f75cc",
        "type": "ui_group",
        "name": "Add a new network",
        "tab": "c6ce9033858f44c0",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3e65099870a285f9",
        "type": "ui_group",
        "name": "Current Connection",
        "tab": "c6ce9033858f44c0",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f7770f0b818c3a67",
        "type": "ui-theme",
        "name": "PlanktoScope GUI 2",
        "colors": {
            "surface": "#ffffff",
            "primary": "#1976d2",
            "bgPage": "#dedede",
            "groupBg": "#ffffff",
            "groupOutline": "#9c9c9c"
        },
        "sizes": {
            "density": "compact",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "73070e06474249b4",
        "type": "ui-page",
        "name": "Metadata",
        "ui": "e6ae26617c24c3ea",
        "path": "/metadata",
        "icon": "mdi-comment-text",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "dd015fda7456b9b0",
        "type": "ui-group",
        "name": "Navigation Top",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "69c772603e9cec0d",
        "type": "ui-group",
        "name": "Sample Information",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "6fab47af451c6d95",
        "type": "ui-group",
        "name": "Starting point",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "1cfe3062a8353012",
        "type": "ui-group",
        "name": "Ending point",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "cb3521392eb4e9ed",
        "type": "ui-group",
        "name": "Net Specificity",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "dd4d9707051041c9",
        "type": "ui-group",
        "name": "Other informations",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 6,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "59ce6abfbb7f8683",
        "type": "ui-group",
        "name": "Navigation Bottom",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 7,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7a4e042a60b734a6",
        "type": "ui-page",
        "name": "Segmentation",
        "ui": "e6ae26617c24c3ea",
        "path": "/segmentation",
        "icon": "mdi-vector-square",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 5,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "bfd4acb7b243514f",
        "type": "ui-group",
        "name": "Table",
        "page": "7a4e042a60b734a6",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "ec4034b59a08cd35",
        "type": "ui-page",
        "name": "Controls",
        "ui": "e6ae26617c24c3ea",
        "path": "/controls",
        "icon": "controller-classic",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 7,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "f8b3bc50def91622",
        "type": "ui-group",
        "name": "Stream",
        "page": "ec4034b59a08cd35",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "ae84f28de970e590",
        "type": "ui-group",
        "name": "Controls",
        "page": "ec4034b59a08cd35",
        "width": "4",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c8bb5168bda76add",
        "type": "ui-page",
        "name": "Cron Experiment",
        "ui": "e6ae26617c24c3ea",
        "path": "/plots",
        "icon": "sync",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 8,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "4a8738206c62b02e",
        "type": "ui-group",
        "name": "Plots",
        "page": "c8bb5168bda76add",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7edf5f14f6ca0bdd",
        "type": "ui-group",
        "name": "Feed",
        "page": "c8bb5168bda76add",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e41267c4a14ba4af",
        "type": "ui-spacer",
        "group": "4a8738206c62b02e",
        "name": "spacer",
        "tooltip": "",
        "order": 6,
        "width": "6",
        "height": 1,
        "className": ""
    },
    {
        "id": "9d9ac37fd36c358e",
        "type": "ui-spacer",
        "group": "4a8738206c62b02e",
        "name": "spacer",
        "tooltip": "",
        "order": 9,
        "width": "6",
        "height": 1,
        "className": ""
    },
    {
        "id": "db02fe254c34125f",
        "type": "ui-spacer",
        "group": "4a8738206c62b02e",
        "name": "spacer",
        "tooltip": "",
        "order": 12,
        "width": "6",
        "height": 1,
        "className": ""
    },
    {
        "id": "ff024f7a460585b4",
        "type": "ui-spacer",
        "group": "4a8738206c62b02e",
        "name": "spacer",
        "tooltip": "",
        "order": 3,
        "width": "6",
        "height": 1,
        "className": ""
    },
    {
        "id": "f22f627015431032",
        "type": "ui-page",
        "name": "Calibration - Lightness",
        "ui": "e6ae26617c24c3ea",
        "path": "/calibration_lightness",
        "icon": "target-variant",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 11,
        "className": "",
        "visible": "false",
        "disabled": "false"
    },
    {
        "id": "705156ec7eedfb1e",
        "type": "ui-group",
        "name": "Preview",
        "page": "f22f627015431032",
        "width": "4",
        "height": "6",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "728c7ed3d63dfcee",
        "type": "ui-group",
        "name": "Settings",
        "page": "f22f627015431032",
        "width": "8",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "aa9ba6cedf56d2cd",
        "type": "ui-page",
        "name": "Calibration - Pixel size",
        "ui": "e6ae26617c24c3ea",
        "path": "/calibration_pixel_size",
        "icon": "target-variant",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 12,
        "className": "",
        "visible": "false",
        "disabled": "false"
    },
    {
        "id": "c966455a52d121c0",
        "type": "ui-group",
        "name": "Settings",
        "page": "aa9ba6cedf56d2cd",
        "width": "8",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c9933f7d77fc6f01",
        "type": "ui-group",
        "name": "Preview",
        "page": "aa9ba6cedf56d2cd",
        "width": "4",
        "height": "6",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "48216bc1f7c53a75",
        "type": "ui-page",
        "name": "Calibration - Pump",
        "ui": "e6ae26617c24c3ea",
        "path": "/calibration_pump",
        "icon": "target-variant",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 13,
        "className": "",
        "visible": "false",
        "disabled": "false"
    },
    {
        "id": "0c3ae4988f81c2ac",
        "type": "ui-group",
        "name": "Preview",
        "page": "48216bc1f7c53a75",
        "width": "4",
        "height": "6",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "6039d653304537af",
        "type": "ui-group",
        "name": "Settings",
        "page": "48216bc1f7c53a75",
        "width": "8",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "803aa402d5c66b73",
        "type": "ui-page",
        "name": "Calibration - Saturation Level",
        "ui": "e6ae26617c24c3ea",
        "path": "/calibration_saturation_level",
        "icon": "target-variant",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 10,
        "className": "",
        "visible": "false",
        "disabled": "false"
    },
    {
        "id": "297b9a8eaa0287e2",
        "type": "ui-group",
        "name": "Preview",
        "page": "803aa402d5c66b73",
        "width": "4",
        "height": "6",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "af8acdfe9afbad74",
        "type": "ui-group",
        "name": "Settings",
        "page": "803aa402d5c66b73",
        "width": "8",
        "height": "8",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "f8dd620721c6d70b",
        "type": "ui-page",
        "name": "Calibration",
        "ui": "e6ae26617c24c3ea",
        "path": "/calibration",
        "icon": "mdi-tune",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 9,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c29c835a70533b69",
        "type": "ui-group",
        "name": "header",
        "page": "f8dd620721c6d70b",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "822cdc5b6ef13f39",
        "type": "ui-group",
        "name": "body",
        "page": "f8dd620721c6d70b",
        "width": "12",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "518a4242f548c1f2",
        "type": "ui-group",
        "name": "links",
        "page": "f8dd620721c6d70b",
        "width": "12",
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "bcc78241b99ba27f",
        "type": "ui-page",
        "name": "Preview",
        "ui": "e6ae26617c24c3ea",
        "path": "/preview",
        "icon": "mdi-eye",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "58ab4d5e3dd68192",
        "type": "ui-group",
        "name": "Streaming",
        "page": "bcc78241b99ba27f",
        "width": "7",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "39cbd2658f16d608",
        "type": "ui-group",
        "name": "Pump settings",
        "page": "bcc78241b99ba27f",
        "width": "5",
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "5c3e73c675caac42",
        "type": "ui-page",
        "name": "Acquisition",
        "ui": "e6ae26617c24c3ea",
        "path": "/acquisition",
        "icon": "mdi-play-circle",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 4,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "b274327af3807b79",
        "type": "ui-group",
        "name": "Streaming",
        "page": "5c3e73c675caac42",
        "width": "7",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "d2f77573ed4317e4",
        "type": "ui-group",
        "name": "Acquisition settings",
        "page": "5c3e73c675caac42",
        "width": "5",
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "b9f88d899abc43e6",
        "type": "ui-page",
        "name": "Dev Kit",
        "ui": "e6ae26617c24c3ea",
        "path": "/devkit",
        "icon": "mdi-database-plus",
        "layout": "tabs",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 6,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "3496e96aaf509c63",
        "type": "ui-group",
        "name": "Generic",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "0b938df814df6f89",
        "type": "ui-group",
        "name": "Text fields",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "4b77e32bb8af68b1",
        "type": "ui-group",
        "name": "Loading methods",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "42ad8472e579096e",
        "type": "ui-group",
        "name": "Sliders",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 7,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e461e16bf6fe45b0",
        "type": "ui-group",
        "name": "Button toggles",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 8,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c503a4c01451fec2",
        "type": "ui-group",
        "name": "Preview",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 9,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9919d82f68c7a152",
        "type": "ui-group",
        "name": "Textareas",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 10,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "2ca4adc305fbadd5",
        "type": "ui-group",
        "name": "Landing Page",
        "page": "b9f88d899abc43e6",
        "width": "6",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "72483a7aac978971",
        "type": "ui-group",
        "name": "Get and set variable in Global",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "632260133d581caa",
        "type": "ui-page",
        "name": "Home",
        "ui": "e6ae26617c24c3ea",
        "path": "/home",
        "icon": "home",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "713fd4c3b9030f45",
        "type": "ui-group",
        "name": "body",
        "page": "632260133d581caa",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "5d39a98563150f22",
        "type": "ui-group",
        "name": "header",
        "page": "632260133d581caa",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "cf3554d2bdb02f22",
        "type": "ui-group",
        "name": "links",
        "page": "632260133d581caa",
        "width": "12",
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7572915171e440cd",
        "type": "ui-group",
        "name": "Navigation",
        "page": "bcc78241b99ba27f",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "3ae252a2e5abca89",
        "type": "ui-group",
        "name": "Navigation",
        "page": "5c3e73c675caac42",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7dcc8848e91343c8",
        "type": "ui-group",
        "name": "Focus settings",
        "page": "bcc78241b99ba27f",
        "width": "5",
        "height": 1,
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "86e89a98bf95c5fa",
        "type": "ui-group",
        "name": "Light settings",
        "page": "bcc78241b99ba27f",
        "width": "5",
        "height": 1,
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "6b7305fbb10eb680",
        "type": "ui-group",
        "name": "Camera settings",
        "page": "bcc78241b99ba27f",
        "width": "5",
        "height": 1,
        "order": 6,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "1c1efabff5115209",
        "type": "ui-group",
        "name": "Number field",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": 1,
        "order": 6,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "1190bcb9f9eb9202",
        "type": "ui-group",
        "name": "To Segment",
        "page": "7a4e042a60b734a6",
        "width": "12",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "82099021.9ceb08",
        "type": "file",
        "z": "4ed26b8b.253504",
        "name": "",
        "filename": "/home/pi/PlanktoScope/hardware.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 660,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "bb0a8725.a1849",
        "type": "json",
        "z": "4ed26b8b.253504",
        "name": "Create JSON",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 490,
        "y": 40,
        "wires": [
            [
                "82099021.9ceb08"
            ]
        ]
    },
    {
        "id": "53d163be.47cf24",
        "type": "function",
        "z": "4ed26b8b.253504",
        "name": "Update and retrieve hardware_conf",
        "func": "// change global\nhardware_conf = global.get(\"hardware_conf\");\n\nif (msg.topic == \"process_pixel_fixed\" && msg.payload == 0){\n    delete hardware_conf[msg.topic]\n    delete msg.topic\n}\n\nif (msg.topic !== null && msg.topic !== undefined){\n    hardware_conf[msg.topic] = msg.payload;\n    global.set(\"hardware_conf\", hardware_conf);\n}\n\nreturn {\"payload\": hardware_conf};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 40,
        "wires": [
            [
                "bb0a8725.a1849"
            ]
        ]
    },
    {
        "id": "0f16258953fae292",
        "type": "file in",
        "z": "b7861ce703215a01",
        "name": "",
        "filename": "/home/pi/PlanktoScope/hardware.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 250,
        "y": 40,
        "wires": [
            [
                "81c516291ab19acd"
            ]
        ],
        "info": "# PlanktoScope Help\nThis Node will read the content of the file named **config.txt** containing all the input placeholders.\n"
    },
    {
        "id": "81c516291ab19acd",
        "type": "json",
        "z": "b7861ce703215a01",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 510,
        "y": 40,
        "wires": [
            [
                "d0fbcd200cd09981"
            ]
        ]
    },
    {
        "id": "d0fbcd200cd09981",
        "type": "change",
        "z": "b7861ce703215a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hardware_conf",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "730b2780ac215a52",
        "type": "file in",
        "z": "63c85b96537b7355",
        "name": "",
        "filename": "/home/pi/PlanktoScope/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "e0b7238a0c5d4ed0"
            ]
        ],
        "info": "# PlanktoScope Help\nThis Node will read the content of the file named **config.txt** containing all the input placeholders.\n"
    },
    {
        "id": "e0b7238a0c5d4ed0",
        "type": "json",
        "z": "63c85b96537b7355",
        "name": "config.json",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 60,
        "wires": [
            [
                "f1c0a882a9e3d927"
            ]
        ]
    },
    {
        "id": "b8109badf5f39d35",
        "type": "file",
        "z": "63c85b96537b7355",
        "name": "",
        "filename": "/home/pi/PlanktoScope/config.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "31ae9b857627673c",
        "type": "json",
        "z": "63c85b96537b7355",
        "name": "config.json",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 730,
        "y": 160,
        "wires": [
            [
                "b8109badf5f39d35"
            ]
        ]
    },
    {
        "id": "f1c0a882a9e3d927",
        "type": "function",
        "z": "63c85b96537b7355",
        "name": "Global Set",
        "func": "global.set(\"config_keys\", Object.keys(msg.payload));\n\nfor (const key in msg.payload) {\n    global.set(key, msg.payload[key]);\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "24ea99bb02eeffa2",
        "type": "inject",
        "z": "63c85b96537b7355",
        "name": "Load config",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 230,
        "y": 60,
        "wires": [
            [
                "730b2780ac215a52"
            ]
        ]
    },
    {
        "id": "5248e5e225d854d1",
        "type": "function",
        "z": "63c85b96537b7355",
        "name": "get config payload",
        "func": "keys = global.get(\"config_keys\")\n\nvar payload = {}\n\nkeys.forEach(function(item, index, array) {\n  payload[item] = global.get(item);\n})\n\nreturn {\"payload\": payload};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 160,
        "wires": [
            [
                "31ae9b857627673c"
            ]
        ]
    },
    {
        "id": "97f8a94e71055782",
        "type": "ui_ui_control",
        "z": "63c85b96537b7355",
        "name": "Connect Event",
        "events": "connect",
        "x": 220,
        "y": 100,
        "wires": [
            [
                "730b2780ac215a52"
            ]
        ]
    },
    {
        "id": "34eff819e4103954",
        "type": "ui_ui_control",
        "z": "0a3c403539f8c642",
        "name": "",
        "events": "change",
        "x": 440,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "105ba6d5e92ec771",
        "type": "ui_template",
        "z": "0a3c403539f8c642",
        "group": "b6fee9bf11163a2f",
        "name": "Optic Configuration",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<md-button ng-click=\"send({payload: {tab:'Optic Configuration'}})\" style=\"height:100%;\">\n    <i class=\"fa fa-eye fa-5x\"></i>\n    <div style=\"margin-top:30px;\">Optic Configuration</div>\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "34eff819e4103954"
            ]
        ]
    },
    {
        "id": "abf38b70ef2f0960",
        "type": "ui_template",
        "z": "0a3c403539f8c642",
        "group": "0c9d4568cb6446b1",
        "name": "Fluidic Acquisition",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<md-button ng-click=\"send({payload: {tab:'Fluidic Acquisition'}})\" style=\"height:100%;\">\n    <i class=\"fa fa-flask fa-5x\"></i>\n    <div style=\"margin-top:30px;\">Fluidic Acquisition</div>\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "34eff819e4103954"
            ]
        ]
    },
    {
        "id": "c7055aef56ba5d0a",
        "type": "ui_template",
        "z": "0a3c403539f8c642",
        "group": "174cb1732c05bf38",
        "name": "Segmentation",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<md-button ng-click=\"send({payload: {tab:'Segmentation'}})\" style=\"height:100%;\">\n    <i class=\"fa fa-crop fa-5x\"></i>\n    <div style=\"margin-top:30px;\">Segmentation</div>\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "34eff819e4103954"
            ]
        ]
    },
    {
        "id": "037f09544a5c6d44",
        "type": "ui_template",
        "z": "0a3c403539f8c642",
        "group": "0658f981f8f2e64b",
        "name": "Gallery",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<md-button ng-click=\"send({payload: {tab:'Gallery'}})\" style=\"height:100%;\">\n    <i class=\"fa fa-file-image-o fa-5x\"></i>\n    <div style=\"margin-top:30px;\">Gallery</div>\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "34eff819e4103954"
            ]
        ]
    },
    {
        "id": "d4b6479816b4af38",
        "type": "ui_template",
        "z": "0a3c403539f8c642",
        "group": "bf2d0fec97d70aca",
        "name": "System Monitoring",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<md-button ng-click=\"send({payload: {tab:'System Monitoring'}})\" style=\"height:100%;\">\n    <i class=\"fa fa-thermometer-full fa-5x\"></i>\n    <div style=\"margin-top:30px;\">System Monitoring</div>\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "34eff819e4103954"
            ]
        ]
    },
    {
        "id": "61805fd49c9d7747",
        "type": "ui_template",
        "z": "0a3c403539f8c642",
        "group": "9357a47fd3bafade",
        "name": "Sample",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<md-button ng-click=\"send({payload: {tab:'Sample'}})\" style=\"height:100%;\">\n    <i class=\"fa fa-eyedropper fa-5x\"></i>\n    <div style=\"margin-top:30px;\">Sample</div>\n    <br>\n    In doubt? Start Here!\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "34eff819e4103954"
            ]
        ]
    },
    {
        "id": "8852c5984c0aeabd",
        "type": "ui_button",
        "z": "0a3c403539f8c642",
        "name": "Unlock button",
        "group": "eba47d5955b908ce",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Unlock button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "shutdown",
        "payloadType": "flow",
        "topic": "",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "3dac7b09d8fe884a"
            ]
        ]
    },
    {
        "id": "9f2d8c054f67b314",
        "type": "ui_toast",
        "z": "0a3c403539f8c642",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "YES PLEASE",
        "cancel": "NO!",
        "raw": false,
        "topic": "Are you sure?",
        "name": "Confirmation message",
        "x": 800,
        "y": 380,
        "wires": [
            [
                "99c6c77439af4772"
            ]
        ]
    },
    {
        "id": "2800b14a3e4946d3",
        "type": "inject",
        "z": "0a3c403539f8c642",
        "name": "disabled",
        "props": [
            {
                "p": "enabled",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "e3b15361cbb5ba06"
            ]
        ]
    },
    {
        "id": "63ea1455af8ffa72",
        "type": "ui_button",
        "z": "0a3c403539f8c642",
        "name": "Shutdown button",
        "group": "eba47d5955b908ce",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "icon": "fa-power-off fa-2x",
        "payload": "Do you want to turn the machine off now?",
        "payloadType": "str",
        "topic": "",
        "x": 550,
        "y": 380,
        "wires": [
            [
                "9f2d8c054f67b314"
            ]
        ]
    },
    {
        "id": "e3b15361cbb5ba06",
        "type": "change",
        "z": "0a3c403539f8c642",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "shutdown",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "shutdown",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 420,
        "wires": [
            [
                "63ea1455af8ffa72"
            ]
        ]
    },
    {
        "id": "3dac7b09d8fe884a",
        "type": "function",
        "z": "0a3c403539f8c642",
        "name": "Toggle",
        "func": "flow.set(\"shutdown\", !flow.get(\"shutdown\"))\nmsg.enabled = flow.get(\"shutdown\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 380,
        "wires": [
            [
                "63ea1455af8ffa72"
            ]
        ]
    },
    {
        "id": "803dfd592306935e",
        "type": "ui_template",
        "z": "0a3c403539f8c642",
        "group": "eba47d5955b908ce",
        "name": "Shutdown information",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<center>To prevent data corruption, please <b>always shutdown the machine</b> before unplugging the unit.\n<br><br>\nRemember to first unlock the shutdown button.\n</center>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 120,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "e71b548487a8e3a7",
        "type": "link out",
        "z": "0a3c403539f8c642",
        "name": "Home shutdown button",
        "links": [
            "677a9b9232bb2cbc"
        ],
        "x": 715,
        "y": 500,
        "wires": []
    },
    {
        "id": "93996b4b0e1cfc79",
        "type": "ui_toast",
        "z": "0a3c403539f8c642",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Turning off now!",
        "name": "Shutdown message",
        "x": 580,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "0a55bda2967430f6",
        "type": "change",
        "z": "0a3c403539f8c642",
        "name": "shutdown!",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "shutdown",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 500,
        "wires": [
            [
                "e71b548487a8e3a7"
            ]
        ]
    },
    {
        "id": "99c6c77439af4772",
        "type": "switch",
        "z": "0a3c403539f8c642",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "NO!",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 500,
        "wires": [
            [
                "e3b15361cbb5ba06"
            ],
            [
                "0a55bda2967430f6",
                "12ba5e945c893ce0"
            ]
        ]
    },
    {
        "id": "12ba5e945c893ce0",
        "type": "change",
        "z": "0a3c403539f8c642",
        "name": "Shutdown message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please wait a minute before disconnecting the machine from its power supply!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 540,
        "wires": [
            [
                "93996b4b0e1cfc79"
            ]
        ]
    },
    {
        "id": "483b1806dfcf37ce",
        "type": "comment",
        "z": "0a3c403539f8c642",
        "name": "LICENSE",
        "info": "Copyright 2022 Thibaut Pollina and Romain Bazile\nLicensed under GPL v3.0",
        "x": 140,
        "y": 600,
        "wires": []
    },
    {
        "id": "68916ef083a68625",
        "type": "ui_ui_control",
        "z": "0a3c403539f8c642",
        "name": "",
        "events": "all",
        "x": 700,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "77d5885a7339cf8d",
        "type": "ui_dropdown",
        "z": "0a3c403539f8c642",
        "name": "",
        "label": "Hardware version",
        "tooltip": "",
        "place": "Select option",
        "group": "43b9ea9e31c23552",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "PlanktoScope v2.3",
                "type": "str"
            },
            {
                "label": "",
                "value": "PlanktoScope v2.5",
                "type": "str"
            },
            {
                "label": "",
                "value": "PlanktoScope v2.6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "acq_instrument",
        "topicType": "str",
        "className": "",
        "x": 490,
        "y": 640,
        "wires": [
            [
                "fb785c22e826292e"
            ]
        ]
    },
    {
        "id": "fb785c22e826292e",
        "type": "link out",
        "z": "0a3c403539f8c642",
        "name": "Set hardware version",
        "mode": "link",
        "links": [
            "97ba318ffe045ed1"
        ],
        "x": 655,
        "y": 640,
        "wires": []
    },
    {
        "id": "d755c4e7836bf301",
        "type": "switch",
        "z": "0a3c403539f8c642",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 680,
        "wires": [
            [
                "77d5885a7339cf8d",
                "e797e609069b355f"
            ],
            [
                "6c880626da17b1c4"
            ]
        ]
    },
    {
        "id": "e797e609069b355f",
        "type": "change",
        "z": "0a3c403539f8c642",
        "name": "Show setup panel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Home_Setup\"],\"hide\":[\"Home_Group_1\",\"Home_Group_2\",\"Home_Group_3\",\"Home_Group_4\",\"Home_Group_5\",\"Home_Group_6\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 680,
        "wires": [
            [
                "68916ef083a68625"
            ]
        ]
    },
    {
        "id": "6c880626da17b1c4",
        "type": "change",
        "z": "0a3c403539f8c642",
        "name": "Show home buttons",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Home_Setup\"],\"show\":[\"Home_Group_1\",\"Home_Group_2\",\"Home_Group_3\",\"Home_Group_4\",\"Home_Group_5\",\"Home_Group_6\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 720,
        "wires": [
            [
                "68916ef083a68625"
            ]
        ]
    },
    {
        "id": "e1f474bdae8b2e26",
        "type": "ui_template",
        "z": "0a3c403539f8c642",
        "group": "43b9ea9e31c23552",
        "name": "Information",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<div>\n    <p>\n        To start using your PlanktoScope, please indicate the version of your PlanktoScope hardware:\n    </p>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 710,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "314079dfd76acfb9",
        "type": "link in",
        "z": "0a3c403539f8c642",
        "name": "Load hardware version",
        "links": [
            "ca1dcba514a4edfb",
            "7465541e9bea5f11"
        ],
        "x": 185,
        "y": 680,
        "wires": [
            [
                "d755c4e7836bf301"
            ]
        ]
    },
    {
        "id": "b4b2ab539b467728",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_ship",
        "label": "Name of the ship",
        "tooltip": "",
        "group": "eca1eb3a0876214f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "300",
        "topic": "sample_ship",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 670,
        "y": 80,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "3e7a61a3cee3ca7b",
        "type": "ui_dropdown",
        "z": "5a1a7f62278e237a",
        "name": "sample_sampling_gear",
        "label": "Sampling gear*",
        "tooltip": "",
        "place": "Choose from list",
        "group": "eca1eb3a0876214f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "High Speed Net",
                "value": "net_hsn",
                "type": "str"
            },
            {
                "label": "Tara Decknet",
                "value": "net_decknet",
                "type": "str"
            },
            {
                "label": "Plankton net",
                "value": "net",
                "type": "str"
            },
            {
                "label": "Niskin bottle 12L",
                "value": "niskin_12L",
                "type": "str"
            },
            {
                "label": "Niskin bottle 24L",
                "value": "niskin_24L",
                "type": "str"
            },
            {
                "label": "Pass Hull",
                "value": "pass_hull",
                "type": "str"
            },
            {
                "label": "Single location (with net or bucket)",
                "value": "single_location",
                "type": "str"
            },
            {
                "label": "Lab culture",
                "value": "culture",
                "type": "str"
            },
            {
                "label": "Test",
                "value": "test",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "sample_sampling_gear",
        "topicType": "str",
        "className": "",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "eea66f9e7f8ef946",
                "e23e2ff7b4eb7ecc",
                "dc5e8ff5382b4f96"
            ]
        ]
    },
    {
        "id": "a52f75e5e87e9a8a",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_operator",
        "label": "Name of the operator*",
        "tooltip": "",
        "group": "eca1eb3a0876214f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "300",
        "topic": "sample_operator",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 650,
        "y": 160,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "3bc35542530dd198",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_project",
        "label": "Name of the project*",
        "tooltip": "",
        "group": "eca1eb3a0876214f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "300",
        "topic": "sample_project",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 660,
        "y": 40,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "6bcc8982b3061e84",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_id",
        "label": "Station ID*",
        "tooltip": "",
        "group": "eca1eb3a0876214f",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "300",
        "topic": "sample_id",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 670,
        "y": 120,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "eea66f9e7f8ef946",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "set global",
        "func": "global.set(msg.topic,msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7777d1d8532d8319",
        "type": "ui_ui_control",
        "z": "5a1a7f62278e237a",
        "name": "",
        "events": "change",
        "x": 400,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "6b2e8a78ba30fdef",
        "type": "ui_toast",
        "z": "5a1a7f62278e237a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 710,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "9eb1dcd04424d322",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "Check form",
        "func": "var sample_project= global.get(\"sample_project\");\nvar sample_id= global.get(\"sample_id\");\nvar sample_operator= global.get(\"sample_operator\");\nvar sample_sampling_gear= global.get(\"sample_sampling_gear\");\nvar object_lat= global.get(\"object_lat\");\nvar object_lon= global.get(\"object_lon\");\nvar object_date= global.get(\"object_date\");\nvar object_time= global.get(\"object_time\");\nif (sample_project === undefined || sample_project === \"\") {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Sample project\"\n    return [null, msg];\n}\n\nelse if (sample_id === undefined || sample_id === \"\") {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Sample ID\"\n    return [null, msg];\n}\n\nelse if (sample_operator === undefined || sample_operator === \"\") {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Sample operator\"\n    return [null, msg];\n}\n\nelse if (sample_sampling_gear === undefined || sample_sampling_gear === \"\") {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Sample sampling gear\"\n    return [null, msg];\n}\n\nelse if (object_lat === undefined || object_lat === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Latitude of sample\"\n    return [null, msg];\n}\n\nelse if (object_lon === undefined || object_lon === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Longitude of sample\"\n    return [null, msg];\n}\n\nelse if (object_date === undefined || object_date === \"\") {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Date of sample\"\n    return [null, msg];\n}\n\nelse if (object_time === undefined || object_time === \"\") {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Time of sample\"\n    return [null, msg];\n}\nelse if (sample_sampling_gear.startsWith(\"net\")){\n    var object_lat_end = global.get(\"object_lat_end\");\n    var object_lon_end = global.get(\"object_lon_end\");\n    var object_date_end = global.get(\"object_date_end\");\n    var object_time_end = global.get(\"object_time_end\");\n    var sample_gear_net_opening = global.get(\"sample_gear_net_opening\");\n\n    if (object_lat_end === undefined || object_lat_end === null) {\n        msg.topic = \"Missing entry :\"\n        msg.payload = \"Latitude of retrieval\"\n        return [null, msg];\n    }\n    \n    else if (object_lon_end === undefined || object_lon_end === null) {\n        msg.topic = \"Missing entry :\"\n        msg.payload = \"Longitude of retrieval\"\n        return [null, msg];\n    }\n    \n    else if (object_date_end === undefined || object_date_end === \"\") {\n        msg.topic = \"Missing entry :\"\n        msg.payload = \"Date of retrieval\"\n        return [null, msg];\n    }\n    \n    else if (object_time_end === undefined || object_time_end === \"\") {\n        msg.topic = \"Missing entry :\"\n        msg.payload = \"Time of retrieval\"\n        return [null, msg];\n    }\n    \n    else if (sample_gear_net_opening === undefined || sample_gear_net_opening === \"\") {\n        msg.topic = \"Missing entry :\"\n        msg.payload = \"Net opening dimension\"\n        return [null, msg];\n    }\n    \n    if (sample_sampling_gear == \"net_decknet\"){\n        var sample_total_volume = global.get(\"sample_total_volume\");\n        if (sample_total_volume === undefined || sample_total_volume === \"\") {\n            msg.topic = \"Missing entry :\"\n            msg.payload = \"Decknet flowmeter readings\"\n            return [null, msg];\n        }\n    }\n}\nmsg.topic = \"config_save\"\nmsg.payload={\"tab\":\"Optic Configuration\"};\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 940,
        "wires": [
            [
                "37c9a09b5a218899",
                "e998a1c32134ac8e"
            ],
            [
                "6b2e8a78ba30fdef"
            ]
        ],
        "outputLabels": [
            "message",
            "error"
        ]
    },
    {
        "id": "37c9a09b5a218899",
        "type": "ui_ui_control",
        "z": "5a1a7f62278e237a",
        "name": "",
        "events": "change",
        "x": 700,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "1c477b9a8396b389",
        "type": "ui_button",
        "z": "5a1a7f62278e237a",
        "name": "",
        "group": "27a8265c91e47bed",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Previous",
        "tooltip": "",
        "color": "#097479",
        "bgcolor": "white",
        "icon": "keyboard_return",
        "payload": "{\"tab\":\"Home\"}",
        "payloadType": "json",
        "topic": "",
        "x": 240,
        "y": 880,
        "wires": [
            [
                "7777d1d8532d8319"
            ]
        ]
    },
    {
        "id": "9b7a4ec5e562fc3e",
        "type": "ui_button",
        "z": "5a1a7f62278e237a",
        "name": "",
        "group": "27a8265c91e47bed",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Continue",
        "tooltip": "",
        "color": "#097479",
        "bgcolor": "white",
        "icon": "keyboard_tab",
        "payload": "{\"tab\":\"Home\"}",
        "payloadType": "json",
        "topic": "",
        "x": 240,
        "y": 940,
        "wires": [
            [
                "9eb1dcd04424d322"
            ]
        ]
    },
    {
        "id": "0aa61bd0f88f19af",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "get sample_projet",
        "func": "msg.payload = msg.payload.sample_project;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 40,
        "wires": [
            [
                "3bc35542530dd198"
            ]
        ]
    },
    {
        "id": "2734e969db149241",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "get sample_ship",
        "func": "msg.payload = msg.payload.sample_ship;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 80,
        "wires": [
            [
                "b4b2ab539b467728"
            ]
        ]
    },
    {
        "id": "9be234d034e667b5",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "get sample_id",
        "func": "msg.payload = msg.payload.sample_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            [
                "6bcc8982b3061e84"
            ]
        ]
    },
    {
        "id": "f1fe94b72c3b5d4f",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "get sample_operator",
        "func": "msg.payload = msg.payload.sample_operator;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 160,
        "wires": [
            [
                "a52f75e5e87e9a8a"
            ]
        ]
    },
    {
        "id": "0f1e55ed1d8b1633",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "get sample_sampling_gear",
        "func": "msg.topic = \"sample_sampling_gear\"\nif (msg.payload.sample_sampling_gear === undefined){\n    msg.payload = \"net\";\n}\nelse\n{\n    msg.payload = msg.payload.sample_sampling_gear;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 200,
        "wires": [
            [
                "3e7a61a3cee3ca7b"
            ]
        ]
    },
    {
        "id": "0b1b7b57d2e82d89",
        "type": "subflow:63c85b96537b7355",
        "z": "5a1a7f62278e237a",
        "name": "",
        "env": [],
        "x": 70,
        "y": 220,
        "wires": [
            [
                "0aa61bd0f88f19af",
                "2734e969db149241",
                "9be234d034e667b5",
                "f1fe94b72c3b5d4f",
                "cdbb92231ebb4b71",
                "82089ae8432b495b",
                "2e3b95a095ff6bb8",
                "c7a84d780adb048c",
                "b6abe4ea2ee58fe5",
                "0f1e55ed1d8b1633"
            ]
        ]
    },
    {
        "id": "e998a1c32134ac8e",
        "type": "subflow:63c85b96537b7355",
        "z": "5a1a7f62278e237a",
        "name": "",
        "env": [],
        "x": 690,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "4b82c4cb79d63eb0",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "object_depth_max",
        "label": "Max sampling depth (m)",
        "tooltip": "in m",
        "group": "eca1eb3a0876214f",
        "order": 10,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "object_depth_max",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 650,
        "y": 240,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "8710c71ab407ba57",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "object_depth_min",
        "label": "Min sampling depth (m)",
        "tooltip": "in m",
        "group": "eca1eb3a0876214f",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "object_depth_min",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 650,
        "y": 280,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "f2863b532fefe98b",
        "type": "ui_ui_control",
        "z": "5a1a7f62278e237a",
        "name": "show/hide net groups",
        "events": "change",
        "x": 1320,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a286e2ebb4c38ef2",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_concentrated_sample_volume",
        "label": "Concentrated sample volume (mL)",
        "tooltip": "Volume extracted from the net codend (in mL)",
        "group": "eca1eb3a0876214f",
        "order": 12,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "sample_concentrated_sample_volume",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 590,
        "y": 440,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "db8ba62e0d94a07f",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_gear_net_opening",
        "label": "Net opening dimension (mm)",
        "tooltip": "Size of the net mouth opening (in mm)",
        "group": "abf415671756729d",
        "order": 1,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "sample_gear_net_opening",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 620,
        "y": 320,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "e2240f9cfecb1bfa",
        "type": "ui_toast",
        "z": "5a1a7f62278e237a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1230,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "9e6a082ecf19324d",
        "type": "ui_form",
        "z": "5a1a7f62278e237a",
        "name": "sample_location",
        "label": "Sample Location",
        "group": "1abdae6972d5d7ac",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Latitude (36.574439°N or 36°57.4439'N)",
                "value": "object_lat",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Longitude (110.42100°W or 110°4.2100'W)",
                "value": "object_lon",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Date (YYYY-MM-DD, UTC)",
                "value": "object_date",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Time (HH:MM(:SS), UTC 24h)",
                "value": "object_time",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "object_lat": "",
            "object_lon": "",
            "object_date": "",
            "object_time": ""
        },
        "payload": "",
        "submit": "Validate",
        "cancel": "Reset",
        "topic": "sample_location",
        "x": 660,
        "y": 580,
        "wires": [
            [
                "40be8a2fa4deb193",
                "c1af3e6f1d8494bc"
            ]
        ]
    },
    {
        "id": "941d19f1454b8812",
        "type": "ui_form",
        "z": "5a1a7f62278e237a",
        "name": "net_throw_location",
        "label": "Net Throw Location",
        "group": "abf415671756729d",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Latitude (36.574439°N or 36°57.4439'N)",
                "value": "object_lat",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Longitude (110.42100°W or 110°4.2100'W)",
                "value": "object_lon",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Date (YYYY-MM-DD UTC)",
                "value": "object_date",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Time (HH:MM, UTC 24h)",
                "value": "object_time",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "object_lat": "",
            "object_lon": "",
            "object_date": "",
            "object_time": ""
        },
        "payload": "",
        "submit": "Validate",
        "cancel": "",
        "topic": "net_throw_location",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 650,
        "y": 620,
        "wires": [
            [
                "40be8a2fa4deb193",
                "86e53919d9610274"
            ]
        ]
    },
    {
        "id": "01844086950bcd84",
        "type": "ui_form",
        "z": "5a1a7f62278e237a",
        "name": "net_retrieval_location",
        "label": "Net Retrieval Location",
        "group": "abf415671756729d",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Latitude (36.574439°N or 36°57.4439'N)",
                "value": "object_lat_end",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Longitude (110.42100°W or 110°4.2100'W)",
                "value": "object_lon_end",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Date (YYYY-MM-DD UTC)",
                "value": "object_date_end",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Time (HH:MM, UTC 24h)",
                "value": "object_time_end",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "object_lat_end": "",
            "object_lon_end": "",
            "object_date_end": "",
            "object_time_end": ""
        },
        "payload": "",
        "submit": "Validate",
        "cancel": "",
        "topic": "net_retrieval_location",
        "topicType": "str",
        "splitLayout": false,
        "x": 640,
        "y": 660,
        "wires": [
            [
                "40be8a2fa4deb193",
                "1fd00430e8b3d42a"
            ]
        ]
    },
    {
        "id": "40be8a2fa4deb193",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "Validate Location / Timestamp",
        "func": "// Code added here will be run once\n// whenever the node is started.\nfunction ConvertDDMMToDD(input) {\n    // Input Format 36°57.4439'N, 110°4.2100'W\n    // From https://stackoverflow.com/questions/1140189/converting-latitude-and-longitude-to-decimal-values\n    if (!input.match(/\\d+°\\d+\\.*\\d*\\'[NSEW]/)){\n    \treturn \"parsing error\"\n    }\n    var parts = input.split(/[^\\d.\\w]+/)\n    if (parts.length != 3){\n    \treturn \"parsing error\"\n    }\n    var dd = Number(parts[0]) + Number(parts[1])/60\n    return dd.toFixed(6) + parts[2]\n}\n\nfunction ValidateCoordinates(input, lat){\n    // Input Format 36.574439°N, 110.42100°W\n    // Or 36°57.4439'N, 110°4.2100'W\n    if (input.match(\"'\")){\n        input = ConvertDDMMToDD(input)\n    }\n    \n    var error = {}\n\n    if (input.startsWith(\"parsing error\")){\n        error.topic = \"Error with the \"\n        error.payload = \"You need to respect the format example, 36.574439°N or 36°57.4439'N\"\n        return [null, error]\n    }\n    \n    var direction = input.match(/[NSEW]/)\n    var position = input.match(/[\\+\\-\\d\\.]+/)\n    \n    if (direction === null){\n        error.topic = \"Error with the \"\n        error.payload = \"You need to explicitely enter N/S/E/W\"\n        return [null, error]\n    }\n    \n    // Test that position is only made of digits!\n    if(/^[\\+\\-]/.test(position)){\n        error.topic = \"Error with the \"\n        error.payload = \"Use of +/- sign is inconsistent with N/S/E/W letter! Please only use N/S/E/W!\"\n        return [null, error]\n    }\n    \n    var dd = Number(position)\n    if (lat){\n        // Check latitude\n        if (direction == \"S\" || direction == \"N\") {\n            if (dd>90.0){\n                error.topic = \"Error with the \"\n                error.payload = \"Latitude is more than 90°\"\n                return [null, error]\n            }\n        }\n        if (direction == \"W\" || direction == \"E\") {\n            error.topic = \"Error with the \"\n            error.payload = \"This is not a Latitude!\"\n            return [null, error]\n        }\n    }\n    else{\n        // Check longitude\n        if (direction == \"W\" || direction == \"E\") {\n            if (dd>180.0){\n                error.topic = \"Error with the \"\n                error.payload = \"Longitude is more than 180°\"\n                return [null, error]\n            }\n        }\n        if (direction == \"N\" || direction == \"S\") {\n            error.topic = \"Error with the \"\n            error.payload = \"This is not a Longitude!\"\n            return [null, error]\n        }\n    }\n    \n    if (direction == \"S\" || direction == \"W\") {\n        dd = dd * -1\n    } // Don't do anything for N or E\n    return [dd.toFixed(4), null]\n    \n}\n\nfunction ValidateDate(input){\n    // Input Format 2020-12-25\n    var error = {};\n    \n    if (! /20\\d{2}-[0-1]\\d-[0-3]\\d/.test(input)){\n        error.topic = \"Error with the date\";\n        error.payload = \"The date should respect the ISO format YYYY-MM-DD\";\n        return [null, error];\n    }\n    else {\n        var date = input.match(/\\d+/g);\n        if (!((2000 < date[0]) && (date[0] < 2100))){\n            error.topic = \"Error with the date\"\n            error.payload = \"The year should be between 2000 and 2100\"\n            return [null, error]\n        }\n        else if (!((0 < date[1]) && (date[1] <= 12))){\n            error.topic = \"Error with the date\"\n            error.payload = \"The month should be between 01 and 12\"\n            return [null, error]\n        }\n        else if (!((0 < date[2]) && (date[2] <= 31))){\n            error.topic = \"Error with the date\"\n            error.payload = \"The day should be between 01 and 31\"\n            return [null, error]\n        }\n    }\n    return [input.replace(/-/g, ''), null]\n}\n\nfunction ValidateTime(input){\n    // Input Format 12:00\n    var error = {}\n    \n    if (! /[0-2]?\\d:[0-5]\\d/.test(input)){\n        error.topic = \"Error with the time\"\n        error.payload = \"The date should respect the ISO format HH:MM\"\n        return [null, error]\n    }\n    else {\n        var time = input.match(/\\d+/g)\n        \n        if (!((0 <= time[0]) && (time[0] < 24))){\n            error.topic = \"Error with the time\"\n            error.payload = \"The hours should be 0 and 23.\"\n            return [null, error]\n        }\n        else if (!((0 <= time[1]) && (time[1] < 60))){\n            error.topic = \"Error with the time\"\n            error.payload = \"The minutes should be between 0 and 59\"\n            return [null, error]\n        }\n    }\n    return [input.replace(/:/g, ''), null]\n}\n\n\nvar ret\nvar payload_for_form = {payload:{}}\nmsg.valid = false\n\nif (msg.topic == \"culture_timestamp\"){\n    ret = ValidateDate(msg.payload.object_date)\n    if (ret[1] !== null){\n        msg.topic = ret[1].topic + \" of the sample\"\n        msg.payload = ret[1].payload\n        return [msg, null]\n    }\n    global.set(\"object_date\", ret[0])\n    \n    ret = ValidateTime(msg.payload.object_time)\n    if (ret[1] !== null){\n        msg.topic = ret[1].topic + \" of the sample\"\n        msg.payload = ret[1].payload\n        return [msg, null]\n    }\n    global.set(\"object_time\", ret[0])\n    return [{topic: \"Date and time format valid!\", payload: \"All good!\", valid: true}, payload_for_form]\n}\nelse if (msg.topic == \"net_retrieval_location\"){\n    ret = ValidateCoordinates(msg.payload.object_lat_end, true);\n    if (ret[1] !== null){\n        msg.topic = ret[1].topic + \" Latitude\"\n        msg.payload = ret[1].payload\n        return [msg, null]\n    }\n    global.set(\"object_lat_end\", ret[0])\n    ret = ValidateCoordinates(msg.payload.object_lon_end, false)\n    if (ret[1] !== null){\n        msg.topic = ret[1].topic + \" Longitude\"\n        msg.payload = ret[1].payload\n        return [msg, null]\n    }\n    global.set(\"object_lon_end\", ret[0]);\n    \n    ret = ValidateDate(msg.payload.object_date_end)\n    if (ret[1] !== null){\n        msg.topic = ret[1].topic + \" of the sample retrieval\"\n        msg.payload = ret[1].payload\n        return [msg, null]\n    }\n    global.set(\"object_date_end\", ret[0])\n    \n    ret = ValidateTime(msg.payload.object_time_end)\n    if (ret[1] !== null){\n        msg.topic = ret[1].topic + \" of the sample retrieval\"\n        msg.payload = ret[1].payload\n        return [msg, null]\n    }\n    global.set(\"object_time_end\", ret[0])\n}\nelse{\n    ret = ValidateCoordinates(msg.payload.object_lat, true);\n    if (ret[1] !== null){\n        msg.topic = ret[1].topic + \" Latitude\";\n        msg.payload = ret[1].payload\n        return [msg, null]\n    }\n    global.set(\"object_lat\", ret[0]);\n    payload_for_form.payload[\"object_lat_end\"] = msg.payload.object_lat;\n    \n    ret = ValidateCoordinates(msg.payload.object_lon, false);\n    if (ret[1] !== null){\n        msg.topic = ret[1].topic + \" Longitude\"\n        msg.payload = ret[1].payload\n        return [msg, null]\n    }\n    global.set(\"object_lon\", ret[0])\n    payload_for_form.payload[\"object_lon_end\"] = msg.payload.object_lon;\n\n    ret = ValidateDate(msg.payload.object_date)\n    if (ret[1] !== null){\n        msg.topic = ret[1].topic + \" of the sample\"\n        msg.payload = ret[1].payload\n        return [msg, null]\n    }\n    global.set(\"object_date\", ret[0])\n    payload_for_form.payload[\"object_date_end\"] = msg.payload.object_date;\n    \n    ret = ValidateTime(msg.payload.object_time)\n    if (ret[1] !== null){\n        msg.topic = ret[1].topic + \" of the sample\"\n        msg.payload = ret[1].payload\n        return [msg, null]\n    }\n    global.set(\"object_time\", ret[0])\n    payload_for_form.payload[\"object_time_end\"] = msg.payload.object_time;\n}\nreturn [{topic: \"Coordinates valid!\", payload: \"All good!\", valid: true}, payload_for_form]\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 620,
        "wires": [
            [
                "e2240f9cfecb1bfa",
                "136d502d8cee4a92"
            ],
            [
                "01844086950bcd84"
            ]
        ],
        "inputLabels": [
            "Location form data"
        ],
        "outputLabels": [
            "Message",
            "Location validated"
        ]
    },
    {
        "id": "e23e2ff7b4eb7ecc",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "Net check",
        "func": "var decknet = {}\nvar activation_msg = {}\n\nif (msg.payload.startsWith(\"net_decknet\")){\n    decknet.enabled = true;\n}\nelse {\n    decknet.enabled = false;\n}\n\nif (msg.payload.startsWith(\"net\")){\n    activation_msg.payload = {\"group\":{\"show\":[\"Sample_Net_Metadata\"],\"hide\":[\"Sample_Sample_Location\",\"Sample_Culture_Date_and_Time\"]}};\n}\nelse if (msg.payload != \"culture\" && msg.payload != \"test\"){\n    activation_msg.payload = {\"group\":{\"show\":[\"Sample_Sample_Location\"], \"hide\":[\"Sample_Net_Metadata\",\"Sample_Culture_Date_and_Time\"]}};\n}\n\n\nreturn [decknet, activation_msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 240,
        "wires": [
            [
                "ea50e026087f11ae",
                "368669df053a7100",
                "c960323544837c93"
            ],
            [
                "f2863b532fefe98b"
            ]
        ],
        "outputLabels": [
            "decknet activation",
            "group display control"
        ]
    },
    {
        "id": "ea50e026087f11ae",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_total_flowmeter_start",
        "label": "Decknet flowmeter start",
        "tooltip": "in L",
        "group": "abf415671756729d",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "300",
        "topic": "sample_total_flowmeter_start",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1340,
        "y": 220,
        "wires": [
            [
                "1aa7009b13bece2e"
            ]
        ]
    },
    {
        "id": "368669df053a7100",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_total_flowmeter_end",
        "label": "Decknet flowmeter end",
        "tooltip": "in L",
        "group": "abf415671756729d",
        "order": 7,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "300",
        "topic": "sample_total_flowmeter_end",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1340,
        "y": 260,
        "wires": [
            [
                "1aa7009b13bece2e"
            ]
        ]
    },
    {
        "id": "c960323544837c93",
        "type": "ui_template",
        "z": "5a1a7f62278e237a",
        "group": "abf415671756729d",
        "name": "Decknet flowmeter read",
        "order": 5,
        "width": 10,
        "height": 1,
        "format": "<div style=\"line-height: 100%;\">\n    <p class=\"formlabel\" style=\"font-size: larger;\">Decknet flowmeter readings</p>\n    <p style=\"font-size: smaller;\">Those values are used to calculate <font style=\"font-family: mono;\">sample_total_volume</font>. Values are in L.</p>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1330,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2e3b95a095ff6bb8",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "get sample_gear_net_opening",
        "func": "if (msg.payload.sample_gear_net_opening === null){\n    msg.payload = 0;\n    global.set(\"sample_gear_net_opening\",msg.payload);\n}\nelse\n{\n    msg.payload = msg.payload.sample_gear_net_opening;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 320,
        "wires": [
            [
                "db8ba62e0d94a07f"
            ]
        ]
    },
    {
        "id": "cdbb92231ebb4b71",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "get object_depth_max",
        "func": "if (msg.payload.object_depth_max === null){\n    msg.payload = 0;\n    global.set(\"object_depth_max\",msg.payload);\n}\nelse\n{\n    msg.payload = msg.payload.object_depth_max;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 240,
        "wires": [
            [
                "4b82c4cb79d63eb0"
            ]
        ]
    },
    {
        "id": "82089ae8432b495b",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "get object_depth_min",
        "func": "if (msg.payload.object_depth_min === null){\n    msg.payload = 0;\n    global.set(\"object_depth_min\",msg.payload);\n}\nelse\n{\n    msg.payload = msg.payload.object_depth_min;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 280,
        "wires": [
            [
                "8710c71ab407ba57"
            ]
        ]
    },
    {
        "id": "136d502d8cee4a92",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "calculate sample_total_volume",
        "func": "\n/*object_lat = 33.95 \nobject_lon = 118.4  \nobject_lat_end = 40.6333 \nobject_lon_end = 73.78333\nsample_gear_net_opening = 40*/\n\n// Copyright 1997 Ed Williams. All rights reserved\n// Adapted by Romain Bazile - Ocean Trotter - 01-2021\n\ndecpl=4  // Dec places of minutes output\n\nellipse = {\"name\":\"WSG84\", \"a\":6378.137/1.852, \"invf\":298.257223563}\n\nfunction ComputeDistance(lat1, lon1, lat2, lon2){\n    var d,crs12,crs21\n    var argacos\n    var a,invf\n    \n    // lat and lon in radian\n    lat1=(Math.PI/180)*lat1\n    lat2=(Math.PI/180)*lat2\n    lon1=(Math.PI/180)*lon1\n    lon2=(Math.PI/180)*lon2\n    \n    //alert(\"lat1=\" + lat1 + \"lon1=\" + lon1 +\"\\nlat2=\" +lat2+ \"lon2=\"+lon2)\n    \n    /* get distance conversion factor */\n    dc=1.852 //km\n    //alert(\"dc=\" +dc)\n    \n    //showProps(ellipse,\"ellipse\")\n    \n    // elliptic code\n    d=crsdist_ell(lat1,-lon1,lat2,-lon2,ellipse)  // ellipse uses East negative\n    d=d*dc  // go to physical units\n    \n    //alert(\"d=\"+d+\"  crs12=\"+crs12+\"   crs21=\"+crs21)\n    return d\n}\n\nfunction crsdist(lat1,lon1,lat2,lon2){ // radian args\n    /* compute course and distance (spherical) */\n    if ((lat1+lat2===0) && (Math.abs(lon1-lon2)==Math.PI) && \n    (Math.abs(lat1) != (Math.PI/180)*90)){\t\n    \talert(\"Course between antipodal points is undefined\")\n    }\n    \n    d = Math.acos(Math.sin(lat1)*Math.sin(lat2)+Math.cos(lat1)*Math.cos(lat2)*Math.cos(lon1-lon2))\n    return d\n}\n\nfunction crsdist_ell(glat1,glon1,glat2,glon2,ellipse){\n    // glat1 initial geodetic latitude in radians N positive \n    // glon1 initial geodetic longitude in radians E positive \n    // glat2 final geodetic latitude in radians N positive \n    // glon2 final geodetic longitude in radians E positive \n    a=ellipse.a\n    f=1/ellipse.invf\n    //alert(\"a=\"+a+\" f=\"+f)\n    var r, tu1, tu2, cu1, su1, cu2, s1, b1, f1\n    var x, sx, cx, sy, cy,y, sa, c2a, cz, e, c, d\n    var EPS= 0.00000000005\n    var faz, baz, s\n    var iter=1\n    var MAXITER=100\n    if ((glat1+glat2===0) && (Math.abs(glon1-glon2)==Math.PI)){\n        alert(\"Course and distance between antipodal points is undefined\")\n        glat1=glat1+0.00001 // allow algorithm to complete\n    }\n    if (glat1==glat2 && (glon1==glon2 || Math.abs(Math.abs(glon1-glon2)-2*Math.PI) <  EPS)){\n        alert(\"Points 1 and 2 are identical- course undefined\")\n        out=new MakeArray(0)\n        out.d=0\n        out.crs12=0\n        out.crs21=Math.PI\n        return out\n    }\n    r = 1 - f\n    tu1 = r * Math.tan (glat1)\n    tu2 = r * Math.tan (glat2)\n    cu1 = 1 / Math.sqrt (1 + tu1 * tu1)\n    su1 = cu1 * tu1\n    cu2 = 1 / Math.sqrt (1 + tu2 * tu2)\n    s1 = cu1 * cu2\n    b1 = s1 * tu2\n    f1 = b1 * tu1\n    x = glon2 - glon1\n    d = x + 1 // force one pass\n    while ((Math.abs(d - x) > EPS) && (iter < MAXITER))\n    {\n        iter=iter+1\n        sx = Math.sin (x)\n        //       alert(\"sx=\"+sx)\n        cx = Math.cos (x)\n        tu1 = cu2 * sx\n        tu2 = b1 - su1 * cu2 * cx\n        sy = Math.sqrt(tu1 * tu1 + tu2 * tu2)\n        cy = s1 * cx + f1\n        y = atan2 (sy, cy)\n        sa = s1 * sx / sy\n        c2a = 1 - sa * sa\n        cz = f1 + f1\n        if (c2a > 0)\n            cz = cy - cz / c2a\n            e = cz * cz * 2 - 1\n            c = ((-3 * c2a + 4) * f + 4) * c2a * f / 16\n            d = x\n            x = ((e * cy * c + cz) * sy * c + y) * sa\n            x = (1 - c) * x * f + glon2 - glon1\n    }\n    x = Math.sqrt ((1 / (r * r) - 1) * c2a + 1)\n    x +=1\n    x = (x - 2) / x\n    c = 1 - x\n    c = (x * x / 4 + 1) / c\n    d = (0.375 * x * x - 1) * x\n    x = e * cy\n    d = ((((sy*sy*4-3)*(1-e-e)*cz*d/6-x)*d/4+cz)*sy*d+y)*c*a*r\n    if (Math.abs(iter-MAXITER)<EPS){\n        alert(\"Algorithm did not converge\")\n    }\n    return d\n}\n\n\n//***************Utility***************\nfunction atan2(y,x){\n    var out\n    if (x <0)            { out= Math.atan(y/x)+Math.PI}\n    if ((x >0) && (y>=0)){ out= Math.atan(y/x)}\n    if ((x >0) && (y<0)) { out= Math.atan(y/x)+2*Math.PI}\n    if ((x===0) && (y>0)) { out= Math.PI/2}\n    if ((x===0) && (y<0)) { out= 3*Math.PI/2}  \n    if ((x===0) && (y===0)) {\n        alert(\"atan2(0,0) undefined\")\n        out= 0\n    }  \n    return out\n}\n\nfunction showProps(obj,objName){\n    var result=\"\"\n    for (var i in obj){\n        result +=objName + \".\" + i + \" = \" + obj[i] + \"\\n\"\n    }\n    alert(result)\n}\n\n\nif (msg.valid){\n    msg.topic=\"sample_total_volume\"\n    \n    var object_lat_end = global.get(\"object_lat_end\")\n    var object_lon_end = global.get(\"object_lon_end\")\n    var sample_sampling_gear = global.get(\"sample_sampling_gear\")\n    \n    if (sample_sampling_gear.startsWith(\"net\") && sample_sampling_gear != \"net_decknet\") {\n        if (!(isNaN(object_lat_end) && isNaN(object_lon_end))){\n            var object_lat = global.get(\"object_lat\")\n            var object_lon = global.get(\"object_lon\")\n            var sample_gear_net_opening = global.get(\"sample_gear_net_opening\");\n\n            distance_km = ComputeDistance(object_lat, object_lon, object_lat_end, object_lon_end)\n\n            sample_total_volume = distance_km*(Math.PI*(sample_gear_net_opening/2)*(sample_gear_net_opening/2)) // liters\n            sample_total_volume = Math.round(sample_total_volume + Number.EPSILON)\n            msg.payload = sample_total_volume\n            return msg\n        }\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 760,
        "wires": [
            [
                "d621902f7671e060"
            ]
        ]
    },
    {
        "id": "c7a84d780adb048c",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "get acq_minimum_mesh",
        "func": "msg.payload = msg.payload.acq_minimum_mesh;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 360,
        "wires": [
            [
                "e4e16fcda76a1b80"
            ]
        ]
    },
    {
        "id": "b6abe4ea2ee58fe5",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "get acq_maximum_mesh",
        "func": "msg.payload = msg.payload.acq_maximum_mesh;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 400,
        "wires": [
            [
                "b96ef37e950cc0d1"
            ]
        ]
    },
    {
        "id": "3c34f21eec254d93",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_dilution_factor",
        "label": "Dilution Factor",
        "tooltip": "0.5 if diluted by two; 2 if concentrated by a factor 2",
        "group": "eca1eb3a0876214f",
        "order": 13,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "sample_dilution_factor",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 640,
        "y": 480,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "d621902f7671e060",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_total_volume",
        "label": "Filtered volume (in L)",
        "tooltip": "Calculated or hand filled",
        "group": "eca1eb3a0876214f",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "300",
        "topic": "sample_total_volume",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1220,
        "y": 760,
        "wires": [
            [
                "d6bdddc9704f8d3e"
            ]
        ]
    },
    {
        "id": "d6bdddc9704f8d3e",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "set global",
        "func": "global.set(msg.topic,msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "1aa7009b13bece2e",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "Calculate volume",
        "func": "if (msg.topic == \"sample_total_flowmeter_start\"){\n    context.set(\"sample_total_flowmeter_start\", msg.payload);\n}\nif (msg.topic == \"sample_total_flowmeter_end\"){\n    context.set(\"sample_total_flowmeter_end\", msg.payload);\n}\n\nif (context.keys().length == 2){\n    sample_total_volume = context.get(\"sample_total_flowmeter_end\") - context.get(\"sample_total_flowmeter_start\");\n    msg.topic=\"sample_total_volume\"\n    msg.payload=sample_total_volume\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1610,
        "y": 240,
        "wires": [
            [
                "d621902f7671e060"
            ]
        ]
    },
    {
        "id": "5c0ace517e8b107d",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "sample_speed_through_water",
        "label": "Speed Through Water (kts)",
        "tooltip": "in knots",
        "group": "abf415671756729d",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "sample_speed_through_water",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 610,
        "y": 520,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "e4e16fcda76a1b80",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "acq_minimum_mesh",
        "label": "Minimal fraction size (μm)",
        "tooltip": "Net mesh pore size or minimal filtration mesh pore size",
        "group": "eca1eb3a0876214f",
        "order": 7,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "acq_minimum_mesh",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 640,
        "y": 360,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "b96ef37e950cc0d1",
        "type": "ui_text_input",
        "z": "5a1a7f62278e237a",
        "name": "acq_maximum_mesh",
        "label": "Maximal fraction size (μm)",
        "tooltip": "Maximal filtration mesh pore size",
        "group": "eca1eb3a0876214f",
        "order": 8,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "300",
        "topic": "acq_maximum_mesh",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 640,
        "y": 400,
        "wires": [
            [
                "eea66f9e7f8ef946"
            ]
        ]
    },
    {
        "id": "dc5e8ff5382b4f96",
        "type": "function",
        "z": "5a1a7f62278e237a",
        "name": "Culture check",
        "func": "var activation_msg = {}\nvar date_msg = {}\nvar timestamp=new Date().toISOString();\n\nif (msg.payload === \"culture\"){\n    activation_msg.payload = {\"group\":{\"show\":[\"Sample_Culture_Date_and_Time\"],\"hide\":[\"Sample_Sample_Location\", \"Sample_Net_Metadata\"]}};\n    global.set(\"object_lat\", \"-90.0000\")\n    global.set(\"object_lon\", \"0.0000\")\n    date_msg.payload = {\"object_date\": timestamp.split('T')[0],\n                        \"object_time\": timestamp.split('T')[1].split('.')[0]}\n    return [activation_msg, date_msg];\n}\nelse if (msg.payload === \"test\"){\n    activation_msg.payload = {\"group\":{\"hide\":[\"Sample_Culture_Date_and_Time\", \"Sample_Sample_Location\", \"Sample_Net_Metadata\"]}};\n    global.set(\"object_lat\", \"-90.0000\")\n    global.set(\"object_lon\", \"0.0000\")\n    global.set(\"object_date\", timestamp.split('T')[0])\n    global.set(\"object_time\", timestamp.split('T')[1].split('.')[0])\n    return [activation_msg, null];\n}\nelse{\n    return [null, null]\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 320,
        "wires": [
            [
                "f2863b532fefe98b"
            ],
            [
                "bfbbc9e524fa19c0"
            ]
        ],
        "outputLabels": [
            "decknet activation",
            ""
        ]
    },
    {
        "id": "bfbbc9e524fa19c0",
        "type": "ui_form",
        "z": "5a1a7f62278e237a",
        "name": "culture_timestamp",
        "label": "Culture timestamp",
        "group": "88a3013e51ea77e0",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Date (YYYY-MM-DD, UTC)",
                "value": "object_date",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Time (HH:MM(:SS), UTC 24h)",
                "value": "object_time",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "object_date": "",
            "object_time": ""
        },
        "payload": "",
        "submit": "Validate",
        "cancel": "Reset",
        "topic": "culture_timestamp",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 650,
        "y": 700,
        "wires": [
            [
                "40be8a2fa4deb193",
                "ea3031fb29d1ecd7"
            ]
        ]
    },
    {
        "id": "c1af3e6f1d8494bc",
        "type": "change",
        "z": "5a1a7f62278e237a",
        "name": "Repopulate input fields",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 580,
        "wires": [
            [
                "9e6a082ecf19324d"
            ]
        ]
    },
    {
        "id": "86e53919d9610274",
        "type": "change",
        "z": "5a1a7f62278e237a",
        "name": "Repopulate input fields",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 620,
        "wires": [
            [
                "941d19f1454b8812"
            ]
        ]
    },
    {
        "id": "1fd00430e8b3d42a",
        "type": "change",
        "z": "5a1a7f62278e237a",
        "name": "Repopulate input fields",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 660,
        "wires": [
            [
                "01844086950bcd84"
            ]
        ]
    },
    {
        "id": "ea3031fb29d1ecd7",
        "type": "change",
        "z": "5a1a7f62278e237a",
        "name": "Repopulate input fields",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 700,
        "wires": [
            [
                "bfbbc9e524fa19c0"
            ]
        ]
    },
    {
        "id": "e32aeda2ddf774ee",
        "type": "ui_template",
        "z": "43fa0bedea4fee38",
        "group": "940cc4ca02b248fb",
        "name": "Stream Pi Camera",
        "order": 1,
        "width": 18,
        "height": 14,
        "format": "<center>\n  <img src=\"/ps/hal/camera/streams/preview.mjpg\"\n    alt=\"If you see this, there probably is an error either with your camera or with the python service. Please try restarting your machine.\"\n    width=\"100%\" height=\"100%\">\n</center>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 610,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "46dc6ae6cff28c3b",
        "type": "function",
        "z": "43fa0bedea4fee38",
        "name": "set global",
        "func": "global.set(msg.topic,msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "1e641e71fcc3cd13",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "down",
        "group": "0f4f3cbf586e85ea",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-angle-double-down fa-3x",
        "payload": "DOWN",
        "payloadType": "str",
        "topic": "actuator/focus",
        "x": 550,
        "y": 800,
        "wires": [
            [
                "da4f69307e2ef4f7"
            ]
        ]
    },
    {
        "id": "f8a65ba1a338e4be",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "up",
        "group": "0f4f3cbf586e85ea",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-angle-double-up fa-3x",
        "payload": "UP",
        "payloadType": "str",
        "topic": "actuator/focus",
        "x": 550,
        "y": 760,
        "wires": [
            [
                "da4f69307e2ef4f7"
            ]
        ]
    },
    {
        "id": "f98ad6e323b133f4",
        "type": "ui_text_input",
        "z": "43fa0bedea4fee38",
        "name": "pump_manual_volume",
        "label": "Volume to pass (ml)",
        "tooltip": "Tiny values are accepted down to 0.001mL",
        "group": "d82c494488c16b2d",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "300",
        "topic": "pump_manual_volume",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 600,
        "y": 420,
        "wires": [
            [
                "46dc6ae6cff28c3b"
            ]
        ]
    },
    {
        "id": "42eddfd3f248c9d6",
        "type": "ui_ui_control",
        "z": "43fa0bedea4fee38",
        "name": "",
        "events": "change",
        "x": 560,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "1c487f02f1cc1817",
        "type": "ui_toast",
        "z": "43fa0bedea4fee38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 570,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "2472d6f84afc8831",
        "type": "function",
        "z": "43fa0bedea4fee38",
        "name": "Check form",
        "func": "var acq_fnumber_objective= global.get(\"acq_fnumber_objective\");\n\nif (acq_fnumber_objective === undefined || acq_fnumber_objective === \"\") {\n    msg.topic = \"Missing entry :\";\n    msg.payload = \"Focal Length of the objective\";\n    return [null, msg];\n}\n\nmsg.topic = \"Change Tab\";\nmsg.payload={\"tab\":\"Fluidic Acquisition\"};\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 1180,
        "wires": [
            [
                "42eddfd3f248c9d6",
                "1a0720429bafae08"
            ],
            [
                "1c487f02f1cc1817"
            ]
        ],
        "outputLabels": [
            "message",
            "error"
        ]
    },
    {
        "id": "a7fc0d5016a632ad",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "Backward",
        "group": "d82c494488c16b2d",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-rotate-left fa-2x",
        "payload": "BACKWARD",
        "payloadType": "str",
        "topic": "actuator/pump",
        "x": 560,
        "y": 280,
        "wires": [
            [
                "12788d397f12e7df"
            ]
        ]
    },
    {
        "id": "79f424f757a7ebf1",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "Forward",
        "group": "d82c494488c16b2d",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-rotate-right fa-2x",
        "payload": "FORWARD",
        "payloadType": "str",
        "topic": "actuator/pump",
        "x": 560,
        "y": 320,
        "wires": [
            [
                "12788d397f12e7df"
            ]
        ]
    },
    {
        "id": "fad195b7dbdb7b9b",
        "type": "ui_template",
        "z": "43fa0bedea4fee38",
        "group": "ae5e9836443dd30f",
        "name": "Magnification",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Magnification : X\n    <span id=\"obj_magnification\" ng-bind-html=\"msg.payload\">\n    </span>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1340,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d20ccc50b20f7ad0",
        "type": "function",
        "z": "43fa0bedea4fee38",
        "name": "Calculate optics",
        "func": "var acq_fnumber_objective = String(global.get(\"acq_fnumber_objective\"));\nvar acq_camera = global.get(\"acq_camera\")\n\n// Those values needs to be recalculated, they are not good!\nif (acq_camera == \"HQ Camera\"){\n    switch(acq_fnumber_objective) {\n      case \"25\":\n        acq_magnification= 0.6;\n        process_pixel= 1.56;\n        sug_min= 60;\n        sug_max= 670;\n        sug_flowrate= 3;\n        break;\n      case \"16\":\n        acq_magnification= 1.6;\n        process_pixel= 1.01;\n        sug_min= 40;\n        sug_max= 430;\n        sug_flowrate= 2.4;\n        break;\n      case \"12\":\n        acq_magnification= 1.20;\n        process_pixel= 0.79;\n        sug_min= 30;\n        sug_max= 340;\n        sug_flowrate= 1.25;\n        break;\n      case \"8\":\n        acq_magnification= 1.78;\n        process_pixel= 0.53;\n        sug_min= 20;\n        sug_max= 230;\n        sug_flowrate= 0.42;\n        break;\n      case \"6\":\n        acq_magnification= 2.36;\n        process_pixel= 0.41;\n        sug_min= 15;\n        sug_max= 170;\n        sug_flowrate= 0.32;\n        break;\n    }\n}\nelse if (acq_camera == \"Camera v2.1\"){\n    switch(acq_fnumber_objective) {\n      case \"25\":\n        acq_magnification= 0.6;\n        process_pixel= 1.86;\n        sug_min= 60;\n        sug_max= 670;\n        sug_flowrate= 3;\n        break;\n      case \"16\":\n        acq_magnification= 1.6;\n        process_pixel= 0.7;\n        sug_min= 40;\n        sug_max= 430;\n        sug_flowrate= 2.4;\n        break;\n      case \"12\":\n        acq_magnification= 1.20;\n        process_pixel= 0.94;\n        sug_min= 30;\n        sug_max= 340;\n        sug_flowrate= 1.25;\n        break;\n      case \"8\":\n        acq_magnification= 1.78;\n        process_pixel= 0.63;\n        sug_min= 20;\n        sug_max= 230;\n        sug_flowrate= 0.42;\n        break;\n      case \"6\":\n        acq_magnification= 2.36;\n        process_pixel= 0.48;\n        sug_min= 15;\n        sug_max= 170;\n        sug_flowrate= 0.32;\n        break;\n    }\n}else {\n    acq_magnification= \"ERROR\";\n    process_pixel= \"ERROR\";\n    sug_min= \"ERROR\";\n    sug_max= \"ERROR\";\n    sug_flowrate= \"ERROR\";\n}\n\nvar process_pixel_fixed = global.get(\"process_pixel_fixed\")\n\nif (process_pixel_fixed !== undefined && process_pixel_fixed !== \"\") {\n    process_pixel = process_pixel_fixed\n}\n\nglobal.set(\"process_pixel\",process_pixel);\n\nglobal.set(\"acq_magnification\",acq_magnification);\n\n\nreturn [{payload: acq_fnumber_objective}, {payload: acq_magnification}, {payload: process_pixel}, {payload: sug_min}, {payload: sug_max}];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 120,
        "wires": [
            [
                "23064ae3803b2a36"
            ],
            [
                "fad195b7dbdb7b9b"
            ],
            [
                "c0db3741e95dffd5"
            ],
            [
                "2033e2933c8275e0"
            ],
            [
                "b64c900110532551"
            ]
        ],
        "inputLabels": [
            "acq_fnumber_objective"
        ],
        "outputLabels": [
            "acq_magnification",
            "process_pixel",
            "sug_min",
            "sug_max",
            ""
        ]
    },
    {
        "id": "c0db3741e95dffd5",
        "type": "ui_template",
        "z": "43fa0bedea4fee38",
        "group": "ae5e9836443dd30f",
        "name": "process_pixel",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Pixel resolution :\n    <span id=\"process_pixel\" ng-bind-html=\"msg.payload\"></span>\n    μm\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1340,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2033e2933c8275e0",
        "type": "ui_template",
        "z": "43fa0bedea4fee38",
        "group": "ae5e9836443dd30f",
        "name": "min_size",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Smallest cells to explore :\n    <span id=\"min_size\" ng-bind-html=\"msg.payload\"></span>\n    μm\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1320,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b64c900110532551",
        "type": "ui_template",
        "z": "43fa0bedea4fee38",
        "group": "ae5e9836443dd30f",
        "name": "max_size",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Biggest cells to explore :\n    <span id=\"max_size\" ng-bind-html=\"msg.payload\"></span>\n    μm\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1320,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1fc06786eadf56a6",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "",
        "group": "b323218e17f7d382",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Previous",
        "tooltip": "",
        "color": "#097479",
        "bgcolor": "white",
        "icon": "keyboard_return",
        "payload": "{\"tab\":\"Sample\"}",
        "payloadType": "json",
        "topic": "",
        "x": 140,
        "y": 1140,
        "wires": [
            [
                "42eddfd3f248c9d6"
            ]
        ]
    },
    {
        "id": "0b80be93dd30947e",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "",
        "group": "b323218e17f7d382",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Continue",
        "tooltip": "",
        "color": "#097479",
        "bgcolor": "white",
        "icon": "keyboard_tab",
        "payload": "{\"tab\":\"Home\"}",
        "payloadType": "json",
        "topic": "",
        "x": 140,
        "y": 1180,
        "wires": [
            [
                "2472d6f84afc8831"
            ]
        ]
    },
    {
        "id": "12788d397f12e7df",
        "type": "function",
        "z": "43fa0bedea4fee38",
        "name": "pump",
        "func": "var manual_volume= global.get(\"pump_manual_volume\");\nvar flowrate= global.get(\"pump_flowrate\");\n\nif (manual_volume === undefined || manual_volume === \"\" || manual_volume === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Volume to pass\";\n    return [null, msg];\n}\nelse if (flowrate === undefined || flowrate === \"\" || flowrate === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Flowrate\";\n    return [null, msg];\n}\nelse {\n    msg.topic = \"actuator/pump\";\n    // msg.payload is FORWARD or BACKWARD here\n    msg.payload={\"action\":\"move\", \n                \"direction\":msg.payload,\n                \"volume\":manual_volume,\n                \"flowrate\":flowrate};\n}\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 300,
        "wires": [
            [
                "e1a4c478c21e105f"
            ],
            [
                "ede7946c73a49659"
            ]
        ],
        "inputLabels": [
            "direction"
        ],
        "outputLabels": [
            "message",
            "error"
        ]
    },
    {
        "id": "ede7946c73a49659",
        "type": "ui_toast",
        "z": "43fa0bedea4fee38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e1a4c478c21e105f",
        "type": "mqtt out",
        "z": "43fa0bedea4fee38",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 1210,
        "y": 260,
        "wires": []
    },
    {
        "id": "3a4850dccbc345f3",
        "type": "ui_toast",
        "z": "43fa0bedea4fee38",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "da4f69307e2ef4f7",
        "type": "function",
        "z": "43fa0bedea4fee38",
        "name": "focus",
        "func": "var distance = global.get(\"focus_distance\");\nvar speed = global.get(\"focus_speed\");\n\nif (distance === undefined || distance === \"\" || distance === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Distance\";\n    return [null, msg]\n}\nif (speed === undefined || speed === \"\" || speed === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Speed\";\n    return [null, msg]\n}\n// msg.payload is UP or DOWN here\nmsg.payload={\"action\":\"move\", \n            \"direction\":msg.payload,\n            \"distance\":(distance/1000),\n            \"speed\": (speed/1000)\n};\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 780,
        "wires": [
            [
                "3073046f1fddfeaa"
            ],
            [
                "3a4850dccbc345f3"
            ]
        ],
        "inputLabels": [
            "direction"
        ],
        "outputLabels": [
            "message",
            "error"
        ]
    },
    {
        "id": "7c13209c3bf53568",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "stop focus",
        "group": "0f4f3cbf586e85ea",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": " STOP FOCUS",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "icon": "fa-pause fa-2x",
        "payload": "{\"action\":\"stop\"}",
        "payloadType": "json",
        "topic": "actuator/focus",
        "x": 570,
        "y": 560,
        "wires": [
            [
                "3073046f1fddfeaa"
            ]
        ]
    },
    {
        "id": "3073046f1fddfeaa",
        "type": "mqtt out",
        "z": "43fa0bedea4fee38",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 1210,
        "y": 720,
        "wires": []
    },
    {
        "id": "15e3da9256ff5841",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "",
        "group": "0f4f3cbf586e85ea",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "UP 1mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-angle-up fa-3x",
        "payload": "{\"action\":\"move\",\"direction\":\"UP\",\"distance\":1}",
        "payloadType": "json",
        "topic": "actuator/focus",
        "topicType": "str",
        "x": 560,
        "y": 600,
        "wires": [
            [
                "3073046f1fddfeaa"
            ]
        ]
    },
    {
        "id": "ad1531a98efcfeaa",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "",
        "group": "0f4f3cbf586e85ea",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "DOWN 1mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-angle-down fa-3x",
        "payload": "{\"action\":\"move\",\"direction\":\"DOWN\",\"distance\":1}",
        "payloadType": "json",
        "topic": "actuator/focus",
        "topicType": "str",
        "x": 570,
        "y": 720,
        "wires": [
            [
                "3073046f1fddfeaa"
            ]
        ]
    },
    {
        "id": "2fb0f9ee23ed5351",
        "type": "inject",
        "z": "43fa0bedea4fee38",
        "name": "Default: 500µm",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "500",
        "payloadType": "num",
        "x": 120,
        "y": 460,
        "wires": [
            [
                "1fa3e0be7261b009"
            ]
        ]
    },
    {
        "id": "c9473d7b961c5810",
        "type": "inject",
        "z": "43fa0bedea4fee38",
        "name": "Default: OFF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "11b3f0c5055f5050"
            ]
        ]
    },
    {
        "id": "904417062b68b0ed",
        "type": "inject",
        "z": "43fa0bedea4fee38",
        "name": "Default: 2mL/min",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "417857070519b653"
            ]
        ]
    },
    {
        "id": "bd11af7a0608b965",
        "type": "inject",
        "z": "43fa0bedea4fee38",
        "name": "Default: 2mL",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 110,
        "y": 420,
        "wires": [
            [
                "f98ad6e323b133f4"
            ]
        ]
    },
    {
        "id": "2cf8804712970730",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "stop pump",
        "group": "d82c494488c16b2d",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": " STOP PUMP",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "icon": "fa-pause fa-2x",
        "payload": "{\"action\":\"stop\"}",
        "payloadType": "json",
        "topic": "actuator/pump",
        "x": 570,
        "y": 240,
        "wires": [
            [
                "e1a4c478c21e105f"
            ]
        ]
    },
    {
        "id": "b20440e37407b271",
        "type": "link in",
        "z": "43fa0bedea4fee38",
        "name": "Optics recalculation",
        "links": [
            "682ba0080532abf3",
            "81c9f09c06d9a5de"
        ],
        "x": 915,
        "y": 120,
        "wires": [
            [
                "d20ccc50b20f7ad0"
            ]
        ]
    },
    {
        "id": "1a0720429bafae08",
        "type": "subflow:63c85b96537b7355",
        "z": "43fa0bedea4fee38",
        "name": "",
        "x": 550,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "27927cb16c077e25",
        "type": "inject",
        "z": "43fa0bedea4fee38",
        "name": "Default: 1000µm/s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "1000",
        "payloadType": "num",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "dbe212054780d075"
            ]
        ]
    },
    {
        "id": "bc5a7b47dffc82bd",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "",
        "group": "0f4f3cbf586e85ea",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "UP 100um",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-angle-up fa-3x",
        "payload": "{\"action\":\"move\",\"direction\":\"UP\",\"distance\":0.1}",
        "payloadType": "json",
        "topic": "actuator/focus",
        "topicType": "str",
        "x": 570,
        "y": 640,
        "wires": [
            [
                "3073046f1fddfeaa"
            ]
        ]
    },
    {
        "id": "f7fd5586790650b4",
        "type": "ui_button",
        "z": "43fa0bedea4fee38",
        "name": "",
        "group": "0f4f3cbf586e85ea",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "DOWN 100um",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-angle-down fa-3x",
        "payload": "{\"action\":\"move\",\"direction\":\"DOWN\",\"distance\":0.1}",
        "payloadType": "json",
        "topic": "actuator/focus",
        "topicType": "str",
        "x": 580,
        "y": 680,
        "wires": [
            [
                "3073046f1fddfeaa"
            ]
        ]
    },
    {
        "id": "11b3f0c5055f5050",
        "type": "ui_multistate_switch",
        "z": "43fa0bedea4fee38",
        "name": "light_control",
        "group": "ae5e9836443dd30f",
        "order": 1,
        "width": 6,
        "height": 1,
        "label": "Light  ",
        "stateField": "payload",
        "enableField": "enable",
        "rounded": true,
        "useThemeColors": true,
        "hideSelectedLabel": false,
        "options": [
            {
                "label": "Off",
                "value": "off",
                "valueType": "str",
                "color": "#009933"
            },
            {
                "label": "On",
                "value": "on",
                "valueType": "str",
                "color": "#999999"
            }
        ],
        "x": 310,
        "y": 120,
        "wires": [
            [
                "2eaa75841f67148b"
            ]
        ]
    },
    {
        "id": "2eaa75841f67148b",
        "type": "function",
        "z": "43fa0bedea4fee38",
        "name": "Prepare message",
        "func": "msg.topic = \"light\"\nmsg.payload = {\"action\":msg.payload}\n\nvar led_output = flow.get('led_output')\nif (led_output !== undefined && led_output !== \"\") {\n    msg.payload[\"led\"] = led_output\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "8d21d4ab63cef628"
            ]
        ]
    },
    {
        "id": "8d21d4ab63cef628",
        "type": "mqtt out",
        "z": "43fa0bedea4fee38",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "308e7dfe80a24807",
        "type": "ui_multistate_switch",
        "z": "43fa0bedea4fee38",
        "name": "led_output",
        "group": "ae5e9836443dd30f",
        "order": 2,
        "width": 6,
        "height": 1,
        "label": "LED output",
        "stateField": "payload",
        "enableField": "enable",
        "rounded": true,
        "useThemeColors": true,
        "hideSelectedLabel": false,
        "options": [
            {
                "label": "1",
                "value": "1",
                "valueType": "num",
                "color": "#009933"
            },
            {
                "label": "2",
                "value": "2",
                "valueType": "num",
                "color": "#999999"
            }
        ],
        "x": 310,
        "y": 180,
        "wires": [
            [
                "5f834716550f7fa3"
            ]
        ]
    },
    {
        "id": "4d1b9db3b54e6551",
        "type": "inject",
        "z": "43fa0bedea4fee38",
        "name": "Default: 1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "308e7dfe80a24807"
            ]
        ]
    },
    {
        "id": "5f834716550f7fa3",
        "type": "change",
        "z": "43fa0bedea4fee38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "led_output",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 180,
        "wires": [
            [
                "11b3f0c5055f5050",
                "2eaa75841f67148b"
            ]
        ]
    },
    {
        "id": "1b791c62873e43c7",
        "type": "function",
        "z": "43fa0bedea4fee38",
        "name": "Encapsulate settings",
        "func": "msg.payload = {\n    \"action\":\"settings\", \n    \"settings\":{[msg.topic]:msg.payload}\n}\n\nmsg.topic = \"imager/image\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 940,
        "wires": [
            [
                "3092518e164c744e"
            ]
        ]
    },
    {
        "id": "81b7cee9f459ec67",
        "type": "ui_slider",
        "z": "43fa0bedea4fee38",
        "name": "Shutter speed slider",
        "label": "Shutter Speed",
        "tooltip": "In microseconds, up to 1000µs, 125µs by default",
        "group": "54687d94b65e7316",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "shutter_speed",
        "topicType": "str",
        "min": "125",
        "max": "1000",
        "step": "1",
        "className": "",
        "x": 600,
        "y": 880,
        "wires": [
            [
                "1b791c62873e43c7"
            ]
        ]
    },
    {
        "id": "3092518e164c744e",
        "type": "mqtt out",
        "z": "43fa0bedea4fee38",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 1390,
        "y": 980,
        "wires": []
    },
    {
        "id": "3486a17e348fa7e9",
        "type": "inject",
        "z": "43fa0bedea4fee38",
        "name": "Default: 125µs",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "125",
        "payloadType": "num",
        "x": 120,
        "y": 880,
        "wires": [
            [
                "81b7cee9f459ec67"
            ]
        ]
    },
    {
        "id": "bfd4532794faa03b",
        "type": "function",
        "z": "43fa0bedea4fee38",
        "name": "Encapsulate wb gain settings",
        "func": "msg.payload = {\n    \"action\":\"settings\", \n    \"settings\":{\"white_balance_gain\":{\n        [msg.topic]:Math.round(msg.payload*100)\n        }\n    }\n}\nmsg.topic = \"imager/image\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1060,
        "wires": [
            [
                "3092518e164c744e"
            ]
        ]
    },
    {
        "id": "31464d34ca975d98",
        "type": "inject",
        "z": "43fa0bedea4fee38",
        "name": "Default: OFF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "4a6af7aaca5ff85b"
            ]
        ]
    },
    {
        "id": "4a6af7aaca5ff85b",
        "type": "ui_switch",
        "z": "43fa0bedea4fee38",
        "name": "AWB",
        "label": "Auto White Balance",
        "tooltip": "",
        "group": "54687d94b65e7316",
        "order": 5,
        "width": 2,
        "height": 2,
        "passthru": true,
        "decouple": "false",
        "topic": "white_balance",
        "topicType": "str",
        "style": "",
        "onvalue": "auto",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 550,
        "y": 920,
        "wires": [
            [
                "1b791c62873e43c7"
            ]
        ]
    },
    {
        "id": "6b0e039464dde7eb",
        "type": "change",
        "z": "43fa0bedea4fee38",
        "name": "Get red_gain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.red_gain",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1040,
        "wires": [
            [
                "8756be3d9835c1e6"
            ]
        ]
    },
    {
        "id": "d042984315da09fc",
        "type": "change",
        "z": "43fa0bedea4fee38",
        "name": "Get blue_gain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.blue_gain",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1080,
        "wires": [
            [
                "aa712f3319877cf3"
            ]
        ]
    },
    {
        "id": "6f037ec2ebb7306e",
        "type": "subflow:4ed26b8b.253504",
        "z": "43fa0bedea4fee38",
        "name": "",
        "env": [],
        "x": 1160,
        "y": 1020,
        "wires": []
    },
    {
        "id": "c3eaef29adb0d2b3",
        "type": "change",
        "z": "43fa0bedea4fee38",
        "name": "Get analog_gain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.analog_gain",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 960,
        "wires": [
            [
                "84d893b5a97e4a0b"
            ]
        ]
    },
    {
        "id": "0d5adc94f7af3bc4",
        "type": "change",
        "z": "43fa0bedea4fee38",
        "name": "Get digital_gain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.digital_gain",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1000,
        "wires": [
            [
                "cdedb2ba53d984bf"
            ]
        ]
    },
    {
        "id": "84d893b5a97e4a0b",
        "type": "ui_text_input",
        "z": "43fa0bedea4fee38",
        "d": true,
        "name": "Analog gain field",
        "label": "Analog Gain",
        "tooltip": "From 1.0 to 12.0",
        "group": "54687d94b65e7316",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "analog",
        "topicType": "str",
        "x": 580,
        "y": 960,
        "wires": [
            [
                "6afcfefa9f8a3e0a",
                "b86b0358ad087da2"
            ]
        ]
    },
    {
        "id": "cdedb2ba53d984bf",
        "type": "ui_text_input",
        "z": "43fa0bedea4fee38",
        "d": true,
        "name": "Digital gain field",
        "label": "Digital Gain",
        "tooltip": "From 1.0 to 64.0. Overexpose starting at 4.0",
        "group": "54687d94b65e7316",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "digital",
        "topicType": "str",
        "x": 580,
        "y": 1000,
        "wires": [
            [
                "6afcfefa9f8a3e0a",
                "b86b0358ad087da2"
            ]
        ]
    },
    {
        "id": "6afcfefa9f8a3e0a",
        "type": "function",
        "z": "43fa0bedea4fee38",
        "name": "Encapsulate image gain settings",
        "func": "msg.payload = {\n    \"action\":\"settings\", \n    \"settings\":{\"image_gain\":{\n        [msg.topic]:Math.round(msg.payload*100)\n        }\n    }\n}\nmsg.topic = \"imager/image\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 980,
        "wires": [
            [
                "3092518e164c744e"
            ]
        ]
    },
    {
        "id": "b86b0358ad087da2",
        "type": "change",
        "z": "43fa0bedea4fee38",
        "name": "topic *_gain",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topic&'_gain'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 1020,
        "wires": [
            [
                "6f037ec2ebb7306e"
            ]
        ]
    },
    {
        "id": "1a730c1f138614fd",
        "type": "inject",
        "z": "43fa0bedea4fee38",
        "name": "Default: ISO 150",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "150",
        "payloadType": "num",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "5bec86594594441c"
            ]
        ]
    },
    {
        "id": "7e9836f750c84183",
        "type": "change",
        "z": "43fa0bedea4fee38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "iso",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 840,
        "wires": [
            [
                "1b791c62873e43c7"
            ]
        ]
    },
    {
        "id": "1fa3e0be7261b009",
        "type": "ui_text_input",
        "z": "43fa0bedea4fee38",
        "name": "focus_distance",
        "label": "Focus Distance (in µm)",
        "tooltip": "in µm, 25µm resolution",
        "group": "0f4f3cbf586e85ea",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "focus_distance",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 580,
        "y": 460,
        "wires": [
            [
                "46dc6ae6cff28c3b"
            ]
        ]
    },
    {
        "id": "dbe212054780d075",
        "type": "ui_text_input",
        "z": "43fa0bedea4fee38",
        "name": "focus_speed",
        "label": "Focus Speed (in µm/sec)",
        "tooltip": "in µm/sec",
        "group": "0f4f3cbf586e85ea",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "focus_speed",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 570,
        "y": 500,
        "wires": [
            [
                "46dc6ae6cff28c3b"
            ]
        ]
    },
    {
        "id": "417857070519b653",
        "type": "ui_text_input",
        "z": "43fa0bedea4fee38",
        "name": "pump_flowrate",
        "label": "Flowrate (ml/min)*",
        "tooltip": "",
        "group": "d82c494488c16b2d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "pump_flowrate",
        "topicType": "str",
        "x": 580,
        "y": 380,
        "wires": [
            [
                "46dc6ae6cff28c3b"
            ]
        ]
    },
    {
        "id": "aa712f3319877cf3",
        "type": "ui_text_input",
        "z": "43fa0bedea4fee38",
        "name": "WB Blue input",
        "label": "WB: Blue",
        "tooltip": "From 0.0 to 64.0",
        "group": "54687d94b65e7316",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "blue",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 580,
        "y": 1080,
        "wires": [
            [
                "6cbf94c4dcb2ed45"
            ]
        ]
    },
    {
        "id": "23064ae3803b2a36",
        "type": "ui_template",
        "z": "43fa0bedea4fee38",
        "group": "ae5e9836443dd30f",
        "name": "Lens",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Objective lens aperture: \n    <span id=\"obj_aperture\" ng-bind-html=\"msg.payload\">\n    </span>mm\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1310,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "0ec74ac09a9d966d",
        "type": "subflow:b7861ce703215a01",
        "z": "43fa0bedea4fee38",
        "name": "",
        "x": 160,
        "y": 1020,
        "wires": [
            [
                "c3eaef29adb0d2b3",
                "0d5adc94f7af3bc4",
                "6b0e039464dde7eb",
                "d042984315da09fc"
            ]
        ]
    },
    {
        "id": "391b6d2a8dac4fea",
        "type": "inject",
        "z": "43fa0bedea4fee38",
        "name": "Once",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 70,
        "y": 1080,
        "wires": [
            [
                "0ec74ac09a9d966d"
            ]
        ]
    },
    {
        "id": "d52c010c58b5862d",
        "type": "link in",
        "z": "43fa0bedea4fee38",
        "name": "Load hardware config",
        "links": [
            "ca1dcba514a4edfb",
            "e012498c67de9b45"
        ],
        "x": 25,
        "y": 1000,
        "wires": [
            [
                "0ec74ac09a9d966d"
            ]
        ]
    },
    {
        "id": "8756be3d9835c1e6",
        "type": "ui_text_input",
        "z": "43fa0bedea4fee38",
        "name": "WB Red input",
        "label": "WB: Red",
        "tooltip": "From 0.0 to 32.0",
        "group": "54687d94b65e7316",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "red",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 580,
        "y": 1040,
        "wires": [
            [
                "857e1cf8941f50af"
            ]
        ]
    },
    {
        "id": "857e1cf8941f50af",
        "type": "switch",
        "z": "43fa0bedea4fee38",
        "name": "Validate",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0.0",
                "vt": "num",
                "v2": "32.0",
                "v2t": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 740,
        "y": 1040,
        "wires": [
            [
                "b86b0358ad087da2",
                "bfd4532794faa03b"
            ],
            [
                "1be808ee4ea9a38a",
                "e012498c67de9b45"
            ]
        ]
    },
    {
        "id": "6cbf94c4dcb2ed45",
        "type": "switch",
        "z": "43fa0bedea4fee38",
        "name": "Validate",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0.0",
                "vt": "num",
                "v2": "32.0",
                "v2t": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 740,
        "y": 1080,
        "wires": [
            [
                "b86b0358ad087da2",
                "bfd4532794faa03b"
            ],
            [
                "1be808ee4ea9a38a",
                "e012498c67de9b45"
            ]
        ]
    },
    {
        "id": "1be808ee4ea9a38a",
        "type": "ui_toast",
        "z": "43fa0bedea4fee38",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Invalid white balance value",
        "name": "",
        "x": 990,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e012498c67de9b45",
        "type": "link out",
        "z": "43fa0bedea4fee38",
        "name": "Reload hardware config",
        "mode": "link",
        "links": [
            "d52c010c58b5862d"
        ],
        "x": 915,
        "y": 1140,
        "wires": []
    },
    {
        "id": "5bec86594594441c",
        "type": "ui_slider",
        "z": "43fa0bedea4fee38",
        "name": "ISO selector",
        "label": "ISO",
        "tooltip": "",
        "group": "54687d94b65e7316",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "50",
        "max": "650",
        "step": "50",
        "className": "",
        "x": 570,
        "y": 840,
        "wires": [
            [
                "7e9836f750c84183"
            ]
        ]
    },
    {
        "id": "b5fcb126ac4fb085",
        "type": "ui_text_input",
        "z": "411cf41f68dec3b9",
        "name": "acq_id",
        "label": "Acquisition unique ID*",
        "tooltip": "",
        "group": "c44a5e0a7105676d",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "acq_id",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 690,
        "y": 180,
        "wires": [
            [
                "4c0e4df7aaad57db"
            ]
        ]
    },
    {
        "id": "c0ccbebbbd0d55ca",
        "type": "ui_dropdown",
        "z": "411cf41f68dec3b9",
        "name": "acq_celltype",
        "label": "Flowcell thickness*",
        "tooltip": "",
        "place": "Select option",
        "group": "c44a5e0a7105676d",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "200 μm µ-Slide I Luer",
                "value": 200,
                "type": "num"
            },
            {
                "label": "300 µm capillary",
                "value": 300,
                "type": "num"
            },
            {
                "label": "400 μm µ-Slide I Luer",
                "value": 400,
                "type": "num"
            },
            {
                "label": "600 μm µ-Slide I Luer",
                "value": 600,
                "type": "num"
            },
            {
                "label": "800 μm µ-Slide I Luer",
                "value": 800,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "acq_celltype",
        "topicType": "str",
        "className": "",
        "x": 670,
        "y": 100,
        "wires": [
            [
                "4c0e4df7aaad57db",
                "0c8f7e79ba40232b"
            ]
        ]
    },
    {
        "id": "4c0e4df7aaad57db",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "set global",
        "func": "global.set(msg.topic, msg.payload);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 180,
        "wires": [
            [
                "25998ceb4a2a62cb"
            ]
        ]
    },
    {
        "id": "007ce6c7165fb779",
        "type": "ui_template",
        "z": "411cf41f68dec3b9",
        "group": "5b40c92dc3f644d6",
        "name": "Stream Pi Camera",
        "order": 1,
        "width": 10,
        "height": 8,
        "format": "<center>\n  <img src=\"/ps/hal/camera/streams/preview.mjpg\"\n    alt=\"If you see this, there probably is an error either with your camera or with the python service. Please try restarting your machine.\"\n    width=\"100%\" height=\"100%\">\n</center>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "75ccdf3a42ebb331",
        "type": "ui_ui_control",
        "z": "411cf41f68dec3b9",
        "name": "",
        "events": "change",
        "x": 1280,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "09f527fe491b5fbe",
        "type": "ui_button",
        "z": "411cf41f68dec3b9",
        "name": "",
        "group": "adef48d622d3f733",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Previous",
        "tooltip": "",
        "color": "#097479",
        "bgcolor": "white",
        "icon": "keyboard_return",
        "payload": "{\"tab\":\"Optic Configuration\"}",
        "payloadType": "json",
        "topic": "",
        "x": 1140,
        "y": 660,
        "wires": [
            [
                "75ccdf3a42ebb331"
            ]
        ]
    },
    {
        "id": "e6ce5bc8456f4021",
        "type": "ui_template",
        "z": "411cf41f68dec3b9",
        "group": "9e3802a3d7e9c0a8",
        "name": "Show Metadata",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <table style=\"text-align: center; width:100%\">\n        <tr style=\"vertical-align: top\">\n            <td>\n                <h2>Sample</h2>\n                <p><strong>id:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.sample_id\"></span></p>\n                <p><strong>project:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.sample_project\"></span></p>\n                <p><strong>ship:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.sample_ship\"></span></p>\n                <p><strong>operator:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.sample_operator\"></span></p>\n                <p><strong>sampling gear:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.sample_sampling_gear\"></span></p>\n                <p><strong>concentrated volume:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.sample_concentrated_sample_volume\"></span></p>\n                <p ng-if=msg.payload.config.sample_gear_net_opening><strong>gear net opening:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.sample_gear_net_opening\"></span></p>\n                <p ng-if=msg.payload.config.sample_total_volume><strong>total volume filtered:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.sample_total_volume\"></span></p>\n            </td>\n            <td>\n                <h2>Acquisition</h2>\n                <p><strong>id:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_id\"></span></p>\n                <p><strong>instrument:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_instrument\"></span></p>\n                <p><strong>instrument id:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_instrument_id\"></span></p>\n                <p><strong>camera:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_camera\"></span></p>\n                <p><strong>celltype:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_celltype\"></span>\n                </p>\n                <p><strong>minimum mesh:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_minimum_mesh\"></span></p>\n                <p><strong>maximum mesh:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_maximum_mesh\"></span></p>\n                <p><strong>min esd:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_min_esd\"></span>\n                </p>\n                <p><strong>max esd:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_max_esd\"></span>\n                </p>\n                <p><strong>volume:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_volume\"></span></p>\n                <p><strong>magnification:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_magnification\"></span></p>\n                <p><strong>fnumber objective:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_fnumber_objective\"></span></p>\n                <p><strong>software:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.acq_software\"></span>\n                </p>\n            </td>\n        </tr>\n        <tr style=\"vertical-align: top\">\n            <td>\n                <h2>Object</h2>\n                <p><strong>latitude:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.object_lat\"></span>\n                </p>\n                <p><strong>longitude:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.object_lon\"></span>\n                </p>\n                <p ng-if=msg.payload.config.object_lat_end><strong>latitude end:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.object_lat_end\"></span></p>\n                <p ng-if=msg.payload.config.object_lon_end><strong>longitude end:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.object_lon_end\"></span></p>\n                <p><strong>date:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.object_date\"></span></p>\n                <p><strong>time:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.object_time\"></span></p>\n                <p ng-if=msg.payload.config.object_date_end><strong>date end:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.object_date_end\"></span></p>\n                <p ng-if=msg.payload.config.object_time_end><strong>time end:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.object_time_end\"></span></p>\n                <p><strong>depth min:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.object_depth_min\"></span></p>\n                <p><strong>depth max:</strong>\n                    <span id=\"max_size\" ng-bind-html=\"msg.payload.config.object_depth_max\"></span></p>\n            </td>\n            <td>\n                <h2>Process</h2>\n                <p><strong>pixel:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.process_pixel\"></span>\n                </p>\n                <p><strong>id:</strong> <span id=\"max_size\" ng-bind-html=\"msg.payload.config.process_id\"></span></p>\n            </td>\n        </tr>\n    </table>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1160,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f4047060d3f8902f",
        "type": "ui_button",
        "z": "411cf41f68dec3b9",
        "name": "",
        "group": "c44a5e0a7105676d",
        "order": 12,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Start Acquisition",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "camera",
        "payload": "",
        "payloadType": "str",
        "topic": "imager/image",
        "x": 420,
        "y": 440,
        "wires": [
            [
                "05dda3350214df0e"
            ]
        ]
    },
    {
        "id": "05dda3350214df0e",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "Image control",
        "func": "// Reset the number of images taken\nflow.set('img_counter', 0);\n\nvar acq_celltype = global.get(\"acq_celltype\");\nvar acq_minimum_mesh = global.get(\"acq_minimum_mesh\");\nvar acq_maximum_mesh = global.get(\"acq_maximum_mesh\");\nvar imaging_pump_volume = global.get(\"imaging_pump_volume\");\nvar acq_id = global.get(\"acq_id\");\nvar nb_frame = global.get(\"nb_frame\");\nvar pump_direction = global.get(\"pump_direction\");\nvar sleep_before = global.get(\"sleep_before\");\nvar object_date = global.get(\"object_date\");\n\nif (acq_celltype === undefined || acq_celltype === \"\") {\n    msg.topic = \"Missing entry :\";\n    msg.payload = \"Type of the flowcell\";\n    return [null, msg];\n} else if (acq_minimum_mesh === undefined || acq_minimum_mesh === \"\") {\n    msg.topic = \"Missing entry :\";\n    msg.payload = \"Lower fraction size\";\n    return [null, msg];\n} else if (acq_maximum_mesh === undefined || acq_maximum_mesh === \"\") {\n    msg.topic = \"Missing entry :\";\n    msg.payload = \"Upper fraction size\";\n    return [null, msg];\n} else if (imaging_pump_volume === undefined || imaging_pump_volume === \"\" || imaging_pump_volume === null) {\n    msg.topic = \"Missing entry :\";\n    msg.payload = \"Volume inbetween images\";\n    return [null, msg];\n} else if (acq_id === undefined || acq_id === \"\") {\n    msg.topic = \"Missing entry :\";\n    msg.payload = \"Acquisition ID\";\n    return [null, msg];\n} else if (nb_frame === undefined || nb_frame === \"\" || nb_frame === null) {\n    msg.topic = \"Missing entry :\";\n    msg.payload = \"Number of image to save\";\n    return [null, msg];\n} else if (pump_direction === undefined || pump_direction === \"\" || pump_direction === null) {\n    msg.topic = \"Missing entry :\";\n    msg.payload = \"Pump direction\";\n    return [null, msg];\n} else if (sleep_before === undefined || sleep_before === \"\" || sleep_before === null) {\n    msg.topic = \"Missing entry :\";\n    msg.payload = \"Delay before image\";\n    return [null, msg];\n}else if (object_date === undefined || object_date === \"\" || object_date === null) {\n    msg.topic = \"Missing entry :\";\n    msg.payload = \"Object date\";\n    return [null, msg];\n}\n\nmsg.payload = {\n    \"action\": \"image\",\n    \"sleep\": sleep_before,\n    \"pump_direction\": pump_direction,\n    \"volume\": imaging_pump_volume,\n    \"nb_frame\": nb_frame,\n}\nmsg.send = true\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 440,
        "wires": [
            [
                "25998ceb4a2a62cb",
                "fdcf20a12a56cf4b",
                "a5243b308d1be866"
            ],
            [
                "32bc9f42edb73992"
            ]
        ]
    },
    {
        "id": "32bc9f42edb73992",
        "type": "ui_toast",
        "z": "411cf41f68dec3b9",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 890,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "8c83c455497e4051",
        "type": "mqtt out",
        "z": "411cf41f68dec3b9",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 1130,
        "y": 420,
        "wires": []
    },
    {
        "id": "9abd16d1c2e4a0de",
        "type": "ui_button",
        "z": "411cf41f68dec3b9",
        "name": "Stop Acquisition",
        "group": "c44a5e0a7105676d",
        "order": 11,
        "width": 5,
        "height": 1,
        "passthru": true,
        "label": "STOP ACQUISITION",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "icon": "cancel",
        "payload": "{\"action\":\"stop\"}",
        "payloadType": "json",
        "topic": "imager/image",
        "x": 420,
        "y": 480,
        "wires": [
            [
                "a50531852311bf41"
            ]
        ]
    },
    {
        "id": "a50531852311bf41",
        "type": "mqtt out",
        "z": "411cf41f68dec3b9",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 610,
        "y": 480,
        "wires": []
    },
    {
        "id": "5aec9a3ba7507a29",
        "type": "ui_switch",
        "z": "411cf41f68dec3b9",
        "name": "Pump direction",
        "label": "Pump direction",
        "tooltip": "BACKWARD / FORWARD",
        "group": "c44a5e0a7105676d",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "pump_direction",
        "style": "",
        "onvalue": "FORWARD",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "BACKWARD",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 420,
        "y": 520,
        "wires": [
            [
                "b86f414c99669f2f"
            ]
        ]
    },
    {
        "id": "25998ceb4a2a62cb",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "Encapsulate config",
        "func": "msg.payload = {\n\t\"action\": \"update_config\",\n\t\"config\": {\n    \t\"description\": {\n    \t\t\"sample_project\": \"Project's name\",\n    \t\t\"sample_id\": \"Sample ID\",\n    \t\t\"sample_uuid\": \"Sample UUID (Autogenerated)\",\n    \t\t\"sample_ship\": \"Ship's name\",\n    \t\t\"sample_operator\": \"Operator's name\",\n    \t\t\"sample_sampling_gear\": \"Sampling gear used\",\n    \t\t\"sample_concentrated_sample_volume\": \"Volume of concentrated sample, in mL\",\n    \t\t\"sample_total_volume\": \"Total volume filtered by the net used, in L\",\n    \t\t\"sample_dilution_factor\": \"Dilution factor of the sample, 0.5 if diluted by 2, 2 if concentrated by 2\",\n    \t\t\"sample_speed_through_water\": \"Speed of the boat through water when sampling, in kts\",\n    \t\t\"acq_id\": \"Acquisition ID\",\n    \t\t\"acq_uuid\": \"Acquisition UUID (Autogenerated)\",\n    \t\t\"acq_instrument\": \"Instrument type\",\n    \t\t\"acq_instrument_id\": \"Instrument ID\",\n    \t\t\"acq_celltype\": \"Flow cell dimension thickness, in µm\",\n    \t\t\"acq_minimum_mesh\": \"Minimum filtration mesh size, in µm\",\n    \t\t\"acq_maximum_mesh\": \"Maximum filtration mesh size, in µm\",\n    \t\t\"acq_min_esd\": \"\",\n    \t\t\"acq_max_esd\": \"\",\n    \t\t\"acq_volume\": \"Pumped volume, in mL\",\n\t\t    \"acq_imaged_volume\": \"Total imaged volume, in mL\",\n    \t\t\"acq_magnification\": \"Optical magnification\",\n    \t\t\"acq_fnumber_objective\": \"Focal length of the objective, in mm\",\n    \t\t\"acq_camera_name\": \"Name of the camera used\",\n    \t\t\"acq_nb_frame\": \"Number of picture taken\",\n            \"acq_local_datetime\": \"Instrument local datetime\",\n            \"acq_camera_resolution\": \"Resolution of the images\",\n            \"acq_camera_iso\": \"ISO Number of the images\",\n            \"acq_camera_shutter_speed\": \"Shutter speed of the images, in µs\",\n            \"acq_software\": \"Software version number\",\n    \t\t\"object_date\": \"Sample collection date (or beginning if using a net)\",\n    \t\t\"object_time\": \"Sample collection time (or beginning if using a net)\",\n    \t\t\"object_lat\": \"Sample collection latitude (or beginning if using a net)\",\n    \t\t\"object_lon\": \"Sample collection longitude (or beginning if using a net)\",\n    \t\t\"object_depth_min\": \"Sample collection minimal depth, in m\",\n    \t\t\"object_depth_max\": \"Sample collection maximum depth, in m\",\n    \t\t\"process_pixel\": \"Pixel imaging resolution, in µm/pixel\",\n    \t\t\"process_datetime\": \"Segmentation timestamp\",\n    \t\t\"process_id\": \"Segmentation ID\",\n    \t\t\"process_uuid\": \"Segmentation UUID (Autogenerated)\",\n    \t\t\"process_source\": \"Code source link of the executed code\",\n    \t\t\"process_commit\": \"Version reference of the executed code\",\n    \t\t\"sample_gear_net_opening\": \"Sample mouth opening dimension, in mm\",\n    \t\t\"object_date_end\": \"Sample end collection date when using a net\",\n    \t\t\"object_time_end\": \"Sample end collection time when using a net\",\n    \t\t\"object_lat_end\": \"Sample end collection latitude when using a net\",\n    \t\t\"object_lon_end\": \"Sample end collection longitude when using a net\",\n    \t},\n\t\t\"sample_project\": global.get(\"sample_project\"),\n\t\t\"sample_id\": global.get(\"sample_project\") + \"_\" + global.get(\"sample_id\"),\n\t\t\"sample_ship\": global.get(\"sample_ship\"),\n\t\t\"sample_operator\": global.get(\"sample_operator\"),\n\t\t\"sample_sampling_gear\": global.get(\"sample_sampling_gear\"),\n\t\t\"sample_concentrated_sample_volume\": global.get(\"sample_concentrated_sample_volume\"),\n\t\t\"sample_total_volume\": global.get(\"sample_total_volume\"),\n\t\t\"sample_dilution_factor\": global.get(\"sample_dilution_factor\"),\n\t\t\"sample_speed_through_water\": global.get(\"sample_speed_through_water\"),\n\n\t\t\"acq_id\": global.get(\"sample_project\") + \"_\" + global.get(\"sample_id\")+ \"_\" + global.get(\"acq_id\"),\n\t\t\"acq_instrument\": global.get(\"acq_instrument\"),\n\t\t\"acq_instrument_id\": global.get(\"acq_instrument_id\"),\n\t\t\"acq_celltype\": global.get(\"acq_celltype\"),\n\t\t\"acq_minimum_mesh\": global.get(\"acq_minimum_mesh\"),\n\t\t\"acq_maximum_mesh\": global.get(\"acq_maximum_mesh\"),\n\t\t\"acq_min_esd\": global.get(\"acq_min_esd\"),\n\t\t\"acq_max_esd\": global.get(\"acq_max_esd\"),\n\t\t\"acq_volume\": global.get(\"acq_volume\"),\n\t\t\"acq_imaged_volume\": global.get(\"acq_imaged_volume\"),\n\t\t\"acq_magnification\": global.get(\"acq_magnification\"),\n\t\t\"acq_fnumber_objective\": global.get(\"acq_fnumber_objective\"),\n\t\t\"acq_camera\": global.get(\"acq_camera\"),\n\t\t\"acq_nb_frame\": global.get(\"nb_frame\"),\n\t\t\"acq_software\": global.get(\"acq_software\"),\n\n\t\t\"object_date\": global.get(\"object_date\"),\n\t\t\"object_time\": global.get(\"object_time\"),\n\t\t\"object_lat\": global.get(\"object_lat\"),\n\t\t\"object_lon\": global.get(\"object_lon\"),\n\t\t\"object_depth_min\": global.get(\"object_depth_min\"),\n\t\t\"object_depth_max\": global.get(\"object_depth_max\"),\n\n\t\t\"process_pixel\": global.get(\"process_pixel\"),\n\t\t\"process_source\": global.get(\"process_source\"),\n\t\t\"process_commit\": global.get(\"process_commit\")\n\t}\n};\n\nif (msg.payload.config.sample_sampling_gear.startsWith(\"net\")) {\n\tmsg.payload.config[\"sample_gear_net_opening\"] = global.get(\"sample_gear_net_opening\")\n\tmsg.payload.config[\"object_date_end\"] = global.get(\"object_date_end\")\n\tmsg.payload.config[\"object_time_end\"] = global.get(\"object_time_end\")\n\tmsg.payload.config[\"object_lat_end\"] = global.get(\"object_lat_end\")\n\tmsg.payload.config[\"object_lon_end\"] = global.get(\"object_lon_end\")\n}\n\nif ( msg.send == true){\n\treturn [msg, msg]\n}\nelse{\n\treturn [msg, null]\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 400,
        "wires": [
            [
                "e6ce5bc8456f4021"
            ],
            [
                "8c83c455497e4051"
            ]
        ]
    },
    {
        "id": "fdcf20a12a56cf4b",
        "type": "delay",
        "z": "411cf41f68dec3b9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 900,
        "y": 440,
        "wires": [
            [
                "8c83c455497e4051"
            ]
        ]
    },
    {
        "id": "023b93158e599600",
        "type": "ui_button",
        "z": "411cf41f68dec3b9",
        "name": "",
        "group": "c44a5e0a7105676d",
        "order": 10,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Update config",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "save",
        "payload": "",
        "payloadType": "str",
        "topic": "imager/image",
        "topicType": "str",
        "x": 420,
        "y": 400,
        "wires": [
            [
                "25998ceb4a2a62cb"
            ]
        ]
    },
    {
        "id": "90013a77a666cee4",
        "type": "subflow:63c85b96537b7355",
        "z": "411cf41f68dec3b9",
        "name": "",
        "env": [],
        "x": 110,
        "y": 180,
        "wires": [
            [
                "207c41f91a67d09a",
                "c9624f7770e61620",
                "a715982bb14643d0",
                "8559e5899fb3e42b",
                "bf3bf02d344cbb31"
            ]
        ]
    },
    {
        "id": "207c41f91a67d09a",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "get acq_id",
        "func": "msg.payload = msg.payload.acq_id;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 180,
        "wires": [
            [
                "b5fcb126ac4fb085"
            ]
        ]
    },
    {
        "id": "c9624f7770e61620",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "get acq_celltype",
        "func": "msg.topic = 'acq_celltype';\nmsg.payload = msg.payload.acq_celltype;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 100,
        "wires": [
            [
                "c0ccbebbbd0d55ca"
            ]
        ]
    },
    {
        "id": "fd1b24d9d8509793",
        "type": "inject",
        "z": "411cf41f68dec3b9",
        "name": "Default: FORWARD",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "pump_direction",
        "payload": "FORWARD",
        "payloadType": "str",
        "x": 180,
        "y": 520,
        "wires": [
            [
                "5aec9a3ba7507a29"
            ]
        ]
    },
    {
        "id": "b86f414c99669f2f",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "set global",
        "func": "global.set(msg.topic, msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "f20ab449e30445c5",
        "type": "ui_text_input",
        "z": "411cf41f68dec3b9",
        "name": "nb_frame",
        "label": "Number of images to acquire",
        "tooltip": "",
        "group": "c44a5e0a7105676d",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "nb_frame",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 680,
        "y": 220,
        "wires": [
            [
                "4c0e4df7aaad57db",
                "39c84feb284f36ad",
                "0c8f7e79ba40232b"
            ]
        ]
    },
    {
        "id": "328484c0c1a6e1b3",
        "type": "switch",
        "z": "411cf41f68dec3b9",
        "name": "topic filter",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status/pump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/focus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/light",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/imager",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 320,
        "y": 800,
        "wires": [
            [
                "dc2dfaf3170a5d8b",
                "3ff9236402a45581"
            ],
            [
                "dad0bd96a8074361",
                "3ff9236402a45581"
            ],
            [
                "3ff9236402a45581"
            ],
            [
                "f157efb3bf533b6f",
                "e183e562fdfbe0c6"
            ]
        ]
    },
    {
        "id": "52e7bf63c192a83b",
        "type": "ui_text",
        "z": "411cf41f68dec3b9",
        "group": "6f11621d3ee8169b",
        "order": 3,
        "width": 10,
        "height": 2,
        "name": "imager",
        "label": "Imager status:",
        "format": "{{msg.payload.status}}",
        "layout": "col-center",
        "x": 770,
        "y": 740,
        "wires": []
    },
    {
        "id": "dad0bd96a8074361",
        "type": "ui_text",
        "z": "411cf41f68dec3b9",
        "group": "6f11621d3ee8169b",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "focus",
        "label": "Focus status:",
        "format": "{{msg.payload.status}}",
        "layout": "col-center",
        "x": 770,
        "y": 700,
        "wires": []
    },
    {
        "id": "dc2dfaf3170a5d8b",
        "type": "ui_text",
        "z": "411cf41f68dec3b9",
        "group": "6f11621d3ee8169b",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "pump",
        "label": "Pump status:",
        "format": "{{msg.payload.status}}",
        "layout": "col-center",
        "x": 770,
        "y": 660,
        "wires": []
    },
    {
        "id": "a30809e6a04661bd",
        "type": "link in",
        "z": "411cf41f68dec3b9",
        "name": "Status for fluidic module",
        "links": [
            "c2381ff323eeaf14"
        ],
        "x": 175,
        "y": 800,
        "wires": [
            [
                "328484c0c1a6e1b3"
            ]
        ]
    },
    {
        "id": "f157efb3bf533b6f",
        "type": "switch",
        "z": "411cf41f68dec3b9",
        "name": "Imaging state",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$contains(msg.payload.status, \"jpg\")\t",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 540,
        "y": 880,
        "wires": [
            [
                "6a92f2d7cbf064da"
            ],
            [
                "3ff9236402a45581"
            ]
        ]
    },
    {
        "id": "6a92f2d7cbf064da",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "img_counter",
        "func": "img_counter=flow.get('img_counter')\nif (img_counter === undefined || img_counter === \"\"){\n    img_counter = 0\n}\nimg_counter=img_counter+1\nflow.set('img_counter',img_counter)\nmsg.payload = img_counter\nmsg.payload = (100 * img_counter/global.get('nb_frame')).toFixed(2)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 860,
        "wires": [
            [
                "a800403d9858c386"
            ]
        ]
    },
    {
        "id": "7d456e7be347b78d",
        "type": "ui_toast",
        "z": "411cf41f68dec3b9",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1270,
        "y": 900,
        "wires": []
    },
    {
        "id": "6b460b1419ab6961",
        "type": "template",
        "z": "411cf41f68dec3b9",
        "name": "Create sentence",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The {{topic}} is {{payload.status}}",
        "output": "str",
        "x": 1050,
        "y": 900,
        "wires": [
            [
                "7d456e7be347b78d"
            ]
        ]
    },
    {
        "id": "3ff9236402a45581",
        "type": "change",
        "z": "411cf41f68dec3b9",
        "name": "Remove high-level topic",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "status/",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 900,
        "wires": [
            [
                "6b460b1419ab6961"
            ]
        ]
    },
    {
        "id": "a800403d9858c386",
        "type": "ui_gauge",
        "z": "411cf41f68dec3b9",
        "name": "progress donut",
        "group": "9e3802a3d7e9c0a8",
        "order": 3,
        "width": 6,
        "height": 3,
        "gtype": "donut",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ffa83f",
            "#e6ff02",
            "#00dfe9"
        ],
        "seg1": "50",
        "seg2": "75",
        "x": 1260,
        "y": 860,
        "wires": []
    },
    {
        "id": "a987e3c852bc56c9",
        "type": "ui_text",
        "z": "411cf41f68dec3b9",
        "group": "c44a5e0a7105676d",
        "order": 5,
        "width": 5,
        "height": 1,
        "name": "Total imaged volume",
        "label": "Total imaged volume",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1200,
        "y": 100,
        "wires": []
    },
    {
        "id": "0c8f7e79ba40232b",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "imaged volume calc",
        "func": "camera = global.get(\"acq_camera\");\ncell = global.get(\"acq_celltype\");\nnb_frame = global.get(\"nb_frame\");\nprocess_pixel = global.get(\"process_pixel\");\n\nvar volume = 0\nif (camera == \"HQ Camera\"){\n    volume = nb_frame * (process_pixel*4056*process_pixel*3040*cell/1000000000) / 1000;\n}\nelse if (camera == \"Camera v2.1\"){\n    volume = nb_frame * (process_pixel*3280*process_pixel*2464*cell/1000000000) / 1000;\n}\nelse{\n    msg.payload = \"The camera is not known to this system\";\n    return msg;\n}\n\nglobal.set(\"acq_imaged_volume\", volume.toFixed(4))\n\nmsg.payload = volume.toFixed(2) + \" mL\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 100,
        "wires": [
            [
                "a987e3c852bc56c9"
            ]
        ],
        "info": "### Focusing\n##### focus.py `nb_step` `orientation`\n\n- `nb_step` : **integer** (from 1 to 100000) - number of step to perform by the stage (about 31um/step)\n- `orientation` : **string** - orientation of the focus either `up` or `down`\n\nExample:\n\n    python3.7 $HOME/PlanktoScope/scripts/focus.py 650 up\n"
    },
    {
        "id": "35679dca6e7a1080",
        "type": "ui_text",
        "z": "411cf41f68dec3b9",
        "group": "c44a5e0a7105676d",
        "order": 7,
        "width": 5,
        "height": 1,
        "name": "Total pumped volume",
        "label": "Total pumped volume",
        "format": "{{msg.payload}} mL",
        "layout": "col-center",
        "x": 1200,
        "y": 260,
        "wires": []
    },
    {
        "id": "39c84feb284f36ad",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "acq_volume calc",
        "func": "var imaging_pump_volume = global.get(\"imaging_pump_volume\");\nvar nb_frame = global.get(\"nb_frame\");\nvar acq_volume = 0\n\nacq_volume =  (Number(nb_frame)*Number(imaging_pump_volume)).toFixed(2)\nglobal.set(\"acq_volume\", acq_volume)\n\nmsg.payload = acq_volume\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 260,
        "wires": [
            [
                "35679dca6e7a1080"
            ]
        ],
        "info": "### Focusing\n##### focus.py `nb_step` `orientation`\n\n- `nb_step` : **integer** (from 1 to 100000) - number of step to perform by the stage (about 31um/step)\n- `orientation` : **string** - orientation of the focus either `up` or `down`\n\nExample:\n\n    python3.7 $HOME/PlanktoScope/scripts/focus.py 650 up\n"
    },
    {
        "id": "e183e562fdfbe0c6",
        "type": "switch",
        "z": "411cf41f68dec3b9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "status",
                "vt": "str"
            },
            {
                "t": "hask",
                "v": "camera_name",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 760,
        "wires": [
            [
                "52e7bf63c192a83b"
            ],
            [
                "e1e4bb0a0c9ac678"
            ]
        ]
    },
    {
        "id": "e1e4bb0a0c9ac678",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "set camera name",
        "func": "global.set(\"acq_camera\", msg.payload.camera_name);\n\nmsg.payload = msg.payload.camera_name;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 810,
        "y": 780,
        "wires": [
            [
                "682ba0080532abf3"
            ]
        ]
    },
    {
        "id": "682ba0080532abf3",
        "type": "link out",
        "z": "411cf41f68dec3b9",
        "name": "Camera Name",
        "links": [
            "b9246cbd98034194",
            "302c7510e4853732",
            "b20440e37407b271"
        ],
        "x": 965,
        "y": 780,
        "wires": []
    },
    {
        "id": "dededf6a16f20ef6",
        "type": "ui_numeric",
        "z": "411cf41f68dec3b9",
        "name": "sleep_before",
        "label": "Delay to stabilize image (s)",
        "tooltip": "Happens before every capture",
        "group": "c44a5e0a7105676d",
        "order": 4,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "sleep_before",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0.1",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 670,
        "y": 140,
        "wires": [
            [
                "4c0e4df7aaad57db"
            ]
        ]
    },
    {
        "id": "302c7510e4853732",
        "type": "link in",
        "z": "411cf41f68dec3b9",
        "name": "",
        "links": [
            "682ba0080532abf3"
        ],
        "x": 735,
        "y": 60,
        "wires": [
            [
                "0c8f7e79ba40232b"
            ]
        ]
    },
    {
        "id": "97b6d3913ca81fbe",
        "type": "ui_template",
        "z": "411cf41f68dec3b9",
        "group": "9e3802a3d7e9c0a8",
        "name": "progress header",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<center><h2>Capture progress</h2></center>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1270,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "a5243b308d1be866",
        "type": "subflow:63c85b96537b7355",
        "z": "411cf41f68dec3b9",
        "name": "",
        "env": [],
        "x": 890,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "a715982bb14643d0",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "get nb_frame",
        "func": "msg.payload = msg.payload.nb_frame;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 220,
        "wires": [
            [
                "f20ab449e30445c5"
            ]
        ]
    },
    {
        "id": "8559e5899fb3e42b",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "get imaging_pump_volume",
        "func": "msg.payload = msg.payload.imaging_pump_volume;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 260,
        "wires": [
            [
                "f9e6c843ec10dfb6"
            ]
        ]
    },
    {
        "id": "bf3bf02d344cbb31",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "get sleep_before",
        "func": "msg.payload = msg.payload.sleep_before;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 140,
        "wires": [
            [
                "dededf6a16f20ef6"
            ]
        ]
    },
    {
        "id": "e5d6fcd189b3decc",
        "type": "ui_ui_control",
        "z": "411cf41f68dec3b9",
        "name": "onTab",
        "events": "all",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "0c04e9b9b1871965"
            ]
        ]
    },
    {
        "id": "0c04e9b9b1871965",
        "type": "function",
        "z": "411cf41f68dec3b9",
        "name": "check tab",
        "func": "if (msg.name == \"Fluidic Acquisition\"){\n    return { \"topic\": \"imager/ image\" }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "25998ceb4a2a62cb"
            ]
        ],
        "outputLabels": [
            "interface"
        ]
    },
    {
        "id": "f9e6c843ec10dfb6",
        "type": "ui_text_input",
        "z": "411cf41f68dec3b9",
        "name": "imaging_pump_volume",
        "label": "Pumped volume (mL)",
        "tooltip": "between frames",
        "group": "c44a5e0a7105676d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "imaging_pump_volume",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 630,
        "y": 260,
        "wires": [
            [
                "4c0e4df7aaad57db",
                "39c84feb284f36ad"
            ]
        ]
    },
    {
        "id": "723633205387c4c8",
        "type": "ui_button",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "group": "b73d4f2d8efadb3d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Home",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "home",
        "payload": "{\"tab\":\"Home\"}",
        "payloadType": "json",
        "topic": "",
        "x": 430,
        "y": 600,
        "wires": [
            [
                "8e0cebb3f9a4497f"
            ]
        ]
    },
    {
        "id": "8e0cebb3f9a4497f",
        "type": "ui_ui_control",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "events": "change",
        "x": 740,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "45d4cd7cf7f00d34",
        "type": "ui_button",
        "z": "12e3aa44e2f707ef",
        "name": "Start segmentation",
        "group": "317006e814b5c013",
        "order": 10,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Start segmentation",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"action\":\"segment\"}",
        "payloadType": "json",
        "topic": "segmenter/segment",
        "x": 370,
        "y": 460,
        "wires": [
            [
                "99e2858ce1642c0d",
                "428894bb62736278"
            ]
        ]
    },
    {
        "id": "7d5a27363d2411a5",
        "type": "ui_button",
        "z": "12e3aa44e2f707ef",
        "d": true,
        "name": "Stop segmentation",
        "group": "317006e814b5c013",
        "order": 12,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "Stop segmentation",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "icon": "",
        "payload": "{\"action\":\"stop\"}",
        "payloadType": "json",
        "topic": "segmenter/segment",
        "x": 370,
        "y": 520,
        "wires": [
            [
                "2f8c828f2d93d197"
            ]
        ]
    },
    {
        "id": "2f8c828f2d93d197",
        "type": "mqtt out",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 850,
        "y": 520,
        "wires": []
    },
    {
        "id": "bf1bba838821d0fa",
        "type": "function",
        "z": "12e3aa44e2f707ef",
        "name": "obj_counter",
        "func": "obj_counter = flow.get('obj_counter')\nobj_counter = obj_counter + 1\nflow.set('obj_counter', obj_counter)\nmsg.payload = obj_counter\nmsg.topic = \"object count\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 810,
        "y": 800,
        "wires": [
            [
                "92d264859512c9be",
                "203151bcd5692927"
            ]
        ]
    },
    {
        "id": "ac34e7ea3aeca95c",
        "type": "switch",
        "z": "12e3aa44e2f707ef",
        "name": "Segmenter",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status/segmenter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/segmenter/name",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/segmenter/object_id",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/segmenter/metric",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 490,
        "y": 740,
        "wires": [
            [
                "736d42c7bdb9951f",
                "027f419cfa2cff95"
            ],
            [
                "c701005993980cf8"
            ],
            [
                "bf1bba838821d0fa"
            ],
            [
                "67b0aa4ee3876ece"
            ]
        ]
    },
    {
        "id": "203151bcd5692927",
        "type": "ui_chart",
        "z": "12e3aa44e2f707ef",
        "name": "counter graph",
        "group": "91827485c5004c33",
        "order": 7,
        "width": 10,
        "height": 2,
        "label": "",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Objects count will be shown here once the segmentation is started",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1340,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "67b0aa4ee3876ece",
        "type": "function",
        "z": "12e3aa44e2f707ef",
        "name": "ex : area",
        "func": "// Payload looks like this:\n// {'name': '01_13_28_232066_0',\n//  'metadata': {\n//      'label': 0, 'width': 29, 'height': 80, ....\n\nmsg.payload=msg.payload.metadata.area_exc\nmsg.topic=\"area\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 920,
        "wires": [
            [
                "fe21f8d0f1e0c3cd"
            ]
        ]
    },
    {
        "id": "1c634baffe14aabf",
        "type": "ui_toast",
        "z": "12e3aa44e2f707ef",
        "position": "top left",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1350,
        "y": 680,
        "wires": []
    },
    {
        "id": "fe21f8d0f1e0c3cd",
        "type": "ui_chart",
        "z": "12e3aa44e2f707ef",
        "name": "Area chart",
        "group": "91827485c5004c33",
        "order": 9,
        "width": 10,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Objects area will be shown here once the segmentation is started",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1330,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "c701005993980cf8",
        "type": "debug",
        "z": "12e3aa44e2f707ef",
        "name": "segmentation name",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 760,
        "wires": []
    },
    {
        "id": "72ab45fddfe1b3a6",
        "type": "template",
        "z": "12e3aa44e2f707ef",
        "name": "Create sentence",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The {{topic}} is {{payload.status}}",
        "output": "str",
        "x": 1100,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "736d42c7bdb9951f",
        "type": "change",
        "z": "12e3aa44e2f707ef",
        "name": "Remove high-level topic",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "status/",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 680,
        "wires": [
            [
                "72ab45fddfe1b3a6"
            ]
        ]
    },
    {
        "id": "027f419cfa2cff95",
        "type": "ui_text",
        "z": "12e3aa44e2f707ef",
        "group": "91827485c5004c33",
        "order": 1,
        "width": 10,
        "height": 1,
        "name": "segmenter",
        "label": "Segmenter status:",
        "format": "{{msg.payload.status}}",
        "layout": "row-spread",
        "x": 810,
        "y": 720,
        "wires": []
    },
    {
        "id": "92d264859512c9be",
        "type": "ui_text",
        "z": "12e3aa44e2f707ef",
        "group": "91827485c5004c33",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "counter",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1320,
        "y": 800,
        "wires": []
    },
    {
        "id": "c87bcd56a0581947",
        "type": "inject",
        "z": "12e3aa44e2f707ef",
        "name": "Init graphs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "object count",
        "payload": "0",
        "payloadType": "num",
        "x": 810,
        "y": 880,
        "wires": [
            [
                "e9d8fa458cec8dd5",
                "638c779fe972bb41"
            ]
        ]
    },
    {
        "id": "6d99e9292a69e9ef",
        "type": "link in",
        "z": "12e3aa44e2f707ef",
        "name": "Segmenter module status",
        "links": [
            "2804a5d22bf63417"
        ],
        "x": 295,
        "y": 740,
        "wires": [
            [
                "ac34e7ea3aeca95c"
            ]
        ]
    },
    {
        "id": "efb68acd37111e90",
        "type": "function",
        "z": "12e3aa44e2f707ef",
        "name": "set global",
        "func": "global.set(msg.topic, msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "a278e679d5f8bbfb",
        "type": "ui_template",
        "z": "12e3aa44e2f707ef",
        "group": "91827485c5004c33",
        "name": "Object counts",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<div><center><h2>Object counts</h2></center></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1340,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "08a261680c231400",
        "type": "ui_template",
        "z": "12e3aa44e2f707ef",
        "group": "91827485c5004c33",
        "name": "Area chart",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<div><center><h2>Area chart</h2></center></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1330,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "99e2858ce1642c0d",
        "type": "function",
        "z": "12e3aa44e2f707ef",
        "name": "prepare segmentation",
        "func": "global.set('obj_counter', 0);\n\nvar segmentation_list = flow.get('segmentation_list')\nif (segmentation_list !== undefined && segmentation_list !== \"\") {\n    msg.payload['path'] = segmentation_list\n}\n\n\nvar force = flow.get('force')\nif (force !== undefined && force !== \"\") {\n    msg.payload['settings'] = {\"force\":Boolean(force)}\n}\n\n\nvar recursive = flow.get('recursive')\nif (recursive !== undefined && recursive !== \"\") {\n    if (\"settings\" in msg.payload){\n        msg.payload.settings[\"recursive\"] = Boolean(recursive)\n    }\n    else{\n        msg.payload['settings'] = {\"recursive\": Boolean(recursive)}\n    }\n}\n\nvar ecotaxa = flow.get('ecotaxa')\nif (ecotaxa !== undefined && ecotaxa !== \"\") {\n    if (\"settings\" in msg.payload){\n        msg.payload.settings[\"ecotaxa\"] = Boolean(ecotaxa)\n    }\n    else{\n        msg.payload['settings'] = {\"ecotaxa\": Boolean(ecotaxa)}\n    }\n}\n\nvar keep = flow.get('keep')\nif (keep !== undefined && keep !== \"\") {\n    if (\"settings\" in msg.payload){\n        msg.payload.settings[\"keep\"] = Boolean(keep)\n    }\n    else{\n        msg.payload['settings'] = {\"keep\": Boolean(keep)}\n    }\n}\n\nvar process_id = global.get('process_id')\nif (process_id !== undefined && process_id !== \"\") {\n    if (\"settings\" in msg.payload){\n        msg.payload.settings[\"process_id\"] = process_id\n    }\n    else{\n        msg.payload['settings'] = {\"process_id\": process_id}\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 460,
        "wires": [
            [
                "2f8c828f2d93d197"
            ]
        ]
    },
    {
        "id": "8ae899152882f3d3",
        "type": "subflow:63c85b96537b7355",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "env": [],
        "x": 430,
        "y": 380,
        "wires": [
            [
                "6323a78a63c17aed"
            ]
        ]
    },
    {
        "id": "6323a78a63c17aed",
        "type": "function",
        "z": "12e3aa44e2f707ef",
        "name": "get process_id",
        "func": "msg.payload = msg.payload.process_id;\nmsg.topic = \"process_id\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 380,
        "wires": [
            [
                "f80ec0199da1be2e"
            ]
        ]
    },
    {
        "id": "8cf1b7708496a3ef",
        "type": "ui_list",
        "z": "12e3aa44e2f707ef",
        "group": "317006e814b5c013",
        "name": "",
        "order": 9,
        "width": 10,
        "height": 11,
        "lineType": "one",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 770,
        "y": 140,
        "wires": [
            [
                "e593ad89dc09dfbb"
            ]
        ]
    },
    {
        "id": "192cb3d958c7021b",
        "type": "dir2files",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "dirname": "/home/pi/data/img/",
        "pathRegex": "",
        "isRecursive": true,
        "findDir": true,
        "isArray": true,
        "x": 460,
        "y": 140,
        "wires": [
            [
                "32f62dc474546f65"
            ]
        ]
    },
    {
        "id": "e9ceafa82adae33d",
        "type": "ui_button",
        "z": "12e3aa44e2f707ef",
        "name": "Refresh",
        "group": "317006e814b5c013",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update acquisition's folder list",
        "tooltip": "Refresh the list of previous acquisitions",
        "color": "",
        "bgcolor": "",
        "icon": "mi-find_replace",
        "payload": "",
        "payloadType": "date",
        "topic": "update",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "192cb3d958c7021b",
                "3a58c027d6c0cf87"
            ]
        ]
    },
    {
        "id": "f152adc761175df3",
        "type": "inject",
        "z": "12e3aa44e2f707ef",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 100,
        "wires": [
            [
                "192cb3d958c7021b",
                "3a58c027d6c0cf87"
            ]
        ]
    },
    {
        "id": "e593ad89dc09dfbb",
        "type": "function",
        "z": "12e3aa44e2f707ef",
        "name": "update segmentation_list",
        "func": "var segmentation_list = flow.get('segmentation_list');\n\nif (segmentation_list === undefined || segmentation_list === \"\") {\n    segmentation_list = []\n    console.log(\"error\")\n}\n\npath = \"/home/pi/data/img/\" + msg.payload.title\n\nif (msg.payload.isChecked){\n    if (segmentation_list.includes(path) === false){\n        segmentation_list.push(path)\n    }\n    // Element already in list, don't push it more than once\n    //segmentation_list.push(msg.payload[\"title\"])\n}\nelse {\n    var pos = segmentation_list.indexOf(path)\n    segmentation_list.splice(pos, 1)\n}\n\nflow.set('segmentation_list', segmentation_list)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "3a58c027d6c0cf87",
        "type": "change",
        "z": "12e3aa44e2f707ef",
        "name": "Reset segmentation_list",
        "rules": [
            {
                "t": "set",
                "p": "segmentation_list",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "dd09a71e1411e7ee",
        "type": "ui_template",
        "z": "12e3aa44e2f707ef",
        "group": "317006e814b5c013",
        "name": "Update message",
        "order": 1,
        "width": 10,
        "height": 3,
        "format": "<div><left>You can choose here in which folder(s) you want the segmentation script to run. A few details though:\n<br>The segmentation is run recursively in all folders. So if you select a top level folder, the segmentation will be run in all subfolders.\n<br>Also, you will be able to chose wether for force the segmentation for folders in which it has run already.</left></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 270,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "32f62dc474546f65",
        "type": "function",
        "z": "12e3aa44e2f707ef",
        "name": "remove common",
        "func": "function remove_path(item, index, array) {\n  array[index] = item.replace(\"/home/pi/data/img/\", \"\")\n} \n\nmsg.payload.forEach(remove_path)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 140,
        "wires": [
            [
                "8cf1b7708496a3ef"
            ]
        ]
    },
    {
        "id": "88ca9983f3becdb6",
        "type": "ui_multistate_switch",
        "z": "12e3aa44e2f707ef",
        "name": "recursive toggle",
        "group": "317006e814b5c013",
        "order": 4,
        "width": 5,
        "height": 1,
        "label": "Recursive folder",
        "stateField": "payload",
        "enableField": "enable",
        "rounded": true,
        "useThemeColors": true,
        "hideSelectedLabel": false,
        "options": [
            {
                "label": "No",
                "value": "0",
                "valueType": "num",
                "color": "#009933"
            },
            {
                "label": "Yes",
                "value": "1",
                "valueType": "num",
                "color": "#999999"
            }
        ],
        "x": 480,
        "y": 220,
        "wires": [
            [
                "5126e332d4cf482e"
            ]
        ]
    },
    {
        "id": "cab1894c32e30927",
        "type": "ui_multistate_switch",
        "z": "12e3aa44e2f707ef",
        "name": "force toggle",
        "group": "317006e814b5c013",
        "order": 3,
        "width": 5,
        "height": 1,
        "label": "Force rework",
        "stateField": "payload",
        "enableField": "enable",
        "rounded": true,
        "useThemeColors": true,
        "hideSelectedLabel": false,
        "options": [
            {
                "label": "No",
                "value": "0",
                "valueType": "num",
                "color": "#009933"
            },
            {
                "label": "Yes",
                "value": "1",
                "valueType": "num",
                "color": "#999999"
            }
        ],
        "x": 470,
        "y": 300,
        "wires": [
            [
                "76b3780a28494035"
            ]
        ]
    },
    {
        "id": "5126e332d4cf482e",
        "type": "change",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "recursive",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "76b3780a28494035",
        "type": "change",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "force",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "3d82c26912a54652",
        "type": "inject",
        "z": "12e3aa44e2f707ef",
        "name": "0",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 270,
        "y": 280,
        "wires": [
            [
                "cab1894c32e30927",
                "76b3780a28494035"
            ]
        ]
    },
    {
        "id": "d68d3fc1aec1dc6b",
        "type": "ui_template",
        "z": "12e3aa44e2f707ef",
        "group": "91827485c5004c33",
        "name": "Stream Segmented object",
        "order": 2,
        "width": 10,
        "height": 8,
        "format": "<center>\n    Latest object segmented:<br/>\n    <img src=\"/ps/processing/segmenter/streams/object.mjpg\"\n    alt=\"If you see this, there probably is an error with the python service. Please restart your machine.\"\n    style=\"max-width: 100%;max-height: 100%;\">\n</center>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1380,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d1f4d0cdf4b5cc2d",
        "type": "inject",
        "z": "12e3aa44e2f707ef",
        "name": "1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 270,
        "y": 240,
        "wires": [
            [
                "88ca9983f3becdb6",
                "5126e332d4cf482e"
            ]
        ]
    },
    {
        "id": "e9d8fa458cec8dd5",
        "type": "function",
        "z": "12e3aa44e2f707ef",
        "name": "chart init",
        "func": "obj=[{\"series\": [],\"data\": [],\"labels\": []}]\nmsg.payload = obj\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 880,
        "wires": [
            [
                "fe21f8d0f1e0c3cd"
            ]
        ]
    },
    {
        "id": "638c779fe972bb41",
        "type": "change",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "obj_counter",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 840,
        "wires": [
            [
                "92d264859512c9be",
                "203151bcd5692927"
            ]
        ]
    },
    {
        "id": "ea3012f7bcbb729f",
        "type": "link in",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "links": [
            "9d699204982bb9cd"
        ],
        "x": 855,
        "y": 840,
        "wires": [
            [
                "638c779fe972bb41",
                "e9d8fa458cec8dd5"
            ]
        ]
    },
    {
        "id": "9d699204982bb9cd",
        "type": "link out",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "links": [
            "ea3012f7bcbb729f"
        ],
        "x": 715,
        "y": 500,
        "wires": []
    },
    {
        "id": "428894bb62736278",
        "type": "change",
        "z": "12e3aa44e2f707ef",
        "name": "Reset counters",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "object count",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 500,
        "wires": [
            [
                "9d699204982bb9cd"
            ]
        ]
    },
    {
        "id": "e192fb94c54fb1b3",
        "type": "ui_multistate_switch",
        "z": "12e3aa44e2f707ef",
        "name": "Ecotaxa archive",
        "group": "317006e814b5c013",
        "order": 6,
        "width": 5,
        "height": 1,
        "label": "Ecotaxa archive",
        "stateField": "payload",
        "enableField": "enable",
        "rounded": true,
        "useThemeColors": true,
        "hideSelectedLabel": false,
        "options": [
            {
                "label": "No",
                "value": "0",
                "valueType": "num",
                "color": "#009933"
            },
            {
                "label": "Yes",
                "value": "1",
                "valueType": "num",
                "color": "#999999"
            }
        ],
        "x": 1080,
        "y": 220,
        "wires": [
            [
                "ecb5483954c89641"
            ]
        ]
    },
    {
        "id": "ecb5483954c89641",
        "type": "change",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ecotaxa",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "12d60e23a34d4761",
        "type": "inject",
        "z": "12e3aa44e2f707ef",
        "name": "1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 910,
        "y": 240,
        "wires": [
            [
                "e192fb94c54fb1b3",
                "ecb5483954c89641"
            ]
        ]
    },
    {
        "id": "9ec832806ef0164d",
        "type": "ui_multistate_switch",
        "z": "12e3aa44e2f707ef",
        "name": "Keep objects",
        "group": "317006e814b5c013",
        "order": 5,
        "width": 5,
        "height": 1,
        "label": "Keep objects",
        "stateField": "payload",
        "enableField": "enable",
        "rounded": true,
        "useThemeColors": true,
        "hideSelectedLabel": false,
        "options": [
            {
                "label": "No",
                "value": "0",
                "valueType": "num",
                "color": "#009933"
            },
            {
                "label": "Yes",
                "value": "1",
                "valueType": "num",
                "color": "#999999"
            }
        ],
        "x": 1070,
        "y": 300,
        "wires": [
            [
                "80fc33a6bd510707"
            ]
        ]
    },
    {
        "id": "80fc33a6bd510707",
        "type": "change",
        "z": "12e3aa44e2f707ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "keep",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "551342ce104d2fd4",
        "type": "inject",
        "z": "12e3aa44e2f707ef",
        "name": "1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 910,
        "y": 280,
        "wires": [
            [
                "9ec832806ef0164d",
                "80fc33a6bd510707"
            ]
        ]
    },
    {
        "id": "f80ec0199da1be2e",
        "type": "ui_text_input",
        "z": "12e3aa44e2f707ef",
        "name": "process_id",
        "label": "Process unique ID*",
        "tooltip": "",
        "group": "317006e814b5c013",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "process_id",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 790,
        "y": 380,
        "wires": [
            [
                "efb68acd37111e90"
            ]
        ]
    },
    {
        "id": "87e9e912824a8595",
        "type": "ui_template",
        "z": "12d10fb79abadf1c",
        "group": "88657f803f95a5e4",
        "name": "Image browser",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<center>\n<iframe src=\"/ps/data/browse/files/\" width=\"1400px\" height=\"1100px\">\n</iframe>\n</center>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 400,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "480d65d06dfe09d3",
        "type": "ui_button",
        "z": "60cc63102b460ae0",
        "name": "",
        "group": "9e586edc6ceea6d8",
        "order": 4,
        "width": "6",
        "height": 1,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "className": "",
        "icon": "fa-repeat fa-2x",
        "payload": "reboot",
        "payloadType": "str",
        "topic": "reboot",
        "topicType": "str",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "e6a98f23c904e1f2"
            ]
        ]
    },
    {
        "id": "e6a98f23c904e1f2",
        "type": "exec",
        "z": "60cc63102b460ae0",
        "command": "sudo",
        "addpay": "payload",
        "append": "now",
        "useSpawn": "false",
        "timer": "2",
        "winHide": false,
        "oldrc": false,
        "name": "sudo cmd now",
        "x": 480,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0931139a4d499da5",
        "type": "ui_button",
        "z": "60cc63102b460ae0",
        "name": "",
        "group": "9e586edc6ceea6d8",
        "order": 5,
        "width": "6",
        "height": 1,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "className": "",
        "icon": "fa-power-off fa-2x",
        "payload": "shutdown",
        "payloadType": "str",
        "topic": "shutdown",
        "topicType": "str",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "e6a98f23c904e1f2"
            ]
        ]
    },
    {
        "id": "677a9b9232bb2cbc",
        "type": "link in",
        "z": "60cc63102b460ae0",
        "name": "Shutdown",
        "links": [
            "e71b548487a8e3a7"
        ],
        "x": 195,
        "y": 280,
        "wires": [
            [
                "e6a98f23c904e1f2"
            ]
        ]
    },
    {
        "id": "5ef327a2512dcd25",
        "type": "ui_button",
        "z": "60cc63102b460ae0",
        "name": "",
        "group": "9e586edc6ceea6d8",
        "order": 2,
        "width": "6",
        "height": 1,
        "passthru": true,
        "label": "Restart Hardware Controller",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "className": "",
        "icon": "fa-refresh fa-2x",
        "payload": "Restarting hardware controller...",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 440,
        "y": 420,
        "wires": [
            [
                "c2e287b4d01239f1",
                "f47e4dcb198eb68c"
            ]
        ]
    },
    {
        "id": "425539fe3d4f1056",
        "type": "link in",
        "z": "60cc63102b460ae0",
        "name": "Restart Hardware Controller",
        "links": [
            "44d9bbd2bb3b9dae",
            "ca1dcba514a4edfb"
        ],
        "x": 195,
        "y": 420,
        "wires": [
            [
                "5ef327a2512dcd25"
            ]
        ]
    },
    {
        "id": "f47e4dcb198eb68c",
        "type": "exec",
        "z": "60cc63102b460ae0",
        "command": "sudo systemctl restart planktoscope-org.device-backend.controller-planktoscopehat.service",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart hardware controller",
        "x": 780,
        "y": 420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e0569097d26453d7",
        "type": "ui_button",
        "z": "60cc63102b460ae0",
        "name": "",
        "group": "9e586edc6ceea6d8",
        "order": 3,
        "width": "6",
        "height": 1,
        "passthru": true,
        "label": "Restart Segmenter",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "className": "",
        "icon": "fa-refresh fa-2x",
        "payload": "Restarting segmenter...",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 410,
        "y": 500,
        "wires": [
            [
                "b62805d984e4e0db",
                "43eb54264f759823"
            ]
        ]
    },
    {
        "id": "b62805d984e4e0db",
        "type": "exec",
        "z": "60cc63102b460ae0",
        "command": "docker restart apps_ps_backend_proc-segmenter-server-1",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart segmenter",
        "x": 750,
        "y": 500,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f62795dec36a97d0",
        "type": "ui_template",
        "z": "60cc63102b460ae0",
        "group": "9e586edc6ceea6d8",
        "name": "Logs",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<p>\n    The PlanktoScope software application consists of three components: a Node-RED dashboard which provides the user interface you're using; a Hardware Controller\n    which executes commands sent from the Node-RED dashboard for hardware control and image acquisition; and a Segmenter which processes an acquired dataset of\n    images and isolates objects from those images. Each component has its own independent log of messages, managed separately from the logs for the other components.\n</p>\n<p>\n    All three components have live-updating logs which you can monitor. Additionally, the Hardware Controller and the Segmenter also save all of their log messages\n    to files which you can browse and download. Those software components create a new log file each time they start, and the name of the log file includes the time\n    in the PlanktoScope's clock when the software component started. However, if your PlanktoScope's clock is usually wrong, it makes the log files difficult to navigate.\n    This will be fixed in a future version of the software.\n</p>\n<p>\n    If you need to share your logs with other people (e.g. on Slack or GitHub), you should open the \"Downloadable Logs\" links, and then you can select one file or multiple\n    log files for downloading as a zip archive.\n</p>\n<ul>\n    <li>\n        Node-RED:\n        <ul>\n            <li><a href=\"/admin/cockpit/system/logs#/?prio=debug&amp;service=nodered.service\" style=\"color: white;\">Live-updating logs</a> (log in as the \"pi\" user with the \"pi\" user's password)</li>\n            <li>Certain errors generated in the dashboard: see the \"Dashboard errors\" panel on this page.</li>\n        </ul>\n    </li>\n    <li>\n        Hardware Controller:\n        <ul>\n            <li><a href=\"/admin/cockpit/system/logs#/?prio=debug&amp;service=planktoscope-org.device-backend.controller-planktoscopehat.service\" style=\"color: white;\">Live-updating logs</a> (log in as the \"pi\" user with the \"pi\" user's password)</li>\n            <li><a href=\"/admin/ps/device-backend-logs/browse/files/control/\" style=\"color: white;\">Downloadable logs</a></li>\n        </ul>\n    </li>\n    <li>\n        Segmenter:\n        <ul>\n            \n            <li><a href=\"/admin/dozzle/show?name=apps_ps_backend_proc-segmenter-server-1\" style=\"color: white;\">Live-updating logs</a></li>\n            <li><a href=\"/admin/ps/device-backend-logs/browse/files/processing/segmenter/\" style=\"color: white;\">Downloadable logs</a></li>\n        </ul>\n    </li>\n    <li>\n        Operating System:\n        <ul>\n            \n            <li><a href=\"/admin/cockpit/system/logs#/?prio=err\" style=\"color: white;\">Live-updating logs</a> (log in as the \"pi\" user with the \"pi\" user's password)</li>\n        </ul>\n    </li>\n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c2e287b4d01239f1",
        "type": "ui_toast",
        "z": "60cc63102b460ae0",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 750,
        "y": 380,
        "wires": []
    },
    {
        "id": "43eb54264f759823",
        "type": "ui_toast",
        "z": "60cc63102b460ae0",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 750,
        "y": 460,
        "wires": []
    },
    {
        "id": "6917f7f3a6d2e5df",
        "type": "exec",
        "z": "a93cd90e1ab9222e",
        "command": "vcgencmd measure_temp | tr -d \"temp=\" | tr -d \"'C\" | tr -d \"\\n\"",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "RPi Temp.",
        "x": 330,
        "y": 40,
        "wires": [
            [
                "94d21f2583e4c0d0"
            ],
            [],
            []
        ]
    },
    {
        "id": "08067a3edcd3881f",
        "type": "exec",
        "z": "a93cd90e1ab9222e",
        "command": "df -h | grep /dev/root | awk -F ' ' '{print $5}' | tr -d % | tr \"\\n$\" \"\\ \" |  sed 's/,/./' | tr -d \" \"",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Disk Usage",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "9d22367636170081"
            ],
            [],
            []
        ]
    },
    {
        "id": "ef1e8ea145e30c0e",
        "type": "inject",
        "z": "a93cd90e1ab9222e",
        "name": "update: 5s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "08067a3edcd3881f",
                "6917f7f3a6d2e5df",
                "8a2ea21c2cd5ca34",
                "5317e0a3616b7c7d",
                "f53b7791a784ca71"
            ]
        ]
    },
    {
        "id": "4490f8a137983448",
        "type": "ui_switch",
        "z": "a93cd90e1ab9222e",
        "name": "fan_state",
        "label": "Fan",
        "tooltip": "Fan control",
        "group": "091f470e867fbcb4",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "100",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "20",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 940,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "94d21f2583e4c0d0",
        "type": "switch",
        "z": "a93cd90e1ab9222e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "38",
                "vt": "num"
            },
            {
                "t": "lte",
                "v": "35",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 40,
        "wires": [
            [
                "ab748a03975ef7eb"
            ],
            [
                "05490516f5101611"
            ]
        ]
    },
    {
        "id": "05490516f5101611",
        "type": "change",
        "z": "a93cd90e1ab9222e",
        "name": "Set OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "20",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 60,
        "wires": [
            [
                "4490f8a137983448"
            ]
        ]
    },
    {
        "id": "ab748a03975ef7eb",
        "type": "change",
        "z": "a93cd90e1ab9222e",
        "name": "Set ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "100",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 20,
        "wires": [
            [
                "4490f8a137983448"
            ]
        ]
    },
    {
        "id": "c3b6e7f129604efe",
        "type": "inject",
        "z": "a93cd90e1ab9222e",
        "name": "once",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "start",
        "payloadType": "str",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "26155c7c41a5fbdb"
            ]
        ]
    },
    {
        "id": "630b02a8c20a96ad",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "set global",
        "func": "global.set(\"acq_instrument_id\",msg.payload);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "4f18052ae7eb1c42",
        "type": "subflow:63c85b96537b7355",
        "z": "a93cd90e1ab9222e",
        "name": "",
        "env": [],
        "x": 130,
        "y": 640,
        "wires": [
            [
                "218aefdd0dd0d172"
            ]
        ]
    },
    {
        "id": "f5d1691eef8f9c19",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "set global",
        "func": "global.set(\"acq_software\", msg.payload);\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "533f6a4eb1281a2d",
        "type": "ui_text",
        "z": "a93cd90e1ab9222e",
        "group": "4ad5877ccff6436a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Instrument Type",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 600,
        "y": 640,
        "wires": []
    },
    {
        "id": "50b0322518db7a9d",
        "type": "ui_text",
        "z": "a93cd90e1ab9222e",
        "group": "4ad5877ccff6436a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Instrument Name",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 610,
        "y": 680,
        "wires": []
    },
    {
        "id": "62251349460398e8",
        "type": "ui_text",
        "z": "a93cd90e1ab9222e",
        "group": "4ad5877ccff6436a",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Software Version",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 850,
        "y": 560,
        "wires": []
    },
    {
        "id": "32fca9011231f987",
        "type": "ui_text",
        "z": "a93cd90e1ab9222e",
        "group": "4ad5877ccff6436a",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Camera Name",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 600,
        "y": 760,
        "wires": []
    },
    {
        "id": "b9246cbd98034194",
        "type": "link in",
        "z": "a93cd90e1ab9222e",
        "name": "Camera Name",
        "links": [
            "682ba0080532abf3"
        ],
        "x": 155,
        "y": 760,
        "wires": [
            [
                "32fca9011231f987"
            ]
        ]
    },
    {
        "id": "9d22367636170081",
        "type": "switch",
        "z": "a93cd90e1ab9222e",
        "name": "if disk > 90%",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "90",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 120,
        "wires": [
            [
                "fafeba1d08ea1b2f"
            ]
        ]
    },
    {
        "id": "45e88abc1186da42",
        "type": "ui_toast",
        "z": "a93cd90e1ab9222e",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1a1d158bb44c6b6d",
        "type": "change",
        "z": "a93cd90e1ab9222e",
        "name": "full disk msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Your drive has reached 90% capacity, you should do a backup to an external drive and a purge.\"",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 120,
        "wires": [
            [
                "45e88abc1186da42"
            ]
        ]
    },
    {
        "id": "1aa50b2cf7b1513f",
        "type": "ui_button",
        "z": "a93cd90e1ab9222e",
        "name": "",
        "group": "091f470e867fbcb4",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Home",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "home",
        "payload": "{\"tab\":\"Home\"}",
        "payloadType": "json",
        "topic": "",
        "x": 430,
        "y": 800,
        "wires": [
            [
                "87daee6e899f3016"
            ]
        ]
    },
    {
        "id": "87daee6e899f3016",
        "type": "ui_ui_control",
        "z": "a93cd90e1ab9222e",
        "name": "",
        "events": "change",
        "x": 580,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "bacc9e7dadf24c11",
        "type": "ui_dropdown",
        "z": "a93cd90e1ab9222e",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Choose USB device",
        "group": "05c7fdde6e47afc6",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "No Drive Detected",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "device_path",
        "x": 840,
        "y": 840,
        "wires": [
            [
                "ffd9d8119b2fbdfc"
            ]
        ]
    },
    {
        "id": "b751186399680847",
        "type": "ui_button",
        "z": "a93cd90e1ab9222e",
        "name": "Detect drive",
        "group": "05c7fdde6e47afc6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Detect drive",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-usb fa-2x",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 150,
        "y": 840,
        "wires": [
            [
                "43d24b9886716d3f"
            ]
        ]
    },
    {
        "id": "43d24b9886716d3f",
        "type": "exec",
        "z": "a93cd90e1ab9222e",
        "command": "lsblk --bytes --json --paths --output-all",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "detect drive",
        "x": 330,
        "y": 840,
        "wires": [
            [
                "cec602f0d6c3f658"
            ],
            [],
            []
        ]
    },
    {
        "id": "cec602f0d6c3f658",
        "type": "json",
        "z": "a93cd90e1ab9222e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 840,
        "wires": [
            [
                "390420c95b90edcb"
            ]
        ]
    },
    {
        "id": "390420c95b90edcb",
        "type": "change",
        "z": "a93cd90e1ab9222e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[payload.blockdevices.children[mountpoint=null].name]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 840,
        "wires": [
            [
                "bacc9e7dadf24c11"
            ]
        ]
    },
    {
        "id": "0270cd9e110e4392",
        "type": "ui_button",
        "z": "a93cd90e1ab9222e",
        "name": "Backup to USB",
        "group": "05c7fdde6e47afc6",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Backup to USB",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "archive",
        "payload": "",
        "payloadType": "str",
        "topic": "USB Backup",
        "x": 160,
        "y": 900,
        "wires": [
            [
                "7b46ea1e0c7b8490"
            ]
        ]
    },
    {
        "id": "ffd9d8119b2fbdfc",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "set local",
        "func": "flow.set(msg.topic,msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "7b46ea1e0c7b8490",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "get device_path",
        "func": "msg.payload = flow.get(\"device_path\");\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 900,
        "wires": [
            [
                "b858111d5b414459"
            ]
        ]
    },
    {
        "id": "30a436d887a04c89",
        "type": "exec",
        "z": "a93cd90e1ab9222e",
        "command": "sudo /home/pi/PlanktoScope/scripts/bash/usb_backup.sh",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "usb_backup.sh",
        "x": 720,
        "y": 920,
        "wires": [
            [
                "eb44f4fa48135fd5"
            ],
            [],
            [
                "d1fd2226991cc152"
            ]
        ]
    },
    {
        "id": "b858111d5b414459",
        "type": "switch",
        "z": "a93cd90e1ab9222e",
        "name": "No Drive",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "No Drive Detected",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 520,
        "y": 900,
        "wires": [
            [
                "cd62219fe052f8c6"
            ],
            [
                "30a436d887a04c89",
                "9197cb5f8ba1886d"
            ]
        ]
    },
    {
        "id": "cd62219fe052f8c6",
        "type": "ui_toast",
        "z": "a93cd90e1ab9222e",
        "position": "dialog",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 710,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "eb44f4fa48135fd5",
        "type": "ui_toast",
        "z": "a93cd90e1ab9222e",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 930,
        "y": 900,
        "wires": []
    },
    {
        "id": "e19ff20c9dfd248d",
        "type": "ui_toast",
        "z": "a93cd90e1ab9222e",
        "position": "dialog",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1110,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "d1fd2226991cc152",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "return code",
        "func": "switch (msg.payload.code){\ncase 0:\n    msg.payload = \"All files successfully copied, you can remove your usb drive!\";\n    break;\ncase 1:\n    msg.payload = \"There was an error!\";\n    break;\ncase 2:\n    msg.payload = \"Error: your device is already mounted\"\n    break;\ncase 3:\n    msg.payload = \"Error while mounting the device\"\n    break;\ncase 4:\n    msg.payload = \"Error: some files were corrupted during the copy!\"\n    break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 940,
        "wires": [
            [
                "e19ff20c9dfd248d"
            ]
        ]
    },
    {
        "id": "f594050d1fd77d73",
        "type": "ui_button",
        "z": "a93cd90e1ab9222e",
        "name": "Purge local",
        "group": "05c7fdde6e47afc6",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Purge local data",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "icon": "delete_forever",
        "payload": "THIS IS GOING TO WIPE ALL THE LOCAL DATA. MAKE SURE YOU DID A BACKUP TO AN USB DRIVE BEFOREHAND.",
        "payloadType": "str",
        "topic": "BE EXTRA CAREFUL",
        "x": 150,
        "y": 1020,
        "wires": [
            [
                "ab6b39bb85980248"
            ]
        ]
    },
    {
        "id": "ab6b39bb85980248",
        "type": "ui_toast",
        "z": "a93cd90e1ab9222e",
        "position": "dialog",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "GO BACK",
        "cancel": "YES I'M SURE, I WANT TO PURGE THE DATA",
        "raw": false,
        "topic": "Data purge",
        "name": "",
        "x": 330,
        "y": 1020,
        "wires": [
            [
                "18d33033ede437c2"
            ]
        ]
    },
    {
        "id": "18d33033ede437c2",
        "type": "switch",
        "z": "a93cd90e1ab9222e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "YES I'M SURE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1020,
        "wires": [
            [
                "3c11d1d99027a784"
            ]
        ]
    },
    {
        "id": "3c11d1d99027a784",
        "type": "exec",
        "z": "a93cd90e1ab9222e",
        "command": "rm -rf /home/pi/data/img /home/pi/data/objects /home/pi/data/export",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "rm data",
        "x": 700,
        "y": 1020,
        "wires": [
            [
                "a2a22e1297204eca"
            ],
            [],
            []
        ]
    },
    {
        "id": "a2a22e1297204eca",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "error message",
        "func": "// TODO revoir cette partie\n\nswitch (msg.rc.code){\ncase 0:\n    msg.payload = \"/home/pi/data was purged successfully!\";\n    break;\ndefault:\n    msg.payload = \"There was an error! The error is \" + msg.rc.message;\n    break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 1020,
        "wires": [
            [
                "e19ff20c9dfd248d"
            ]
        ]
    },
    {
        "id": "fafeba1d08ea1b2f",
        "type": "delay",
        "z": "a93cd90e1ab9222e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 760,
        "y": 120,
        "wires": [
            [
                "1a1d158bb44c6b6d"
            ]
        ]
    },
    {
        "id": "9197cb5f8ba1886d",
        "type": "change",
        "z": "a93cd90e1ab9222e",
        "name": "Backup starting message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"The backup is starting now, please wait for the complete message before removing the drive\"",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 980,
        "wires": [
            [
                "e19ff20c9dfd248d"
            ]
        ]
    },
    {
        "id": "26155c7c41a5fbdb",
        "type": "file in",
        "z": "a93cd90e1ab9222e",
        "name": "Get machine name",
        "filename": "/var/lib/planktoscope/machine-name",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 700,
        "wires": [
            [
                "50b0322518db7a9d",
                "630b02a8c20a96ad"
            ]
        ]
    },
    {
        "id": "218aefdd0dd0d172",
        "type": "change",
        "z": "a93cd90e1ab9222e",
        "name": "Get acq_instrument",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.acq_instrument",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "acq_instrument",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 640,
        "wires": [
            [
                "533f6a4eb1281a2d"
            ]
        ]
    },
    {
        "id": "88e6e45ff6972074",
        "type": "file in",
        "z": "a93cd90e1ab9222e",
        "name": "Versioning File",
        "filename": "/usr/share/planktoscope/installer-versioning.yml",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 240,
        "y": 540,
        "wires": [
            [
                "0162cc51b9b5451d"
            ]
        ],
        "info": "# PlanktoScope Help\nThis Node will read the content of the file named **config.txt** containing all the input placeholders.\n"
    },
    {
        "id": "bddb19ee04eedf59",
        "type": "inject",
        "z": "a93cd90e1ab9222e",
        "name": "once",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "start",
        "payloadType": "str",
        "x": 90,
        "y": 540,
        "wires": [
            [
                "88e6e45ff6972074"
            ]
        ]
    },
    {
        "id": "0162cc51b9b5451d",
        "type": "yaml",
        "z": "a93cd90e1ab9222e",
        "property": "payload",
        "name": "",
        "x": 390,
        "y": 540,
        "wires": [
            [
                "e02875b3cc82ba55",
                "ceb762b15b5bedf0",
                "a24969f249227e1c"
            ]
        ]
    },
    {
        "id": "e02875b3cc82ba55",
        "type": "change",
        "z": "a93cd90e1ab9222e",
        "name": "Get version",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.version",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 540,
        "wires": [
            [
                "f5d1691eef8f9c19",
                "62251349460398e8"
            ]
        ]
    },
    {
        "id": "ceb762b15b5bedf0",
        "type": "change",
        "z": "a93cd90e1ab9222e",
        "name": "Get repo",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.repo",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 500,
        "wires": [
            [
                "8e56903a9ada8beb"
            ]
        ]
    },
    {
        "id": "8e56903a9ada8beb",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "set global",
        "func": "global.set(\"process_source\", msg.payload);\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "a24969f249227e1c",
        "type": "change",
        "z": "a93cd90e1ab9222e",
        "name": "Get commit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.commit",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 580,
        "wires": [
            [
                "e88c6ff4c2d5d202"
            ]
        ]
    },
    {
        "id": "e88c6ff4c2d5d202",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "set global",
        "func": "global.set(\"process_commit\", msg.payload);\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "5317e0a3616b7c7d",
        "type": "ui_template",
        "z": "a93cd90e1ab9222e",
        "group": "c1482a5fd6f72aee",
        "name": "Metrics panel",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": "<div ng-if=\"drifted && !settingTime\">\n    <p style=\"margin-bottom: 1em;\">\n        The instrument's system time is different from your web browser's time by {{drift}}.\n        As a result, timestamps in your datasets will be incorrect.\n        <span ng-if=\"severelyDrifted\">Additionally, system metrics will not be recorded or shown correctly.</span>\n        <span ng-if=\"!severelyDrifted\">Additionally, you will see incorrectly-aligned graphs in the metrics below.</span>\n    </p>\n    <p style=\"margin-bottom: 1em;\">Please change the instrument's system time or your web browser's time to accurate values.</p>\n    <p style=\"margin-bottom: 1em;\">\n        <button class=\"md-raised md-button\" type=\"button\" ng-click=\"setTime()\" style=\"z-index: 1; padding: 1em;\">\n            <span>Change Instrument's System Time to Match Web Browser's Time</span>\n        </button>\n    </p>\n</div>\n\n<div ng-if=\"!showMetrics && !severelyDrifted\" style=\"width: 100%; height: 750px;\">\n    <p>Loading system metrics, please wait...</p>\n</div>\n\n<center ng-if=\"showMetrics && !severelyDrifted\">\n    <iframe src=\"/admin/grafana/d/host-summary/host-summary?orgId=1&amp;refresh=5s&amp;kiosk\" width=\"100%\" height=\"750px\" style=\"text-align: left;\">\n        <p style=\"margin-bottom: 1em;\">\n            Metrics dashboard not available yet. Please wait a bit and then press the button below:\n        </p>\n        <p style=\"margin-bottom: 1em;\">\n            <button class=\"md-raised md-button\" type=\"button\" ng-click=\"reloadMetricsDashboard()\" style=\"z-index: 1; padding: 1em;\">\n                <span>Reload metrics dashboard</span>\n            </button>\n        </p>\n        <p>\n            If the dashboard never appears, the Grafana metrics dashboard server\n            may not be running or working correctly, in which case you will need to\n            troubleshoot the reason for that. If the Grafana server is running, you can\n            <a href=\"/admin/dozzle/show?name=apps_grafana-server-1\" target=\"_blank\">view its logs</a>.\n        </p>\n    </iframe>\n</center>\n\n<script>\n    (function(scope) {\n        function duration(ms) {\n            let seconds = (ms / 1000).toFixed(1);\n            let minutes = (ms / (1000 * 60)).toFixed(1);\n            let hours = (ms / (1000 * 60 * 60)).toFixed(1);\n            let days = (ms / (1000 * 60 * 60 * 24)).toFixed(1);\n            let months = (ms / (1000 * 60 * 60 * 24 * 30)).toFixed(1);\n            let years = (ms / (1000 * 60 * 60 * 24 * 365)).toFixed(1);\n            if (seconds < 60) return seconds + \" seconds\";\n            else if (minutes < 60) return minutes + \" minutes\";\n            else if (hours < 24) return hours + \" hours\";\n            else if (days < 30) return days + \" days\";\n            else if (months < 12) return months + \" months\";\n            else return years + \" years\";\n        }\n        \n        scope.drifted = undefined;\n        scope.severelyDrifted = undefined;\n        scope.drift = undefined;\n        function determineDrift(scope, systemTime) {\n            const browserTime = (new Date()).getTime();\n            const drift = Math.abs(browserTime - systemTime);\n            const threshold = 1000 * 60; // 1 minute\n            const severeThreshold = 1000 * 60 * 4.5; // 30 sec below the Grafana dashboard's visualization interval\n            scope.drifted = drift >= threshold;\n            scope.severelyDrifted = drift >= severeThreshold;\n            if (!scope.drifted) {\n                return;\n            }\n            scope.drift = duration(drift);\n        }\n        \n        scope.showMetrics = false;\n        scope.loadingMetrics = false;\n        var metricsDelayCounter = 0;\n        const metricsDelayThreshold = 2;\n        function showMetrics(scope) {\n            // Show the metrics immediately if we already determined that there's no time drift\n            if (scope.drifted === false) {\n                scope.showMetrics = true;\n                scope.loadingMetrics = false;\n                metricsDelayCounter = 0;\n            }\n            if (!scope.showMetrics && !scope.loadingMetrics && scope.severelyDrifted === false) { // this only happens on initial page load\n                scope.showMetrics = true;\n            }\n            // Show the metrics after a delay after changing system time,\n            // to ensure that there's data for Grafana to render\n            // (otherwise the page must be refreshed)\n            if (scope.loadingMetrics) {\n                metricsDelayCounter++;\n            }\n            if (metricsDelayCounter >= metricsDelayThreshold) {\n                scope.showMetrics = true;\n                scope.loadingMetrics = false;\n                metricsDelayCounter = 0;\n            }\n        }\n        \n        scope.settingTime = false;\n        scope.setTime = function() {\n            scope.settingTime = true;\n            if (scope.severelyDrifted) { // we only need to reload the Grafana dashboard if time drift is so bad that it has no data to show\n                scope.showMetrics = false;\n            }\n            scope.loadingMetrics = true;\n            fetch('/ps/node-red-v2/api/system-time', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json; charset=UTF-8'\n                },\n                body: JSON.stringify({\n                    timestamp: (new Date()).getTime()\n                })\n            });\n        }\n        \n        scope.reloadMetricsDashboard = function() {\n            scope.showMetrics = false;\n        }\n\n        scope.$watch('msg.payload', function(systemTime) {\n            if (systemTime !== undefined) {\n                determineDrift(scope, systemTime);\n                scope.settingTime = false;\n            }\n            showMetrics(scope);\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 330,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "8a2ea21c2cd5ca34",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "Get system time",
        "func": "var date = new Date();\ndate.setSeconds(0, 0);\nmsg.payload = (\n    date.toISOString().replace('T', ' ').replace(/:\\d+\\.\\d+Z/,' UTC')\n);\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 240,
        "wires": [
            [
                "b5b0807056e14665"
            ]
        ]
    },
    {
        "id": "b5b0807056e14665",
        "type": "ui_text",
        "z": "a93cd90e1ab9222e",
        "group": "4ad5877ccff6436a",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "System Time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 240,
        "wires": []
    },
    {
        "id": "95a62a45454ac08c",
        "type": "http in",
        "z": "a93cd90e1ab9222e",
        "name": "POST /api/system-time",
        "url": "/api/system-time",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "b3316fb48dadb5a0",
                "7d0e80316cf437ff"
            ]
        ]
    },
    {
        "id": "18ece2e1f1beba63",
        "type": "ui_toast",
        "z": "a93cd90e1ab9222e",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Setting system time",
        "name": "",
        "x": 610,
        "y": 340,
        "wires": []
    },
    {
        "id": "b3316fb48dadb5a0",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "Get system time",
        "func": "var date = new Date(msg.payload.timestamp);\nmsg.payload = (\n    date.toISOString().replace('T', ' ').replace(/:\\d+\\.\\d+Z/,' UTC')\n);\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 340,
        "wires": [
            [
                "18ece2e1f1beba63"
            ]
        ]
    },
    {
        "id": "9438c1274b35022d",
        "type": "exec",
        "z": "a93cd90e1ab9222e",
        "command": "sudo date -s",
        "addpay": "payload",
        "append": "",
        "useSpawn": "",
        "timer": "",
        "winHide": false,
        "name": "Set system time",
        "x": 600,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7d0e80316cf437ff",
        "type": "function",
        "z": "a93cd90e1ab9222e",
        "name": "Prepare timestamp",
        "func": "msg.payload = ('@' + msg.payload.timestamp).slice(0, -3);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "9438c1274b35022d"
            ]
        ]
    },
    {
        "id": "f53b7791a784ca71",
        "type": "ui_template",
        "z": "a93cd90e1ab9222e",
        "group": "4ad5877ccff6436a",
        "name": "Browser time",
        "order": 6,
        "width": "6",
        "height": "1",
        "format": "<div style=\"top: 240px; width: 350px; height: 55px;\" class=\"nr-dashboard-text _md layout-row layout-align-space-between-center nr-dashboard-widget-System_Time visible\">\n    <p class=\"label\">Browser Time</p>\n    <p class=\"value\">{{time}}</p>\n</div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            scope.time = (new Date()).toISOString().replace('T', ' ').replace(/:\\d+\\.\\d+Z/,' UTC');\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 330,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0d388d92ce6acd1c",
        "type": "exec",
        "z": "b25367d20738ca43",
        "command": "sudo iwlist wlan0 scan | grep ESSID | sed 's/ESSID://g;s/\"//g;s/^ *//;s/ *$//'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "scan",
        "x": 450,
        "y": 80,
        "wires": [
            [
                "d12e7ad3eb0c736c"
            ],
            [],
            []
        ]
    },
    {
        "id": "d12e7ad3eb0c736c",
        "type": "function",
        "z": "b25367d20738ca43",
        "name": "parseOptions",
        "func": "var ssids = msg.payload.split('\\n').filter(s => !!s)\n\nssids = [...new Set(ssids)];\n\nmsg.options = ssids\nmsg.payload = null\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 80,
        "wires": [
            [
                "634c9eea028361dc"
            ]
        ]
    },
    {
        "id": "634c9eea028361dc",
        "type": "ui_dropdown",
        "z": "b25367d20738ca43",
        "name": "",
        "label": "Wifi",
        "tooltip": "",
        "place": "Select a WIFI",
        "group": "c2a365127d3f75cc",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "x": 830,
        "y": 80,
        "wires": [
            [
                "e7b8a516d8baa5a3"
            ]
        ]
    },
    {
        "id": "569af81bbe9d0ab2",
        "type": "ui_button",
        "z": "b25367d20738ca43",
        "name": "",
        "group": "c2a365127d3f75cc",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Scan",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-wifi fa-2x",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 270,
        "y": 40,
        "wires": [
            [
                "0d388d92ce6acd1c"
            ]
        ]
    },
    {
        "id": "9da745594c74d42b",
        "type": "exec",
        "z": "b25367d20738ca43",
        "command": "ip -j addr show",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "getInfo",
        "x": 450,
        "y": 180,
        "wires": [
            [
                "e7218af7e22c79f8"
            ],
            [],
            []
        ]
    },
    {
        "id": "1b01a3701384037f",
        "type": "function",
        "z": "b25367d20738ca43",
        "name": "parse IP Info",
        "func": "var ip = \"\";\nvar broadcast = \"\";\nvar iface = \"\";\nvar iface_up = false;\n\nif (msg.rc.code === 0){\n    payload = msg.payload\n    for (let info in payload) {\n      if (payload[info].operstate === \"UP\") {\n      \tif (iface_up){\n        \t// We have two concurrent interfaces up\n          // We need to deactivate one\n          ip = \"Remove Ethernet cable or disconnect wifi\"\n          broadcast = \"Remove Ethernet cable or disconnect wifi\"\n          iface = \"Remove Ethernet cable or disconnect wifi\"\n          break\n        }\n        if (payload[info].ifname === \"eth0\") {\n          iface = \"Ethernet\"\n        } else if (payload[info].ifname === \"wifi0\" || payload[info].ifname === \"wlan0\") {\n          iface = \"Wifi\"\n        }\n        ip = payload[info].addr_info[0].local;\n        broadcast = payload[info].addr_info[0].broadcast;\n        iface_up = true;\n      }\n    }\n}\n\nif (iface_up) {\n  return([{\n    topic: 'interface',\n    payload: iface\n  }, {\n    topic: 'ip',\n    payload: ip\n  }, {\n    topic: 'broadcast',\n    payload: broadcast\n  }])\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 180,
        "wires": [
            [
                "61f01ef7ce9623d2"
            ],
            [
                "602bc4587b6ac174"
            ],
            [
                "4c4f909286a1ad8a"
            ]
        ],
        "outputLabels": [
            "interface",
            "ip",
            "broadcast"
        ]
    },
    {
        "id": "602bc4587b6ac174",
        "type": "ui_text",
        "z": "b25367d20738ca43",
        "group": "3e65099870a285f9",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "IP",
        "format": "{{msg.payload || '---'}}",
        "layout": "row-spread",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "61f01ef7ce9623d2",
        "type": "ui_text",
        "z": "b25367d20738ca43",
        "group": "3e65099870a285f9",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Interface",
        "format": "{{msg.payload || '---'}}",
        "layout": "row-spread",
        "x": 940,
        "y": 140,
        "wires": []
    },
    {
        "id": "4c4f909286a1ad8a",
        "type": "ui_text",
        "z": "b25367d20738ca43",
        "group": "3e65099870a285f9",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Broadcast",
        "format": "{{msg.payload || '---'}}",
        "layout": "row-spread",
        "x": 950,
        "y": 219,
        "wires": []
    },
    {
        "id": "6c440dcb73a8c2ee",
        "type": "ui_form",
        "z": "b25367d20738ca43",
        "name": "",
        "label": "Update",
        "group": "c2a365127d3f75cc",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "SSID",
                "value": "ssid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ssid": "",
            "password": ""
        },
        "payload": "",
        "submit": "Add the network",
        "cancel": "Reset fields",
        "topic": "",
        "x": 1160,
        "y": 80,
        "wires": [
            [
                "6d7a3505fa12ebcb"
            ]
        ]
    },
    {
        "id": "e7b8a516d8baa5a3",
        "type": "function",
        "z": "b25367d20738ca43",
        "name": "insert ssid",
        "func": "\nmsg.payload = {ssid: msg.payload}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 80,
        "wires": [
            [
                "6c440dcb73a8c2ee"
            ]
        ]
    },
    {
        "id": "fe3c56f874e86a92",
        "type": "exec",
        "z": "b25367d20738ca43",
        "command": "iw dev wlan0 info",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "getCurrentSSID",
        "x": 480,
        "y": 260,
        "wires": [
            [
                "522298315f1f9e59"
            ],
            [],
            []
        ]
    },
    {
        "id": "54bada2e09f99b70",
        "type": "ui_text",
        "z": "b25367d20738ca43",
        "group": "3e65099870a285f9",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SSID",
        "format": "{{msg.payload || '---'}}",
        "layout": "row-spread",
        "x": 930,
        "y": 259,
        "wires": []
    },
    {
        "id": "522298315f1f9e59",
        "type": "function",
        "z": "b25367d20738ca43",
        "name": "parse SSID",
        "func": "var ssid = \"\"\n\nif (msg.rc.code === 0){\n    ssid = msg.payload.match(/\\sssid (.+)/)[1];\n    return({topic: 'ssid', payload: ssid})\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 260,
        "wires": [
            [
                "54bada2e09f99b70"
            ]
        ]
    },
    {
        "id": "4e4d816bf5c99330",
        "type": "ui_ui_control",
        "z": "b25367d20738ca43",
        "name": "onTab",
        "events": "all",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "8374924887635748"
            ]
        ]
    },
    {
        "id": "fdb85ddbbd0398ea",
        "type": "function",
        "z": "b25367d20738ca43",
        "name": "update contry code",
        "func": "var template = `sudo sed -i \\\"s/^country.*/country=\"${msg.payload}\"/\\\" /home/pi/wpa_supplicant.conf`\n// sudo tee /etc/wpa_supplicant/wpa_supplicant.conf <<EOF\n//ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n//update_config=1\n//country=IT\nmsg.payload = template\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 400,
        "wires": [
            [
                "8b70194d798f2dd4"
            ]
        ]
    },
    {
        "id": "8b70194d798f2dd4",
        "type": "exec",
        "z": "b25367d20738ca43",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "updateConf",
        "x": 890,
        "y": 400,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "3195da176d93d562",
        "type": "ui_button",
        "z": "b25367d20738ca43",
        "name": "",
        "group": "c2a365127d3f75cc",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Change Country Code",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "country_code",
        "payloadType": "flow",
        "topic": "",
        "x": 400,
        "y": 400,
        "wires": [
            [
                "fdb85ddbbd0398ea"
            ]
        ]
    },
    {
        "id": "c73b4248217bdece",
        "type": "ui_text_input",
        "z": "b25367d20738ca43",
        "name": "country_code",
        "label": "Country Code",
        "tooltip": "ISO/IEC alpha2 country code",
        "group": "c2a365127d3f75cc",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "500",
        "topic": "country_code",
        "x": 420,
        "y": 360,
        "wires": [
            [
                "f0971e350964207d"
            ]
        ]
    },
    {
        "id": "f0971e350964207d",
        "type": "change",
        "z": "b25367d20738ca43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "country_code",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "6d7a3505fa12ebcb",
        "type": "function",
        "z": "b25367d20738ca43",
        "name": "add network",
        "func": "var data = msg.payload\n\nvar command = `wpa_passphrase \"${data.ssid}\" \"${data.password}\" | sed '/#psk=\".*\"/d' | sudo tee -a /etc/wpa_supplicant/wpa_supplicant.conf > /dev/null`\n \nmsg.payload = command\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1330,
        "y": 80,
        "wires": [
            [
                "10df0019a7609926"
            ]
        ]
    },
    {
        "id": "10df0019a7609926",
        "type": "exec",
        "z": "b25367d20738ca43",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Save Network",
        "x": 1520,
        "y": 80,
        "wires": [
            [
                "3cb19bfaae841a9e"
            ],
            [],
            []
        ]
    },
    {
        "id": "3cb19bfaae841a9e",
        "type": "exec",
        "z": "b25367d20738ca43",
        "command": "sudo /usr/bin/autohotspotN >/dev/null",
        "addpay": false,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "reconfigure",
        "x": 1710,
        "y": 80,
        "wires": [
            [
                "b71a771c22e7fefa"
            ],
            [],
            []
        ]
    },
    {
        "id": "b71a771c22e7fefa",
        "type": "function",
        "z": "b25367d20738ca43",
        "name": "showMessage",
        "func": "msg.payload = \"Wifi configuration updated successfully, please connect to the network you just used.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1440,
        "y": 180,
        "wires": [
            [
                "5ca779d79acd7ee0"
            ]
        ]
    },
    {
        "id": "5ca779d79acd7ee0",
        "type": "ui_toast",
        "z": "b25367d20738ca43",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1650,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "6ebd69719b94801e",
        "type": "function",
        "z": "b25367d20738ca43",
        "name": "reset wpa_supplicant.conf",
        "func": "country_code = flow.get(\"country_code\")\n\nvar template = `sudo tee /etc/wpa_supplicant/wpa_supplicant.conf <<EOF\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\ncountry=${country_code}\n\nEOF`\n\nmsg.payload = template\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 460,
        "wires": [
            [
                "58ec055fe6862efd"
            ]
        ]
    },
    {
        "id": "58ec055fe6862efd",
        "type": "exec",
        "z": "b25367d20738ca43",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "resetConf",
        "x": 880,
        "y": 460,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5134cb772df61949",
        "type": "ui_button",
        "z": "b25367d20738ca43",
        "name": "",
        "group": "c2a365127d3f75cc",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset wifi networks",
        "tooltip": "",
        "color": "",
        "bgcolor": "#AD1625",
        "icon": "",
        "payload": "country_code",
        "payloadType": "flow",
        "topic": "",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "6ebd69719b94801e"
            ]
        ]
    },
    {
        "id": "e8387b08dfa92b98",
        "type": "inject",
        "z": "b25367d20738ca43",
        "name": "once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 270,
        "y": 180,
        "wires": [
            [
                "0d388d92ce6acd1c",
                "9da745594c74d42b",
                "fe3c56f874e86a92"
            ]
        ]
    },
    {
        "id": "e7218af7e22c79f8",
        "type": "json",
        "z": "b25367d20738ca43",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "1b01a3701384037f"
            ]
        ]
    },
    {
        "id": "8374924887635748",
        "type": "function",
        "z": "b25367d20738ca43",
        "name": "check tab",
        "func": "if (msg.name === \"Wifi\"){\n    return [msg, msg]\n}\n\nif ([\"Optic Configuration\", \"Fluidic Acquisition\", \"Segmentation\", \"Gallery\"].includes(msg.name)){\n    return [null, msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 80,
        "wires": [
            [
                "0d388d92ce6acd1c",
                "9da745594c74d42b",
                "fe3c56f874e86a92"
            ],
            [
                "9da745594c74d42b",
                "fe3c56f874e86a92"
            ]
        ],
        "outputLabels": [
            "interface",
            "ip"
        ]
    },
    {
        "id": "ded34460c75c0c7a",
        "type": "mqtt in",
        "z": "95ee9f794509d2bb",
        "name": "",
        "topic": "status/#",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "inputs": 0,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "dc45d158d7844cdb"
            ]
        ]
    },
    {
        "id": "ed76663697576815",
        "type": "switch",
        "z": "95ee9f794509d2bb",
        "name": "Filter segmenter out",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "cont",
                "v": "status/segmenter",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 340,
        "wires": [
            [
                "c2381ff323eeaf14"
            ],
            [
                "2804a5d22bf63417"
            ]
        ]
    },
    {
        "id": "dc45d158d7844cdb",
        "type": "json",
        "z": "95ee9f794509d2bb",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "ed76663697576815"
            ]
        ]
    },
    {
        "id": "c2381ff323eeaf14",
        "type": "link out",
        "z": "95ee9f794509d2bb",
        "name": "Fluidic module status",
        "links": [
            "a30809e6a04661bd"
        ],
        "x": 795,
        "y": 320,
        "wires": []
    },
    {
        "id": "2804a5d22bf63417",
        "type": "link out",
        "z": "95ee9f794509d2bb",
        "name": "Segmenter module status",
        "links": [
            "6d99e9292a69e9ef"
        ],
        "x": 795,
        "y": 360,
        "wires": []
    },
    {
        "id": "e696c61360b5707f",
        "type": "change",
        "z": "f3e0666d3cbcc3ae",
        "name": "Get stepper_type",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.stepper_type",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "e0d0beb3113b4b24"
            ]
        ]
    },
    {
        "id": "e0d0beb3113b4b24",
        "type": "ui_dropdown",
        "z": "f3e0666d3cbcc3ae",
        "name": "stepper_type",
        "label": "",
        "tooltip": "",
        "place": "",
        "group": "303dceab90225465",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "adafruit",
                "type": "str"
            },
            {
                "label": "",
                "value": "waveshare",
                "type": "str"
            },
            {
                "label": "",
                "value": "pscope_hat",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "stepper_type",
        "topicType": "str",
        "className": "",
        "x": 970,
        "y": 360,
        "wires": [
            [
                "ef04169e2f3aa511",
                "31fa4165428df3e1"
            ]
        ]
    },
    {
        "id": "44d9bbd2bb3b9dae",
        "type": "link out",
        "z": "f3e0666d3cbcc3ae",
        "name": "Stepper config change",
        "mode": "link",
        "links": [
            "425539fe3d4f1056"
        ],
        "x": 1495,
        "y": 380,
        "wires": []
    },
    {
        "id": "ef04169e2f3aa511",
        "type": "delay",
        "z": "f3e0666d3cbcc3ae",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1180,
        "y": 380,
        "wires": [
            [
                "44d9bbd2bb3b9dae"
            ]
        ]
    },
    {
        "id": "31fa4165428df3e1",
        "type": "subflow:4ed26b8b.253504",
        "z": "f3e0666d3cbcc3ae",
        "name": "",
        "env": [],
        "x": 1220,
        "y": 420,
        "wires": []
    },
    {
        "id": "2d25005fc35c1db6",
        "type": "change",
        "z": "f3e0666d3cbcc3ae",
        "name": "Get stepper_reverse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.stepper_reverse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 440,
        "wires": [
            [
                "687b6f8f13b8352f"
            ]
        ]
    },
    {
        "id": "687b6f8f13b8352f",
        "type": "ui_switch",
        "z": "f3e0666d3cbcc3ae",
        "name": "stepper_reverse",
        "label": "Invert stepper output",
        "tooltip": "Stepper 1 is controlled by output 1 or the other way around",
        "group": "303dceab90225465",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "stepper_reverse",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 960,
        "y": 440,
        "wires": [
            [
                "31fa4165428df3e1",
                "ef04169e2f3aa511"
            ]
        ]
    },
    {
        "id": "aca47b9654b41ede",
        "type": "change",
        "z": "f3e0666d3cbcc3ae",
        "name": "Get pump_steps_per_ml",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.pump_steps_per_ml",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 400,
        "wires": [
            [
                "e38e6084701642b8"
            ]
        ]
    },
    {
        "id": "e38e6084701642b8",
        "type": "ui_text_input",
        "z": "f3e0666d3cbcc3ae",
        "name": "pump_steps_per_ml",
        "label": "Pump: steps per mL",
        "tooltip": "",
        "group": "303dceab90225465",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "2000",
        "topic": "pump_steps_per_ml",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 940,
        "y": 400,
        "wires": [
            [
                "ef04169e2f3aa511",
                "31fa4165428df3e1"
            ]
        ]
    },
    {
        "id": "6d8ed20d62b68e0a",
        "type": "ui_template",
        "z": "f3e0666d3cbcc3ae",
        "group": "303dceab90225465",
        "name": "Stepper controller type header",
        "order": 3,
        "width": "5",
        "height": 1,
        "format": "<div>Stepper controller type</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "18f241d67e43bd0f",
        "type": "ui_template",
        "z": "f3e0666d3cbcc3ae",
        "group": "303dceab90225465",
        "name": "Information",
        "order": 1,
        "width": "8",
        "height": "3",
        "format": "<div>\n    <p>\n        Changing one of these values will cause the Python hardware controller to restart, to reload the new hardware configuration.\n    </p>\n    <p>\n        <strong>Warning</strong>: selecting a hardware version from the dropdown menu below will also overwrite all of your hardware settings, <strong>including your camera white balance settings</strong>.\n    </p>\n    <p>\n        <strong style=\"font-size: large;\">If you are not sure, you probably should not be touching anything here!</strong>\n    </p>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 610,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "48ed7533f49f25a4",
        "type": "ui_dropdown",
        "z": "f3e0666d3cbcc3ae",
        "name": "",
        "label": "Hardware version",
        "tooltip": "",
        "place": "Select option",
        "group": "303dceab90225465",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "PlanktoScope v2.1",
                "type": "str"
            },
            {
                "label": "",
                "value": "PlanktoScope v2.3",
                "type": "str"
            },
            {
                "label": "",
                "value": "PlanktoScope v2.5",
                "type": "str"
            },
            {
                "label": "",
                "value": "PlanktoScope v2.6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "acq_instrument",
        "topicType": "str",
        "className": "",
        "x": 670,
        "y": 160,
        "wires": [
            [
                "34883ec7b58f6835",
                "7465541e9bea5f11"
            ]
        ]
    },
    {
        "id": "401465e4a7a68b3c",
        "type": "subflow:63c85b96537b7355",
        "z": "f3e0666d3cbcc3ae",
        "name": "",
        "env": [],
        "x": 510,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "8b2ce7b79ecfaad0",
        "type": "function",
        "z": "f3e0666d3cbcc3ae",
        "name": "Save global",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 300,
        "wires": [
            [
                "401465e4a7a68b3c"
            ]
        ]
    },
    {
        "id": "f097381e1caf88f2",
        "type": "subflow:63c85b96537b7355",
        "z": "f3e0666d3cbcc3ae",
        "name": "",
        "env": [],
        "x": 170,
        "y": 140,
        "wires": [
            [
                "51da8680a7db9414"
            ]
        ]
    },
    {
        "id": "b9622539a94f4923",
        "type": "change",
        "z": "f3e0666d3cbcc3ae",
        "name": "Get process_pixel_fixed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.process_pixel_fixed",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 480,
        "wires": [
            [
                "abfe8c8aab3fb4fb"
            ]
        ]
    },
    {
        "id": "abfe8c8aab3fb4fb",
        "type": "ui_text_input",
        "z": "f3e0666d3cbcc3ae",
        "name": "process_pixel_fixed",
        "label": "Pixel size calibration: um per pixel",
        "tooltip": "Object size in µm / pixel. 0 will remove this calibration.",
        "group": "303dceab90225465",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "1000",
        "topic": "process_pixel_fixed",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 940,
        "y": 480,
        "wires": [
            [
                "31fa4165428df3e1",
                "6a6e256ba9ea7430"
            ]
        ]
    },
    {
        "id": "6a6e256ba9ea7430",
        "type": "function",
        "z": "f3e0666d3cbcc3ae",
        "name": "Set or remove if null",
        "func": "if (msg.payload == 0){\n    global.set(msg.topic,undefined)\n}\nelse {\n    global.set(msg.topic,msg.payload);\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 480,
        "wires": [
            [
                "81c9f09c06d9a5de"
            ]
        ]
    },
    {
        "id": "81c9f09c06d9a5de",
        "type": "link out",
        "z": "f3e0666d3cbcc3ae",
        "name": "Process_pixel calibration",
        "links": [
            "b20440e37407b271"
        ],
        "x": 1495,
        "y": 500,
        "wires": []
    },
    {
        "id": "423255b6c95209a0",
        "type": "ui_dropdown",
        "z": "f3e0666d3cbcc3ae",
        "name": "acq_fnumber_objective",
        "label": "M12 Lens",
        "tooltip": "",
        "place": "Select option",
        "group": "303dceab90225465",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "f 25mm 1/2\" 5MP IR",
                "value": 25,
                "type": "num"
            },
            {
                "label": "f 16mm 1/2.5\" 5MP IR",
                "value": 16,
                "type": "num"
            },
            {
                "label": "f 12mm 1/2.5\" 5MP IR",
                "value": 12,
                "type": "num"
            },
            {
                "label": "f 8mm 1/2.5\" 5MP IR",
                "value": 8,
                "type": "num"
            },
            {
                "label": "f 6mm 1/2.5\" 5MP IR",
                "value": 6,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "acq_fnumber_objective",
        "topicType": "str",
        "x": 930,
        "y": 520,
        "wires": [
            [
                "478257d89e51662e",
                "31fa4165428df3e1"
            ]
        ]
    },
    {
        "id": "478257d89e51662e",
        "type": "change",
        "z": "f3e0666d3cbcc3ae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "acq_fnumber_objective",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 520,
        "wires": [
            [
                "81c9f09c06d9a5de"
            ]
        ]
    },
    {
        "id": "00e364744215afb7",
        "type": "change",
        "z": "f3e0666d3cbcc3ae",
        "name": "Get acq_fnumber_objective",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.acq_fnumber_objective",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "acq_fnumber_objective",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 520,
        "wires": [
            [
                "423255b6c95209a0"
            ]
        ]
    },
    {
        "id": "3df77964e5e5300c",
        "type": "ui_toast",
        "z": "f3e0666d3cbcc3ae",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Resetting hardware configuration to version-specific default",
        "name": "",
        "x": 370,
        "y": 260,
        "wires": []
    },
    {
        "id": "22c837e836ab255a",
        "type": "change",
        "z": "f3e0666d3cbcc3ae",
        "name": "Choose default hardware config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$join([\"/home/pi/device-backend/default-configs/\", $substringAfter(msg.payload, \"PlanktoScope \"), \".hardware.json\"])",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 220,
        "wires": [
            [
                "e098caac05cf5157"
            ]
        ]
    },
    {
        "id": "e098caac05cf5157",
        "type": "exec",
        "z": "f3e0666d3cbcc3ae",
        "command": "cp",
        "addpay": "payload",
        "append": "/home/pi/PlanktoScope/hardware.json",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Copy default hardware config",
        "x": 700,
        "y": 220,
        "wires": [
            [
                "9c8f5da9d38ccb3a"
            ],
            [],
            []
        ]
    },
    {
        "id": "9c8f5da9d38ccb3a",
        "type": "delay",
        "z": "f3e0666d3cbcc3ae",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 930,
        "y": 220,
        "wires": [
            [
                "ca1dcba514a4edfb"
            ]
        ]
    },
    {
        "id": "ca1dcba514a4edfb",
        "type": "link out",
        "z": "f3e0666d3cbcc3ae",
        "name": "Reload hardware config",
        "mode": "link",
        "links": [
            "425539fe3d4f1056",
            "fe070dc3b1063269",
            "d52c010c58b5862d",
            "314079dfd76acfb9"
        ],
        "x": 1095,
        "y": 220,
        "wires": []
    },
    {
        "id": "735b44b50964866b",
        "type": "subflow:b7861ce703215a01",
        "z": "f3e0666d3cbcc3ae",
        "name": "",
        "x": 380,
        "y": 440,
        "wires": [
            [
                "e696c61360b5707f",
                "aca47b9654b41ede",
                "2d25005fc35c1db6",
                "b9622539a94f4923",
                "00e364744215afb7"
            ]
        ]
    },
    {
        "id": "3e8c4d9a82addab0",
        "type": "inject",
        "z": "f3e0666d3cbcc3ae",
        "name": "Once",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "735b44b50964866b"
            ]
        ]
    },
    {
        "id": "51da8680a7db9414",
        "type": "change",
        "z": "f3e0666d3cbcc3ae",
        "name": "Get acq_instrument",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.acq_instrument",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "acq_instrument",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 140,
        "wires": [
            [
                "48ed7533f49f25a4",
                "7465541e9bea5f11"
            ]
        ]
    },
    {
        "id": "fe070dc3b1063269",
        "type": "link in",
        "z": "f3e0666d3cbcc3ae",
        "name": "Load hardware config",
        "links": [
            "ca1dcba514a4edfb"
        ],
        "x": 205,
        "y": 420,
        "wires": [
            [
                "735b44b50964866b"
            ]
        ]
    },
    {
        "id": "97ba318ffe045ed1",
        "type": "link in",
        "z": "f3e0666d3cbcc3ae",
        "name": "Set hardware version",
        "links": [
            "34883ec7b58f6835",
            "fb785c22e826292e"
        ],
        "x": 205,
        "y": 260,
        "wires": [
            [
                "22c837e836ab255a",
                "3df77964e5e5300c",
                "8b2ce7b79ecfaad0",
                "48ed7533f49f25a4"
            ]
        ]
    },
    {
        "id": "34883ec7b58f6835",
        "type": "link out",
        "z": "f3e0666d3cbcc3ae",
        "name": "Set hardware version",
        "mode": "link",
        "links": [
            "97ba318ffe045ed1"
        ],
        "x": 875,
        "y": 160,
        "wires": []
    },
    {
        "id": "7465541e9bea5f11",
        "type": "link out",
        "z": "f3e0666d3cbcc3ae",
        "name": "Hardware version loaded",
        "mode": "link",
        "links": [
            "314079dfd76acfb9"
        ],
        "x": 875,
        "y": 120,
        "wires": []
    },
    {
        "id": "39c370d8a50f3acc",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "713fd4c3b9030f45",
        "page": "",
        "ui": "",
        "name": "body",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n    <v-container>\n      <v-row>\n        <!-- First Row: Larger cards with icon centered above title -->\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"preview\"\n            class=\"text-center py-2\"\n            variant=\"flat\"\n          >\n            <v-icon size=\"64\" color=\"primary\">mdi-eye</v-icon>\n            <v-card-title class=\"text-h6\">Launch the Preview</v-card-title>\n            <v-card-text>Access a real-time, high-resolution preview to inspect the contents of your current water sample.</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"metadata\"\n            class=\"text-center py-2\"\n            variant=\"outlined\"\n          >\n            <v-icon size=\"64\" color=\"primary\">mdi-play-circle</v-icon>\n            <v-card-title class=\"text-h6\">Start Acquisition</v-card-title>\n            <v-card-text>Start a new acquisition process to continuously collect images and metadata from your PlanktoScope.</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"/ps/data/browse/files/\"\n            target=\"_blank\"\n            class=\"text-center py-2\"\n            variant=\"outlined\"\n          >\n            <v-icon size=\"64\" color=\"primary\">mdi-database-search</v-icon>\n            <v-card-title class=\"text-h6\">Explore Your Data</v-card-title>\n            <v-card-text>Open the data explorer to review, categorize, and interpret all previously captured sample information.</v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n\n      <!-- Second Row: Standard size cards -->\n      <v-row>\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"/ps/docs/operation/protocol-v4.pdf\"\n            target=\"_blank\"\n            variant=\"outlined\"\n          >\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-book-open-variant</v-icon>\n              Learn the Basics\n            </v-card-title>\n            <v-card-text>Find detailed instructions on using your PlanktoScope.</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"http://pkscope-rich-kettle-10463.local/admin/grafana/d/host-summary/host-summary?orgId=1&from=now-5m&to=now&timezone=browser&var-DS_PROMETHEUS=PBFA97CFB590B2093&var-job=node-exporter&var-node=host.docker.internal:9100&var-diskdevices=%5Ba-z%5D%2B%7Cnvme%5B0-9%5D%2Bn%5B0-9%5D%2B%7Cmmcblk%5B0-9%5D%2B&refresh=5s\"\n            target=\"_blank\"\n            variant=\"outlined\"\n          >\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-speedometer</v-icon>\n              Monitoring\n            </v-card-title>\n            <v-card-text>Keep track of system status and performance metrics.</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"calibration\"\n            variant=\"outlined\"\n          >\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-tune</v-icon>\n              Calibration\n            </v-card-title>\n            <v-card-text>Adjust and verify settings for consistent results.</v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n      \n    </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 690,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "1cf1b20e425ec126",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "",
        "page": "",
        "ui": "e6ae26617c24c3ea",
        "name": "footer",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-footer class=\"pa-0\" color=\"grey-darken-4\">\n    <v-container>\n      <v-row justify=\"space-between\">\n        <!-- Branding Section -->\n        <v-col cols=\"12\" md=\"12\" class=\"text-center text-md-start\">\n          <h4 class=\"text-white\">PlanktoScope</h4>\n          <p class=\"text-grey-lighten-1\">\n            Open and Affordable Quantitative Imaging Platform.\n          </p>\n        </v-col>\n      </v-row>\n      <v-divider class=\"my-3\"></v-divider>\n      <v-row justify=\"space-between\">\n        <!-- Branding Section -->\n        <v-col cols=\"12\" md=\"12\" class=\"text-center text-md-start\">\n          <h4 class=\"text-white\">Thanks to:</h4>\n          <p class=\"text-grey-lighten-1\">\n            <v-chip\n              v-for=\"contributor in contributors\"\n              :key=\"contributor.id\"\n              class=\"mx-2\"\n              small\n              outlined\n            >\n              <v-avatar left>\n                <img :src=\"contributor.avatar_url\" :alt=\"contributor.login\" />\n              </v-avatar>\n              <a\n                :href=\"contributor.html_url\"\n                target=\"_blank\"\n                class=\"text-decoration-none text-grey-lighten-1\"\n              >\n                {{ contributor.login }}\n              </a>\n            </v-chip>\n          </p>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-footer>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        contributors: [], // Array to hold contributors' data\n      }\n    },\n    mounted() {\n      this.fetchContributors()\n    },\n    methods: {\n      async fetchContributors() {\n        try {\n          const response = await fetch(\n            'https://api.github.com/orgs/PlanktoScope/people'\n          )\n          if (response.ok) {\n            this.contributors = await response.json()\n          } else {\n            console.error('Failed to fetch contributors')\n          }\n        } catch (error) {\n          console.error('Error fetching contributors:', error)\n        }\n      },\n    },\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "widget:ui",
        "className": "",
        "x": 690,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "cd5cd3a0277b8dba",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "5d39a98563150f22",
        "page": "",
        "ui": "",
        "name": "header",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-empty-state\n    headline=\"Welcome on the PlanktoScope GUI,\"\n    icon=\"$vuetify\"\n    title=\"What would you like to do today?\"\n  >\n  </v-empty-state>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 690,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f9058a8a58084207",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "cf3554d2bdb02f22",
        "page": "",
        "ui": "",
        "name": "links",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <v-row justify=\"center\" class=\"my-2\">\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://www.figma.com/design/KXH3qkalr7eeFbyGsutZKt/PlanktoScope-Dashboard-v2?node-id=6-2&m=dev&t=Nn2N1o9OJveQCSco-1\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"primary\" class=\"mr-1\">mdi-image</v-icon>Figma Design\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard/issues/new?template=bug_report.md\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"red\" class=\"mr-1\">mdi-bug</v-icon>Report a Bug\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard/issues\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"orange\" class=\"mr-1\">mdi-information-outline</v-icon>Open\n        issues\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"black\" class=\"mr-1\">mdi-github</v-icon>View on GitHub\n      </v-chip>\n    </v-row>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 690,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "67b871e8f9c64c2b",
        "type": "switch",
        "z": "1b667c6443413ced",
        "name": "msg.payload.page.path === \"/home\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/home",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 100,
        "wires": [
            [
                "28937f51511569e1"
            ]
        ]
    },
    {
        "id": "e74e4d04e4a79458",
        "type": "switch",
        "z": "1b667c6443413ced",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 100,
        "wires": [
            [
                "67b871e8f9c64c2b"
            ]
        ]
    },
    {
        "id": "7c16cbd0b2c40ea4",
        "type": "ui-event",
        "z": "1b667c6443413ced",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "e74e4d04e4a79458"
            ]
        ]
    },
    {
        "id": "401d92ce8e2ee079",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "713fd4c3b9030f45",
        "page": "",
        "ui": "",
        "name": "metrics",
        "order": 2,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n    <v-container>\n\n      <!-- Third Row: Standard size cards -->\n      <v-row>\n        <v-col cols=\"12\" md=\"3\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-cube-outline</v-icon>\n              Model of your machine\n            </v-card-title>\n            <v-card-text>{{ msg.acq_instrument }}</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"3\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\">mdi-barcode-scan</v-icon>\n              Serial number\n            </v-card-title>\n            <v-card-text>U178</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"3\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\">mdi-label-outline</v-icon>\n              Name of your machine\n            </v-card-title>\n            <v-card-text>{{ msg.acq_instrument_id }}</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"3\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\">mdi-code-tags</v-icon>\n              Software version\n            </v-card-title>\n            <v-card-text>{{ msg.acq_software }}</v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n\n      <!-- Third Row: Standard size cards -->\n      <v-row>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\">mdi-barcode-scan</v-icon>\n              Serial number\n            </v-card-title>\n            <v-card-text>U178</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\">mdi-label-outline</v-icon>\n              Name of your machine\n            </v-card-title>\n            <v-card-text>{{ msg.acq_instrument_id }}</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\">mdi-code-tags</v-icon>\n              Software version\n            </v-card-title>\n            <v-card-text>{{ msg.acq_software }}</v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n      \n    </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 700,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "28937f51511569e1",
        "type": "function",
        "z": "1b667c6443413ced",
        "name": "Get Global Variables",
        "func": "const keys = global.keys(); // Get all global keys\n\nkeys.forEach(key => {\n    msg[key] = global.get(key);\n});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 380,
        "wires": [
            [
                "401d92ce8e2ee079"
            ]
        ]
    },
    {
        "id": "5d4e95854b504124",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "",
        "page": "",
        "ui": "e6ae26617c24c3ea",
        "name": "CSS (All Pages)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "  .v-btn--variant-outlined.v-btn--active {\n    background-color: #1976d2 !important;\n    color: white !important;\n  }",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "site:style",
        "className": "",
        "x": 1240,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a57a165cd0ce511b",
        "type": "ui-template",
        "z": "ab58b3fd0e6bcd77",
        "g": "6452e42f1093802f",
        "group": "58ab4d5e3dd68192",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "0",
        "height": "0",
        "head": "",
        "format": "<center class=\"pa-0\">\n  <img src=\"/ps/hal/camera/streams/preview.mjpg\" class=\"pa-0\"\n    alt=\"If you see this, there probably is an error either with your camera or with the python service. Please try restarting your machine.\"\n    width=\"100%\" height=\"100%\">\n</center>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 310,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8c0dc4c89ed361a0",
        "type": "mqtt out",
        "z": "ab58b3fd0e6bcd77",
        "name": "MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 1650,
        "y": 320,
        "wires": []
    },
    {
        "id": "b1ecc016686e9ee1",
        "type": "function",
        "z": "ab58b3fd0e6bcd77",
        "name": "Pump MQTT Preparation",
        "func": "var manual_volume= global.get(\"pump_manual_volume\");\nvar flowrate= global.get(\"pump_flowrate\");\n\nif (manual_volume === undefined || manual_volume === \"\" || manual_volume === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Volume to pass\";\n    return [null, msg];\n}\nelse if (flowrate === undefined || flowrate === \"\" || flowrate === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Flowrate\";\n    return [null, msg];\n}\nelse {\n    msg.topic = \"actuator/pump\";\n    // msg.payload is FORWARD or BACKWARD here\n    msg.payload={\"action\":\"move\", \n                \"direction\":msg.payload,\n                \"volume\":manual_volume,\n                \"flowrate\":flowrate};\n}\nreturn [msg, null];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 300,
        "wires": [
            [
                "8c0dc4c89ed361a0"
            ],
            []
        ],
        "inputLabels": [
            "direction"
        ],
        "outputLabels": [
            "message",
            "error"
        ]
    },
    {
        "id": "f9e9ad7833e9a58f",
        "type": "ui-template",
        "z": "ab58b3fd0e6bcd77",
        "group": "39cbd2658f16d608",
        "page": "",
        "ui": "",
        "name": "Pump",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n\n    <!-- Flowrate -->\n    <v-row>\n      <v-col cols=\"12\" sm=\"7\">\n        <v-slider\n          v-model.number=\"flowrate\"\n          :min=\"min\"\n          :max=\"max\"\n          :step=\"0.2\"\n          class=\"align-center\"\n          hide-details\n          label=\"Flowrate\"\n          :thumb-size=\"20\"\n        />\n      </v-col>\n\n      <v-col cols=\"12\" sm=\"5\">\n        <v-text-field\n          v-model.number=\"flowrate\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details\n          suffix=\"ml/min\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"12\">\n        <v-btn-toggle\n          v-model=\"flowratePreset\"\n          class=\"d-flex justify-space-between\"\n          color=\"primary\"\n          variant=\"outlined\"\n          divided\n          shaped\n          mandatory\n          @update:model-value=\"onFlowrateToggle\"\n        >\n          <v-btn\n            v-for=\"value in flowratePresets\"\n            :key=\"'flowrate-' + value\"\n            :value=\"value\"\n            class=\"flex-grow-1\"\n          >\n            {{ value }}\n          </v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n\n    <!-- Volume -->\n    <v-row>\n      <v-col cols=\"12\" sm=\"8\">\n        <v-slider\n          v-model.number=\"volume\"\n          :min=\"min\"\n          :max=\"max\"\n          :step=\"0.2\"\n          class=\"align-center\"\n          hide-details\n          label=\"Volume\"\n          :thumb-size=\"20\"\n        />\n      </v-col>\n\n      <v-col cols=\"12\" sm=\"4\">\n        <v-text-field\n          v-model.number=\"volume\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details\n          suffix=\"ml\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"12\">\n        <v-btn-toggle\n          v-model=\"volumePreset\"\n          class=\"d-flex justify-space-between\"\n          variant=\"outlined\"\n          color=\"primary\"\n          divided\n          shaped\n          mandatory\n          @update:model-value=\"onVolumeToggle\"\n        >\n          <v-btn\n            v-for=\"value in volumePresets\"\n            :key=\"'volume-' + value\"\n            :value=\"value\"\n            class=\"flex-grow-1\"\n          >\n            {{ value }}\n          </v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n\n    <!-- Direction Control -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-btn-toggle\n          variant=\"outlined\"\n          v-model=\"direction\"\n          color=\"primary\"\n          mandatory\n          divided\n          shaped\n          class=\"d-flex justify-space-between\"\n        >\n          <v-btn class=\"flex-grow-1\" :value=\"'backward'\">Backward</v-btn>\n          <v-btn class=\"flex-grow-1\" :value=\"'stop'\">Stop</v-btn>\n          <v-btn class=\"flex-grow-1\" :value=\"'forward'\">Forward</v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      min: 0.02,\n      max: 30,\n      flowrate: 10,\n      volume: 10,\n      flowratePreset: null,\n      volumePreset: null,\n      flowratePresets: [0.02, 0.2, 2, 20],\n      volumePresets: [0.02, 2, 10, 20],\n      direction: 'stop',\n    };\n  },\n  watch: {\n    flowrate(newVal) {\n      this.flowratePreset = this.flowratePresets.find(val => val === newVal) ?? null;\n    },\n    volume(newVal) {\n      this.volumePreset = this.volumePresets.find(val => val === newVal) ?? null;\n    },\n  },\n  methods: {\n    onFlowrateToggle(val) {\n      if (val != null) {\n        this.flowrate = val;\n      }\n    },\n    onVolumeToggle(val) {\n      if (val != null) {\n        this.volume = val;\n      }\n    },\n  },\n};\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 950,
        "y": 300,
        "wires": [
            [
                "6d0408bb7ca6e5f3",
                "b1ecc016686e9ee1"
            ]
        ]
    },
    {
        "id": "6d0408bb7ca6e5f3",
        "type": "function",
        "z": "ab58b3fd0e6bcd77",
        "name": "set global",
        "func": "global.set(msg.topic,msg.payload);",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "d04fdf594224f8af",
        "type": "ui-template",
        "z": "ab58b3fd0e6bcd77",
        "group": "7dcc8848e91343c8",
        "page": "",
        "ui": "",
        "name": "Focus",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n\n    <!-- Focus Distance Slider -->\n    <v-row>\n      <v-col cols=\"12\" sm=\"8\">\n        <v-slider\n          v-model.number=\"distance\"\n          :max=\"max\"\n          :min=\"min\"\n          :step=\"25\"\n          class=\"align-center\"\n          hide-details\n          label=\"Distance\"\n          :thumb-size=\"20\"\n        />\n      </v-col>\n      <v-col cols=\"12\" sm=\"4\">\n        <v-text-field\n          v-model.number=\"distance\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details\n          suffix=\"μm\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n    </v-row>\n\n    <!-- Preset Distances -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-btn-toggle\n          variant=\"outlined\"\n          v-model=\"distancePreset\"\n          divided\n          shaped\n          color=\"primary\"\n          class=\"d-flex justify-space-between\"\n          mandatory\n          @update:model-value=\"onDistanceToggle\"\n        >\n          <v-btn\n            v-for=\"value in presetDistances\"\n            :key=\"'distance-' + value\"\n            :value=\"value\"\n            class=\"flex-grow-1\"\n          >\n            {{ value }}\n          </v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n\n    <!-- Directional Focus Control -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-btn-toggle\n          variant=\"outlined\"\n          v-model=\"focusDirection\"\n          color=\"primary\"\n          mandatory\n          divided\n          shaped\n          class=\"d-flex justify-space-between\"\n        >\n          <v-btn class=\"flex-grow-1\" :value=\"'left'\">Left</v-btn>\n          <v-btn class=\"flex-grow-1\" :value=\"'stop'\">Stop</v-btn>\n          <v-btn class=\"flex-grow-1\" :value=\"'right'\">Right</v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      min: 25,\n      max: 5000,\n      distance: 25,\n      distancePreset: null,\n      presetDistances: [25, 150, 500, 5000],\n      focusDirection: 'stop',\n    };\n  },\n  watch: {\n    distance(newVal) {\n      const exactMatch = this.presetDistances.find((val) => val === newVal);\n      this.distancePreset = exactMatch ?? null;\n    },\n  },\n  methods: {\n    onDistanceToggle(val) {\n      if (val != null) {\n        this.distance = val;\n      }\n    },\n  },\n};\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 950,
        "y": 340,
        "wires": [
            [
                "6d0408bb7ca6e5f3",
                "d7ca56746e08f158"
            ]
        ]
    },
    {
        "id": "d7ca56746e08f158",
        "type": "function",
        "z": "ab58b3fd0e6bcd77",
        "name": "Focus MQTT Preparation",
        "func": "var distance = global.get(\"focus_distance\");\nvar speed = global.get(\"focus_speed\");\n\nif (distance === undefined || distance === \"\" || distance === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Distance\";\n    return [null, msg]\n}\nif (speed === undefined || speed === \"\" || speed === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Speed\";\n    return [null, msg]\n}\n// msg.payload is UP or DOWN here\nmsg.payload={\"action\":\"move\", \n            \"direction\":msg.payload,\n            \"distance\":(distance/1000),\n            \"speed\": (speed/1000)\n};\nreturn [msg, null];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 340,
        "wires": [
            [
                "8c0dc4c89ed361a0"
            ],
            []
        ],
        "inputLabels": [
            "direction"
        ],
        "outputLabels": [
            "message",
            "error"
        ]
    },
    {
        "id": "ad265a65cffbe1e9",
        "type": "ui-template",
        "z": "ab58b3fd0e6bcd77",
        "group": "86e89a98bf95c5fa",
        "page": "",
        "ui": "",
        "name": "Light",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n\n    <v-row>\n      <v-col cols=\"12\">\n        <v-btn-toggle\n          variant=\"outlined\"\n          v-model=\"ledState\"\n          color=\"primary\"\n          mandatory\n          divided\n          shaped\n          class=\"d-flex justify-space-between\"\n        >\n          <v-btn class=\"flex-grow-1\" :value=\"'on'\">On</v-btn>\n          <v-btn class=\"flex-grow-1\" :value=\"'off'\">Off</v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      ledState: 'off',\n    };\n  },\n};\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 950,
        "y": 380,
        "wires": [
            [
                "6d0408bb7ca6e5f3",
                "f5cf7a0fafc8f14d"
            ]
        ]
    },
    {
        "id": "267aba9da1b9665b",
        "type": "ui-template",
        "z": "ab58b3fd0e6bcd77",
        "group": "6b7305fbb10eb680",
        "page": "",
        "ui": "",
        "name": "Camera",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n\n    <v-card-text>\n      Modify your camera settings through the calibration page. Adjust optical parameters to ensure accurate imaging.\n    </v-card-text>\n\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c8de0186a0a927e8",
        "type": "function",
        "z": "ab58b3fd0e6bcd77",
        "name": "Get Global Variables",
        "func": "const keys = global.keys(); // Get all global keys\n\nkeys.forEach(key => {\n    msg[key] = global.get(key);\n});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 300,
        "wires": [
            [
                "f9e9ad7833e9a58f",
                "d04fdf594224f8af",
                "ad265a65cffbe1e9",
                "267aba9da1b9665b"
            ]
        ]
    },
    {
        "id": "f5cf7a0fafc8f14d",
        "type": "function",
        "z": "ab58b3fd0e6bcd77",
        "name": "Light MQTT Preparation",
        "func": "//TODO\nreturn [msg, null];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "8c0dc4c89ed361a0"
            ],
            []
        ],
        "inputLabels": [
            "direction"
        ],
        "outputLabels": [
            "message",
            "error"
        ]
    },
    {
        "id": "927b92eee9edfcbe",
        "type": "ui-template",
        "z": "ab58b3fd0e6bcd77",
        "group": "7572915171e440cd",
        "page": "",
        "ui": "",
        "name": "Navigation",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n\n    <v-row justify=\"space-between\" align=\"center\">\n      <v-col cols=\"auto\">\n        <v-btn\n          variant=\"text\"\n          to=\"home\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Home\n        </v-btn>\n      </v-col>\n\n      <v-col cols=\"auto\">\n        <v-btn\n          variant=\"text\"\n          to=\"metadata\"\n        >\n          Metadata\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 530,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8d5eadf60a2fd54b",
        "type": "switch",
        "z": "ab58b3fd0e6bcd77",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 220,
        "wires": [
            [
                "6074fc31218f9a74"
            ]
        ]
    },
    {
        "id": "da4fbaab826b0d62",
        "type": "ui-event",
        "z": "ab58b3fd0e6bcd77",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "8d5eadf60a2fd54b"
            ]
        ]
    },
    {
        "id": "6074fc31218f9a74",
        "type": "switch",
        "z": "ab58b3fd0e6bcd77",
        "name": "msg.payload.page.path === \"/preview\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/preview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 220,
        "wires": [
            [
                "c8de0186a0a927e8"
            ]
        ]
    },
    {
        "id": "349d0f7644f26a62",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "dd015fda7456b9b0",
        "page": "",
        "ui": "",
        "name": "Navigation Top",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n\n    <v-row justify=\"space-between\" align=\"center\">\n      <v-col cols=\"auto\">\n        <v-btn\n          variant=\"text\"\n          to=\"preview\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Preview\n        </v-btn>\n      </v-col>\n\n      <v-col cols=\"auto\">\n        <v-btn\n          variant=\"text\"\n          to=\"acquisition\"\n        >\n          Acquisition\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 640,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "279f3ddada9cadaa",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "69c772603e9cec0d",
        "page": "",
        "ui": "",
        "name": "Sample Information",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <!-- Project Metadata Inputs -->\n  <v-row class=\"mt-2\">\n    <v-col cols=\"12\" md=\"4\">\n      <v-text-field\n        v-model=\"projectName\"\n        label=\"Name of the project\"\n        placeholder=\"ex : Tara Pacifique\"\n        variant=\"outlined\"\n        clearable\n        hint=\"Enter the research project or expedition name this sample is part of.\" append-icon=\"mdi-information\"\n      />\n    </v-col>\n\n    <v-col cols=\"12\" md=\"4\">\n      <v-text-field\n        v-model=\"sampleId\"\n        label=\"Sample ID\"\n        placeholder=\"ex : S001\"\n        type=\"text\"\n        variant=\"outlined\"\n        clearable\n        hint=\"Provide a unique identifier for this sample (e.g., S001).\" append-icon=\"mdi-information\"\n      />\n    </v-col>\n\n    <v-col cols=\"12\" md=\"4\">\n      <v-text-field\n        v-model=\"operatorName\"\n        label=\"Operator name\"\n        placeholder=\"ex : Manu Prakash\"\n        type=\"text\"\n        variant=\"outlined\"\n        clearable\n        hint=\"Name of the person who collected the sample.\" append-icon=\"mdi-information\"\n      />\n    </v-col>\n  </v-row>\n\n  <!-- Sampling Gear Selector -->\n  <v-row class=\"mt-4\">\n    <v-col cols=\"12\">\n      <label class=\"text-subtitle-2 font-weight-medium mb-2 d-block\" append-icon=\"mdi-information\">\n        Sampling Gear\n      </label>\n      <v-row>\n          <v-col cols=\"12\">\n            <div style=\"overflow-x: auto;\">\n              <v-btn-toggle\n                variant=\"outlined\"\n                v-model=\"sample_gear\"\n                color=\"primary\"\n                mandatory\n                divided\n                shaped\n                class=\"d-flex\"\n                style=\"min-width: max-content;min-height:100px\"\n              >\n                <v-btn value=\"Horizontal Net\" prepend-icon=\"mdi-arrow-right-bold\" stacked>\n                  <span>Horizontal Net</span>\n                </v-btn>\n                <v-btn value=\"Vertical Net\" prepend-icon=\"mdi-arrow-up-bold\" stacked>\n                  <span>Vertical Net</span>\n                </v-btn>\n                <v-btn value=\"Niskin bottle\" prepend-icon=\"mdi-bottle-tonic\" stacked>\n                  <span>Niskin bottle</span>\n                </v-btn>\n                <v-btn value=\"Lab culture\" prepend-icon=\"mdi-flask-outline\" stacked>\n                  <span>Lab culture</span>\n                </v-btn>\n                <v-btn value=\"Demo / Test\" prepend-icon=\"mdi-beaker-outline\" stacked>\n                  <span>Demo / Test</span>\n                </v-btn>\n              </v-btn-toggle>\n            </div>\n          </v-col>\n        </v-row>\n\n      <div class=\"text-caption text-medium-emphasis mt-1\">\n        The type of gear used to collect the sample. This field describes the specific equipment used during the sampling process and provides context about the sampling method and conditions.\n      </div>\n    </v-col>\n  </v-row>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      projectName: '',\n      sampleId: '',\n      operatorName: '',\n      sample_gear: null,\n    };\n  },\n};\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "96550b272e3da513",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "6fab47af451c6d95",
        "page": "",
        "ui": "",
        "name": "Starting point",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container>\n    <v-row>\n      <!-- Date -->\n      <v-col cols=\"12\" md=\"6\">\n        <v-text-field\n          label=\"Date\"\n          variant=\"outlined\"\n          placeholder=\"jj/mm/aaaa\"\n          type=\"date\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n\n      <!-- Time -->\n      <v-col cols=\"12\" md=\"6\">\n        <v-text-field\n          label=\"Time\"\n          variant=\"outlined\"\n          placeholder=\"--:--\"\n          type=\"time\"\n          density=\"compact\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n    </v-row>\n    <v-row>\n      <!-- GPS Latitude -->\n      <v-col cols=\"12\" md=\"12\">\n        <v-row>\n          <v-col cols=\"1\"> Latitude </v-col>\n          <v-col cols=\"1\">\n            <v-text-field\n              v-model.number=\"latitude_D\"\n              :min=\"0\"\n              :max=\"90\"\n              :step=\"1\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            />\n          </v-col>\n          <v-col cols=\"1\">\n            <v-text-field\n              v-model.number=\"latitude_M\"\n              :min=\"0\"\n              :max=\"59\"\n              :step=\"1\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            />\n          </v-col>\n          <v-col cols=\"2\">\n            <v-text-field\n              v-model.number=\"latitude_S\"\n              :min=\"0\"\n              :max=\"59.9999\"\n              :step=\"0.0001\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            />\n          </v-col>\n          <v-col cols=\"1\">\n            <v-select variant=\"outlined\" :items=\"['N', 'S']\" hide-details append-icon=\"mdi-information\" />\n          </v-col>\n\n          <v-col cols=\"1\"> Longitude </v-col>\n\n          <!-- GPS Longitude -->\n\n          <v-col cols=\"1\">\n            <v-text-field\n              v-model.number=\"longitude_D\"\n              :min=\"0\"\n              :max=\"180\"\n              :step=\"1\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            />\n          </v-col>\n          <v-col cols=\"1\">\n            <v-text-field\n              v-model.number=\"longitude_M\"\n              :min=\"0\"\n              :max=\"59\"\n              :step=\"1\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            />\n          </v-col>\n          <v-col cols=\"2\">\n            <v-text-field\n              v-model.number=\"longitude_S\"\n              :min=\"0\"\n              :max=\"59.9999\"\n              :step=\"0.0001\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            />\n          </v-col>\n          <v-col cols=\"1\">\n            <v-select :items=\"['E', 'W']\" hide-details variant=\"outlined\" append-icon=\"mdi-information\" />\n          </v-col>\n        </v-row>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 640,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1c90e219a749e53e",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "1cfe3062a8353012",
        "page": "",
        "ui": "",
        "name": "Ending point",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container>\n    <v-row>\n      <!-- Date -->\n      <v-col cols=\"12\" md=\"6\">\n        <v-text-field\n          label=\"Date\"\n          variant=\"outlined\"\n          placeholder=\"jj/mm/aaaa\"\n          type=\"date\"\n        />\n      </v-col>\n\n      <!-- Time -->\n      <v-col cols=\"12\" md=\"6\">\n        <v-text-field\n          label=\"Time\"\n          variant=\"outlined\"\n          placeholder=\"--:--\"\n          type=\"time\"\n          density=\"compact\"\n        />\n      </v-col>\n    </v-row>\n        <v-row>\n\n      <!-- GPS Latitude -->\n      <v-col cols=\"12\" md=\"12\">\n        <v-row>\n          <v-col cols=\"1\">\n            Latitude\n          </v-col>\n          <v-col cols=\"1\">\n\n            <v-text-field\n              v-model.number=\"latitude_D\"\n              :min=\"0\"\n              :max=\"90\"\n              :step=\"1\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            /></v-text-field>\n          </v-col>\n          <v-col cols=\"1\">\n              \n            <v-text-field\n              v-model.number=\"latitude_M\"\n              :min=\"0\"\n              :max=\"59\"\n              :step=\"1\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            /></v-text-field>\n          </v-col>\n          <v-col cols=\"2\">\n              \n            <v-text-field\n              v-model.number=\"latitude_S\"\n              :min=\"0\"\n              :max=\"59.9999\"\n              :step=\"0.0001\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            /></v-text-field>\n          </v-col>\n          <v-col cols=\"1\">\n            <v-select variant=\"outlined\" :items=\"['N', 'S']\" hide-details \n               />\n          </v-col>\n\n          <v-col cols=\"1\">\n            Longitude\n          </v-col>\n\n          <!-- GPS Longitude -->\n          \n          \n          <v-col cols=\"1\">\n\n            <v-text-field\n              v-model.number=\"longitude_D\"\n              :min=\"0\"\n              :max=\"180\"\n              :step=\"1\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            /></v-text-field>\n          </v-col>\n          <v-col cols=\"1\">\n              \n            <v-text-field\n              v-model.number=\"longitude_M\"\n              :min=\"0\"\n              :max=\"59\"\n              :step=\"1\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            /></v-text-field>\n          </v-col>\n          <v-col cols=\"2\">\n              \n            <v-text-field\n              v-model.number=\"longitude_S\"\n              :min=\"0\"\n              :max=\"59.9999\"\n              :step=\"0.0001\"\n              :model-value=\"0\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n            /></v-text-field>\n          </v-col>\n          <v-col cols=\"1\">\n            <v-select :items=\"['E', 'W']\" hide-details variant=\"outlined\" />\n          </v-col>\n        </v-row>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "09b551fa202d8029",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "cb3521392eb4e9ed",
        "page": "",
        "ui": "",
        "name": "Net Specificity",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Mouth Opening Diameter\"\n          v-model=\"sample_net_mouth_diameter\"\n          :min=\"0\"\n          :max=\"1000\"\n          :step=\"1\"\n          suffix=\"cm\"\n          type=\"number\"\n          variant=\"outlined\"\n          clearable\n          hint=\"The diameter of the mouth (or opening) of the net used in sampling, measured in centimeters (cm).\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Length of the Net\"\n          v-model=\"sample_net_length\"\n          :min=\"0\"\n          :max=\"1000\"\n          :step=\"1\"\n          suffix=\"cm\"\n          type=\"number\"\n          variant=\"outlined\"\n          clearable\n          hint=\"The length of the net used for sampling from the opening to the collector, measured in centimeters (cm). Measure from mouth to bottom of collector.\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Net mesh size\"\n          v-model=\"sample_net_mesh_size\"\n          :min=\"0\"\n          :max=\"1000\"\n          :step=\"1\"\n          suffix=\"μm\"\n          type=\"number\"\n          variant=\"outlined\"\n          clearable\n          hint=\"The size of the mesh used in the net, measured in micrometers (μm).\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Volume of the collector\"\n          v-model=\"sample_collected_volume\"\n          :min=\"0\"\n          :max=\"1000\"\n          :step=\"1\"\n          suffix=\"mL\"\n          type=\"number\"\n          variant=\"outlined\"\n          clearable\n          hint=\"The volume of water collected after sampling, measured in milliliters (ml).\" append-icon=\"mdi-information\"\n        />\n        \n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\n  export default {\n    data: () => ({\n      sample_net_mouth_diameter: 30,\n      sample_net_length: 120,\n      sample_net_mesh_size: 20,\n      sample_collected_volume: 50\n    }),\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 640,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "956497903d6d3038",
        "type": "function",
        "z": "190b0c9aa75e8843",
        "name": "Get Global Variables",
        "func": "const keys = global.keys(); // Get all global keys\n\nkeys.forEach(key => {\n    msg[key] = global.get(key);\n});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 220,
        "wires": [
            [
                "279f3ddada9cadaa"
            ]
        ]
    },
    {
        "id": "93a68ffbce74d70d",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "dd4d9707051041c9",
        "page": "",
        "ui": "",
        "name": "Other Informations",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Filtered volume\"\n          v-model=\"sample_filtered_volume\"\n          :min=\"0\"\n          :max=\"100000\"\n          :step=\"1\"\n          suffix=\"L\"\n          type=\"number\"\n          variant=\"outlined\"\n          clearable\n          hint=\"The volume of water filtered through the net during sampling, measured in liters (L).\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Concentration factor\"\n          v-model=\"sample_concentration_factor\"\n          :min=\"0\"\n          :max=\"100\"\n          :step=\"0.01\"\n          suffix=\"L\"\n          type=\"number\"\n          variant=\"outlined\"\n          clearable\n          hint=\"TO DO\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Sieve mesh size\"\n          v-model=\"sample_sieve_mesh_size\"\n          :min=\"1\"\n          :max=\"1000\"\n          :step=\"10\"\n          suffix=\"μm\"\n          type=\"number\"\n          variant=\"outlined\"\n          clearable\n          hint=\"The size of the mesh used in the sieve, measured in micrometers (μm).\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Depth of the sample\"\n          v-model=\"sample_depth\"\n          :min=\"0\"\n          :max=\"10935\"\n          :step=\"1\"\n          suffix=\"m\"\n          type=\"number\"\n          variant=\"outlined\"\n          clearable\n          hint=\"The depth at which the sample was collected during a horizontal tow or Niskin bottle sampling, measured in meters (m).\" append-icon=\"mdi-information\"\n        />\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"12\" md=\"12\">\n        <v-textarea\n          clearable\n          label=\"Sample Comment\"\n          variant=\"outlined\"\n          row-height=\"20\"\n          rows=\"2\"\n          hint=\"Any additional comments or notes about the sample that may be useful for analysis, or any other useful information to keep in the metadata for this particular sample.\" append-icon=\"mdi-information\"\n        ></v-textarea>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\n  export default {\n    data: () => ({\n      sample_filtered_volume: 1500,\n      sample_concentration_factor: 1,\n      sample_sieve_mesh_size: 200,\n      sample_depth: 1,\n    }),\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8e3eed5be42ad41f",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "59ce6abfbb7f8683",
        "page": "",
        "ui": "",
        "name": "Navigation Bottom",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n\n    <v-row justify=\"space-between\" align=\"center\">\n      <v-col cols=\"auto\">\n        <v-btn\n          variant=\"text\"\n          to=\"preview\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Preview\n        </v-btn>\n      </v-col>\n\n      <v-col cols=\"auto\">\n        <v-btn\n          variant=\"text\"\n          to=\"acquisition\"\n        >\n          Acquisition\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "ffe728d961068c62",
        "type": "ui-template",
        "z": "35d7387466dd0bc0",
        "g": "4b86185ad4a4ade1",
        "group": "b274327af3807b79",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "0",
        "height": "0",
        "head": "",
        "format": "<template class=\"pr-0\">\n    <center>\n  <img src=\"/ps/hal/camera/streams/preview.mjpg\"\n    alt=\"If you see this, there probably is an error either with your camera or with the python service. Please try restarting your machine.\"\n    width=\"100%\" height=\"100%\">\n</center>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 210,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7630af38d8e62254",
        "type": "mqtt out",
        "z": "35d7387466dd0bc0",
        "g": "e8ba2d3274c7e963",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "b3987ca157e030f6",
        "type": "mqtt out",
        "z": "35d7387466dd0bc0",
        "g": "e8ba2d3274c7e963",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 870,
        "y": 240,
        "wires": []
    },
    {
        "id": "c1d6882488c0b3ac",
        "type": "function",
        "z": "35d7387466dd0bc0",
        "g": "e8ba2d3274c7e963",
        "name": "pump",
        "func": "var manual_volume= global.get(\"pump_manual_volume\");\nvar flowrate= global.get(\"pump_flowrate\");\n\nif (manual_volume === undefined || manual_volume === \"\" || manual_volume === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Volume to pass\";\n    return [null, msg];\n}\nelse if (flowrate === undefined || flowrate === \"\" || flowrate === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Flowrate\";\n    return [null, msg];\n}\nelse {\n    msg.topic = \"actuator/pump\";\n    // msg.payload is FORWARD or BACKWARD here\n    msg.payload={\"action\":\"move\", \n                \"direction\":msg.payload,\n                \"volume\":manual_volume,\n                \"flowrate\":flowrate};\n}\nreturn [msg, null];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 300,
        "wires": [
            [
                "7630af38d8e62254"
            ],
            []
        ],
        "inputLabels": [
            "direction"
        ],
        "outputLabels": [
            "message",
            "error"
        ]
    },
    {
        "id": "dde296786a762acb",
        "type": "function",
        "z": "35d7387466dd0bc0",
        "g": "e8ba2d3274c7e963",
        "name": "set global",
        "func": "global.set(msg.topic,msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "aa6924c7e0aff26c",
        "type": "ui-template",
        "z": "35d7387466dd0bc0",
        "g": "e8ba2d3274c7e963",
        "group": "d2f77573ed4317e4",
        "page": "",
        "ui": "",
        "name": "Acquisition settings",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-row>\n    <v-col cols=\"12\" sm=\"12\">\n      <v-text-field\n        label=\"Acquisition ID\"\n        v-model=\"acq_id\"\n        variant=\"outlined\"\n        clearable\n        hint=\"A unique identifier assigned to each acquisition. Multiple acquisitions are sometimes required to adjust some parameters.\"\n        append-icon=\"mdi-information\"\n      />\n    </v-col>\n  </v-row>\n  <v-row>\n    <v-col cols=\"12\" sm=\"8\">\n      <v-slider\n        v-model.number=\"acq_number_image_acquired\"\n        :max=\"10000\"\n        :min=\"1\"\n        :step=\"1\"\n        class=\"align-center\"\n        hide-details\n        label=\"Number of Images\"\n      />\n    </v-col>\n    <v-col cols=\"12\" sm=\"4\">\n      <v-text-field\n        v-model=\"acq_number_image_acquired\"\n        type=\"number\"\n        variant=\"outlined\"\n        hide-details\n        suffix=\"img\"\n        append-icon=\"mdi-information\"\n      />\n    </v-col>\n  </v-row>\n  <v-row>\n    <v-col cols=\"12\" sm=\"8\">\n      <v-slider\n        v-model.number=\"acq_interframe_volume\"\n        :max=\"100\"\n        :min=\"1\"\n        :step=\"1\"\n        class=\"align-center\"\n        hide-details\n        label=\"Volume in between frames\"\n      />\n    </v-col>\n    <v-col cols=\"12\" sm=\"4\">\n      <v-text-field\n        v-model=\"acq_interframe_volume\"\n        type=\"number\"\n        variant=\"outlined\"\n        hide-details\n        suffix=\"µL\"\n        append-icon=\"mdi-information\"\n      />\n    </v-col>\n  </v-row>\n  <v-row>\n    <v-col cols=\"12\" sm=\"8\">\n    <span class=\"text-subtitle-1 text-medium-emphasis ma-2\">Volume Imaged :</span>\n    </v-col>\n    <v-col cols=\"12\" sm=\"4\">\n      <v-text-field\n        v-model=\"acq_imaged_volume\"\n        type=\"number\"\n        hide-details\n        suffix=\"mL\"\n        append-icon=\"mdi-information\"\n        variant=\"plain\"\n        readonly\n      />\n    </v-col>\n  </v-row>\n  <v-row>\n    <v-col cols=\"12\" sm=\"8\">\n    <span class=\"text-subtitle-1 text-medium-emphasis ma-2\">Volume total displaced :</span>\n    </v-col>\n    <v-col cols=\"12\" sm=\"4\">\n      <v-text-field\n        v-model=\"acq_pumped_volume\"\n        type=\"number\"\n        hide-details\n        suffix=\"mL\"\n        append-icon=\"mdi-information\"\n        variant=\"plain\"\n        readonly\n      />\n    </v-col>\n  </v-row>\n  <v-row>\n    <v-col cols=\"12\" sm=\"12\">\n  \n          <v-textarea\n          clearable\n        \n          label=\"Acquisition comment\"\n          variant=\"outlined\"\n          row-height=\"20\"\n          rows=\"2\"\n          hint=\"This field is for any additional comments or notes related to the acquisition process.\" append-icon=\"mdi-information\"\n        ></v-textarea>\n    </v-col>\n        \n  </v-row>\n  \n  <v-row>\n    <v-col cols=\"12\" sm=\"12\">\n    <v-progress-linear v-model=\"acq_progression\" \n      striped color=\"primary\" height=\"25\">\n      <template v-slot:default=\"{ value }\">\n        <strong>{{ Math.ceil(value) }}%</strong>\n      </template>\n    </v-progress-linear>\n    </v-col>\n        \n  </v-row>\n  <v-row>\n    <v-col cols=\"12\" sm=\"8\">\n    <span class=\"text-subtitle-1 text-medium-emphasis ma-2\">Estimated duration left :</span>\n    </v-col>\n    <v-col cols=\"12\" sm=\"4\">\n      <v-text-field\n        v-model=\"acq_duration_left\"\n        type=\"number\"\n        hide-details\n        suffix=\"min\"\n        append-icon=\"mdi-information\"\n        variant=\"plain\"\n        readonly\n      />\n    </v-col>\n  </v-row>\n  \n    <v-row>\n      <v-col cols=\"12\">\n        <v-btn-toggle\n          v-model=\"acq_status\"\n          variant=\"outlined\"\n          mandatory\n          divided\n          shaped\n          class=\"d-flex justify-space-between\"\n        >\n          <v-btn class=\"flex-grow-1\" :value=\"'off'\">Stop</v-btn>\n          <v-btn class=\"flex-grow-1\" :value=\"'on'\">Start</v-btn>\n        </v-btn-toggle>\n      </v-col>\n     \n    </v-row>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        acq_id: null,\n        acq_number_image_acquired: 100,\n        acq_interframe_volume: 2,\n        acq_imaged_volume:0.020,\n        acq_pumped_volume:15,\n        acq_progression: 20,\n        acq_duration_left: 15,\n        acq_status:\"off\"\n        \n      }\n    },\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 230,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "a39e07fd1a86ac84",
        "type": "ui-template",
        "z": "35d7387466dd0bc0",
        "group": "3ae252a2e5abca89",
        "page": "",
        "ui": "",
        "name": "Navigation",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n\n    <v-row justify=\"space-between\" align=\"center\">\n      <v-col cols=\"auto\">\n        <v-btn\n          variant=\"text\"\n          to=\"metadata\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Metadata\n        </v-btn>\n      </v-col>\n\n      <v-col cols=\"auto\">\n        <v-btn\n          variant=\"text\"\n          to=\"segmentation\"\n        >\n          Segmentation\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ef632b53f227156b",
        "type": "dir2files",
        "z": "0fd76ac156d78937",
        "name": "",
        "dirname": "/home/pi/data/img/",
        "pathRegex": "",
        "isRecursive": true,
        "findDir": true,
        "isArray": true,
        "x": 100,
        "y": 140,
        "wires": [
            [
                "369b19dceb37533d"
            ]
        ]
    },
    {
        "id": "250979b4672d81b6",
        "type": "ui-event",
        "z": "0fd76ac156d78937",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "72421c36bb0418bc"
            ]
        ]
    },
    {
        "id": "72421c36bb0418bc",
        "type": "switch",
        "z": "0fd76ac156d78937",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 60,
        "wires": [
            [
                "66d295cc27d69cec"
            ]
        ]
    },
    {
        "id": "66d295cc27d69cec",
        "type": "switch",
        "z": "0fd76ac156d78937",
        "name": "msg.payload.page.path === \"/segmentation\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/segmentation",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 60,
        "wires": [
            [
                "ef632b53f227156b"
            ]
        ]
    },
    {
        "id": "eaa2a13eb1c6577c",
        "type": "debug",
        "z": "0fd76ac156d78937",
        "name": "Résultat final",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 420,
        "wires": []
    },
    {
        "id": "369b19dceb37533d",
        "type": "function",
        "z": "0fd76ac156d78937",
        "name": "Extract Deepest Metadata Paths",
        "func": "let input = msg.payload;\nlet output = [];\n\n// Filter only the deepest paths (not a prefix of any other path)\ninput.forEach(path => {\n    let isDeepest = input.every(other => {\n        return path === other || !other.startsWith(path + '/');\n    });\n    if (isDeepest) {\n        output.push(path + '/metadata.json');\n    }\n});\n\nmsg.payload = output;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 140,
        "wires": [
            [
                "3c919c7004a1ec45"
            ]
        ]
    },
    {
        "id": "331a77cdd26b0522",
        "type": "file in",
        "z": "0fd76ac156d78937",
        "name": "",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 640,
        "y": 140,
        "wires": [
            [
                "472d2096ae2eefaa"
            ]
        ]
    },
    {
        "id": "472d2096ae2eefaa",
        "type": "json",
        "z": "0fd76ac156d78937",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 110,
        "y": 240,
        "wires": [
            [
                "b6179c8a5f70c13b"
            ]
        ]
    },
    {
        "id": "61c2c281b1c6e055",
        "type": "ui-table",
        "z": "0fd76ac156d78937",
        "group": "bfd4acb7b243514f",
        "name": "",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": false,
        "showSearch": false,
        "selectionType": "checkbox",
        "columns": [
            {
                "title": "Sample Project",
                "key": "sample_project",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "center"
            },
            {
                "title": "Sample ID",
                "key": "sample_id",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "center"
            },
            {
                "title": "Acquisition ID",
                "key": "acq_id",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "center"
            },
            {
                "title": "acq_local_datetime",
                "key": "acq_local_datetime",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Operator Name",
                "key": "sample_operator",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Number of images",
                "key": "acq_nb_frame",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            }
        ],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 350,
        "y": 240,
        "wires": [
            [
                "0c8a74d698c153c3",
                "b888b35ab94613f6"
            ]
        ]
    },
    {
        "id": "b6179c8a5f70c13b",
        "type": "join",
        "z": "0fd76ac156d78937",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 230,
        "y": 240,
        "wires": [
            [
                "61c2c281b1c6e055"
            ]
        ]
    },
    {
        "id": "3c919c7004a1ec45",
        "type": "split",
        "z": "0fd76ac156d78937",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "331a77cdd26b0522"
            ]
        ]
    },
    {
        "id": "0c8a74d698c153c3",
        "type": "debug",
        "z": "0fd76ac156d78937",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 360,
        "wires": []
    },
    {
        "id": "b888b35ab94613f6",
        "type": "ui-table",
        "z": "0fd76ac156d78937",
        "group": "1190bcb9f9eb9202",
        "name": "",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": false,
        "showSearch": false,
        "selectionType": "none",
        "columns": [
            {
                "title": "Sample Project",
                "key": "sample_project",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "center"
            },
            {
                "title": "Sample ID",
                "key": "sample_id",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "center"
            },
            {
                "title": "Acquisition ID",
                "key": "acq_id",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "center"
            }
        ],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 730,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f142197f943e06c3",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "f9b137cda6a41cc8",
        "group": "0b938df814df6f89",
        "page": "",
        "ui": "",
        "name": "template with dialog",
        "order": 1,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div>\n    <v-text-field\n    type=\"number\"\n      label=\"Prepend inner\"\n      prepend-inner-icon=\"mdi-information-outline\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      clearable\n      @click:prepend-inner=\"showDialog = true\"\n    ></v-text-field>\n\n    <v-dialog v-model=\"showDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title> Information </v-card-title>\n        <v-card-text>\n          This is some additional information displayed in a dialog.\n        </v-card-text>\n        <v-card-actions>\n          <v-btn text @click=\"showDialog = false\">Close</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        showDialog: false, // Controls dialog visibility\n      }\n    },\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 200,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ba32092924c21704",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "f9b137cda6a41cc8",
        "group": "0b938df814df6f89",
        "name": "template with dialog",
        "order": 4,
        "width": "4",
        "height": "1",
        "content": "# Template with dialog\n```html\n<template>\n  <div>\n    <v-text-field\n      label=\"Prepend inner\"\n      prepend-inner-icon=\"mdi-information-outline\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      @click:prepend-inner=\"showDialog = true\"\n    ></v-text-field>\n\n    <v-dialog v-model=\"showDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title> Information </v-card-title>\n        <v-card-text>\n          This is some additional information displayed in a dialog.\n        </v-card-text>\n        <v-card-actions>\n          <v-btn text @click=\"showDialog = false\">Close</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        showDialog: false, // Controls dialog visibility\n      }\n    },\n  }\n</script>\n\n```",
        "className": "",
        "x": 200,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "09145421eca576b2",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "e42e71164274acdc",
        "group": "0b938df814df6f89",
        "page": "",
        "ui": "",
        "name": "template persistent hint",
        "order": 5,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<template>\n    <v-text-field\n    type=\"number\"\n      label=\"Label\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      clearable\n      persistent-hint\n      hint=\"This is some additional information displayed in a hint.\"\n    ></v-text-field>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 470,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f467dd95ca327abe",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "a2eff4bb38731253",
        "group": "0b938df814df6f89",
        "page": "",
        "ui": "",
        "name": "template hidden hint",
        "order": 6,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<template>\n    <v-text-field\n    type=\"number\"\n      label=\"Label\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      clearable\n      hint=\"This is some additional information displayed in a hint.\"\n    ></v-text-field>\n\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "96d4f5ed69c26184",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "e42e71164274acdc",
        "group": "0b938df814df6f89",
        "name": "template persistent hint",
        "order": 2,
        "width": "4",
        "height": "1",
        "content": "# Template persistent hint\n```html\n<template>\n    <v-text-field\n    type=\"number\"\n      label=\"Label\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      clearable\n      persistent-hint\n      hint=\"This is some additional information displayed in a hint.\"\n    ></v-text-field>\n</template>\n\n```",
        "className": "",
        "x": 470,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9460aed131d64851",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "a2eff4bb38731253",
        "group": "0b938df814df6f89",
        "name": "template hidden hint",
        "order": 3,
        "width": "4",
        "height": "1",
        "content": "# Template hidden hint\n```html\n<template>\n    <v-text-field\n    type=\"number\"\n      label=\"Label\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      clearable\n      hint=\"This is some additional information displayed in a hint.\"\n    ></v-text-field>\n</template>\n\n```",
        "className": "",
        "x": 740,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b2b82b3ee278d4bc",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "224fcab0880dd093",
        "group": "42ad8472e579096e",
        "page": "",
        "ui": "",
        "name": "Sliders",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card class=\"ma-20 pa-2\">\n    <v-row class=\"ma-20 pa-2\">\n      <v-col cols=\"12\" sm=\"10\">\n        <v-slider\n          v-model=\"slider\"\n          :max=\"max\"\n          :min=\"min\"\n          :step=\"0.2\"\n          class=\"align-center\"\n          hide-details\n          label=\"Label\"\n          :thumb-size=\"30\"\n        />\n      </v-col>\n      <v-col cols=\"12\" sm=\"2\">\n        <v-text-field\n          v-model=\"slider\"\n          prepend-inner-icon=\"mdi-information-outline\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details\n          suffix=\"suffix\"\n          density=\"compact\"\n          @click:prepend-inner=\"showDialog = true\"\n        />\n        <v-dialog v-model=\"showDialog\" max-width=\"500px\">\n          <v-card>\n            <v-card-title>Information</v-card-title>\n            <v-card-text>\n              This is some additional information displayed in a dialog.\n            </v-card-text>\n            <v-card-actions>\n              <v-btn text @click=\"showDialog = false\">Close</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-col>\n    </v-row>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        showDialog: false, // Controls dialog visibility\n        min: -50,\n        max: 90,\n        slider: 40,\n      }\n    },\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 110,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "cead53fe6d7fe793",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "224fcab0880dd093",
        "group": "42ad8472e579096e",
        "name": "Slides description",
        "order": 2,
        "width": "0",
        "height": "0",
        "content": "# Template for slider\n```html\n<template>\n  <v-card class=\"ma-20 pa-2\">\n    <v-row class=\"ma-20 pa-2\">\n      <v-col cols=\"12\" sm=\"10\">\n        <v-slider\n          v-model=\"slider\"\n          :max=\"max\"\n          :min=\"min\"\n          :step=\"0.2\"\n          class=\"align-center\"\n          hide-details\n          label=\"Label\"\n          :thumb-size=\"30\"\n        />\n      </v-col>\n      <v-col cols=\"12\" sm=\"2\">\n        <v-text-field\n          v-model=\"slider\"\n          prepend-inner-icon=\"mdi-information-outline\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details\n          suffix=\"suffix\"\n          density=\"compact\"\n          @click:prepend-inner=\"showDialog = true\"\n        />\n        <v-dialog v-model=\"showDialog\" max-width=\"500px\">\n          <v-card>\n            <v-card-title>Information</v-card-title>\n            <v-card-text>\n              This is some additional information displayed in a dialog.\n            </v-card-text>\n            <v-card-actions>\n              <v-btn text @click=\"showDialog = false\">Close</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-col>\n    </v-row>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        showDialog: false, // Controls dialog visibility\n        min: -50,\n        max: 90,\n        slider: 40,\n      }\n    },\n  }\n</script>\n```",
        "className": "",
        "x": 150,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "7777baf58bd1bc87",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "951b589e9ecbbb70",
        "group": "e461e16bf6fe45b0",
        "page": "",
        "ui": "",
        "name": "Button toggles",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-btn-toggle\n    v-model=\"toggle_btn\"\n    color=\"primary\"\n    mandatory\n    shaped\n    class=\"d-flex justify-space-between\"\n      variant=\"outlined\" divided\n  >\n    <v-btn class=\"flex-grow-1\"> 1 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 2 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 3 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 4 </v-btn>\n  </v-btn-toggle>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        toggle_btn: 0,\n      }\n    },\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "a43e9d9c640f6a51",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "951b589e9ecbbb70",
        "group": "e461e16bf6fe45b0",
        "name": "Button toggles description",
        "order": 2,
        "width": "0",
        "height": "0",
        "content": "# Template for btn group\n\n```html\n<template>\n  <v-btn-toggle\n    v-model=\"toggle_btn\"\n    color=\"primary\"\n    mandatory\n    shaped\n    class=\"d-flex justify-space-between\"\n  >\n    <v-btn class=\"flex-grow-1\"> 1 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 2 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 3 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 4 </v-btn>\n  </v-btn-toggle>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        toggle_btn: 0,\n      }\n    },\n  }\n</script>\n\n```",
        "className": "",
        "x": 180,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "6d725e9d6e6752bd",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "0d9513e4fa8e671f",
        "group": "3496e96aaf509c63",
        "name": "Vuetify links",
        "order": 1,
        "width": 0,
        "height": 0,
        "content": "# Vuetify Resources and Examples\n\nThis document provides useful links and references for working with Vuetify components, icons, and examples.\n\n## Vuetify Documentation\n- **Component Usage**: Learn how to use components in Vuetify.  \n  [View Documentation](https://vuetifyjs.com/en/components/all/#containment)\n\n- **API Reference**: Explore the full API details for `v-field`.  \n  [View API](https://vuetifyjs.com/en/api/v-field/)\n\n## Icons\n- **Material Design Icons**: Access the Material Design Icons (MDI) library for Vuetify projects.  \n  [Explore Icons](https://pictogrammers.github.io/@mdi/font/2.0.46/)\n\n## Code Playground\n- **Vue Play**: Experiment with Vue.js and Vuetify components in an interactive playground.  \n  [Open Playground](https://play.vuetifyjs.com/#eNrFVdtu2kAQ/ZWV1UdsQ2jUyKIRacVDq6qNClIf4jws9hg2We9ae+HSKP/e2TUYQ0IUibaRAMvnzM7MOR7GNw+BVll8VVXRwkKQBAMDZcWpgctUEDJYhJkUhjIBihTcstzDnlByubnZxHGCX/0xDd6nQcN4TtvpHGgO6vJaQcFWpJCK5JJzqkhmlQKRrQdxO65JjChmPVLo4rCQgZUJCwY8J5xOgWPMVSmtMGlAFpRbQKDXjbpdvK98Kwi8wyyuzu7wkfLurlZ9mgljW2xNWAKbzc2/0v7LZ29pP7uotWvfAQJ8qt9QPZSUcRwEvIi/7MEOJo0dI1+O5rkCjbLbIVuDYEVx/GGfbNwazlyGKJNlO+DN7DOsBPJbCvgP3n1zVzLBmOeN650l/W7ihqvNmnXlSNfoEUuvx5NTvNwymx2FyCBubbCgExiNbMFm0Z2WAhfcgzuUBvgMK8ZB/agMkwKnISGecRzlXC6/eswoC50tns0hu38Gv9Mrh6EYHCxQC9TacIaqGaBnjh6Nv3v/GrKUuXXD9gL5E7Tk1vVYh32yIse2W3G+2y9lJZVhYjbRo5UBobeiXKMu8tHHpwFu+c8vSN+124/6/lwq8IM+Ml8hLGl14GRN7KfBKnW7c2MqncRxlgs8lgNnCxUJMLGoyniIYbHC7YzjEeIWGPaj86jXj3OmTRuPQJfhFB84motZWtoxgWHF+hW1NpFY4kN0XlfYQCGOuHYlnqSO/cNUIb6f8H/lTH+dpINje7IOuCfS9jznTNzrw8F1qyshNyfq9Wlu60KPHWE59z+3fwDtNYW9)\n\n",
        "className": "",
        "x": 130,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "eeeea47645f9daca",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "9ac62e47f20b26b7",
        "group": "c503a4c01451fec2",
        "name": "Preview description",
        "order": 2,
        "width": "0",
        "height": "0",
        "content": "# Template for preview\n\n## Option 1 - ElevateZoom from jQuery\n\nUse the library depending on jQuery - [ElevateZoom](https://igorlino.github.io/elevatezoom-plus/)\n\n```html\n<script src=\"https://code.jquery.com/jquery-3.6.4.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/gh/igorlino/elevatezoom-plus@1.1.6/src/jquery.ez-plus.js\"></script>\n\n<div>\n  <img \n    id=\"zoom\" \n    src=\"http://90.28.148.199/ps/hal/camera/streams/preview.mjpg\" \n    data-zoom-image=\"http://90.28.148.199/ps/hal/camera/streams/preview.mjpg\" \n    alt=\"Live camera stream with zoom feature\" \n  />\n</div>\n\n<script>\n  $(document).ready(function () {\n    $('#zoom').ezPlus({\n      scrollZoom: true,      \n    });\n  });\n</script>\n```\n## Option 2 - ngx-image-zoom from AngularJS\n\nUse the pure Angular library - [ngx-image-zoom](https://www.npmjs.com/package/ngx-image-zoom)\n",
        "className": "",
        "x": 150,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "55bf230acc0db31a",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "9ac62e47f20b26b7",
        "group": "c503a4c01451fec2",
        "page": "",
        "ui": "",
        "name": "Preview",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<!-- Include jQuery and ElevateZoom-Plus -->\n<script src=\"https://code.jquery.com/jquery-3.6.4.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/gh/igorlino/elevatezoom-plus@1.1.6/src/jquery.ez-plus.js\"></script>\n\n<!-- Zoomable Image -->\n<template>\n  <v-row>\n    <v-col cols=\"8\">\n      <v-card variant=\"outlined\" width=\"auto\" height=\"800px\" class=\"pa-0 ma-0\"\n        >\n          <img\n          id=\"zoom\"\n          src=\"/ps/hal/camera/streams/preview.mjpg\"\n          data-zoom-image=\"http://90.28.148.199/ps/hal/camera/streams/preview.mjpg\"\n          alt=\"Live camera stream with zoom feature\"\n          style=\"\n            transform: rotate(-90deg);\n            margin-left: -100px;\n            margin-top: 100px;\n          \"\n          width=\"800px\"\n          height=\"600px\"\n      /></v-card>\n    </v-col>\n    <v-col cols=\"4\">\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n    </v-col>\n  </v-row>\n</template>\n\n\n<!-- Activate Zoom -->\n<script>\n  $(document).ready(function () {\n    $('#zoom').ezPlus({\n      scrollZoom: true,       // Enable scroll zoom\n    });\n  });\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "ff04e338f28791c1",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "f6e28f1fc85830b2",
        "group": "9919d82f68c7a152",
        "name": "Textareas description",
        "order": 2,
        "width": "0",
        "height": "0",
        "content": "# Template for Textareas\n\n```html\n<template>\n  <v-textarea\n    clearable\n    label=\"Label\"\n    variant=\"outlined\"\n    row-height=\"20\"\n    rows=\"2\"\n  ></v-textarea>\n</template>\n\n\n```",
        "className": "",
        "x": 160,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "a1de4783b40b22c7",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "f6e28f1fc85830b2",
        "group": "9919d82f68c7a152",
        "page": "",
        "ui": "",
        "name": "Textareas",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-textarea\n    clearable\n    label=\"Label\"\n    variant=\"outlined\"\n    row-height=\"20\"\n    rows=\"2\"\n  ></v-textarea>\n</template>\n\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "af21295c7ed58d76",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "c4dc9bdc60c02255",
        "group": "2ca4adc305fbadd5",
        "page": "",
        "ui": "",
        "name": "Home",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-empty-state\n    headline=\"Welcome,\"\n    icon=\"$vuetify\"\n    title=\"What would you like to do today?\"\n  >\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://vuetifyjs.com/introduction/why-vuetify/#feature-guides\"\n            prepend-icon=\"$vuetify\"\n            target=\"_blank\"\n            text=\"Start with our dedicated feature guides\"\n            title=\"Learn Vuetify\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://play.vuetifyjs.com\"\n            prepend-icon=\"$vuetify-play\"\n            target=\"_blank\"\n            text=\"Test Vuetify out in our playground\"\n            title=\"Create a Playground\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://bin.vuetifyjs.com\"\n            prepend-icon=\"mdi-delete\"\n            target=\"_blank\"\n            text=\"Create a new bin to store your code\"\n            title=\"Create a Bin\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://issues.vuetifyjs.com\"\n            prepend-icon=\"$warning\"\n            target=\"_blank\"\n            text=\"File a bug report for Vuetify\"\n            title=\"Report a Bug\"\n          ></v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-empty-state>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 110,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "0666ca0a7a83550a",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "c4dc9bdc60c02255",
        "group": "2ca4adc305fbadd5",
        "name": "Home description",
        "order": 2,
        "width": "0",
        "height": "0",
        "content": "# Template for Home\n```html\n<template>\n  <v-empty-state\n    headline=\"Welcome,\"\n    icon=\"$vuetify\"\n    title=\"What would you like to do today?\"\n  >\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://vuetifyjs.com/introduction/why-vuetify/#feature-guides\"\n            prepend-icon=\"$vuetify\"\n            target=\"_blank\"\n            text=\"Start with our dedicated feature guides\"\n            title=\"Learn Vuetify\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://play.vuetifyjs.com\"\n            prepend-icon=\"$vuetify-play\"\n            target=\"_blank\"\n            text=\"Test Vuetify out in our playground\"\n            title=\"Create a Playground\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://bin.vuetifyjs.com\"\n            prepend-icon=\"mdi-delete\"\n            target=\"_blank\"\n            text=\"Create a new bin to store your code\"\n            title=\"Create a Bin\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://issues.vuetifyjs.com\"\n            prepend-icon=\"$warning\"\n            target=\"_blank\"\n            text=\"File a bug report for Vuetify\"\n            title=\"Report a Bug\"\n          ></v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-empty-state>\n</template>\n```",
        "className": "",
        "x": 150,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "bdd5061dc2808c7b",
        "type": "ui-event",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 120,
        "y": 1280,
        "wires": [
            [
                "c7af759e6348052a"
            ]
        ]
    },
    {
        "id": "c7af759e6348052a",
        "type": "switch",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 1280,
        "wires": [
            [
                "05f282f697c8d264"
            ]
        ]
    },
    {
        "id": "f8450ada286a255f",
        "type": "debug",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "name": "msg.payload.page.path",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.page.path",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1280,
        "wires": []
    },
    {
        "id": "05f282f697c8d264",
        "type": "switch",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "name": "msg.payload.page.path === \"/home\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/load",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1280,
        "wires": [
            [
                "f8450ada286a255f"
            ]
        ]
    },
    {
        "id": "1c2b9fbce068ea00",
        "type": "ui-flowviewer",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "name": "",
        "group": "4b77e32bb8af68b1",
        "order": 1,
        "width": "0",
        "flow": "[     {         \"id\": \"f8450ada286a255f\",         \"type\": \"debug\",         \"z\": \"061f6587029fa891\",         \"name\": \"msg.payload.page.path\",         \"active\": true,         \"tosidebar\": true,         \"console\": false,         \"tostatus\": false,         \"complete\": \"payload.page.path\",         \"targetType\": \"msg\",         \"statusVal\": \"\",         \"statusType\": \"auto\",         \"x\": 1030,         \"y\": 40,         \"wires\": []     },     {         \"id\": \"05f282f697c8d264\",         \"type\": \"switch\",         \"z\": \"061f6587029fa891\",         \"name\": \"msg.payload.page.path === \\\"/home\\\"\",         \"property\": \"payload.page.path\",         \"propertyType\": \"msg\",         \"rules\": [             {                 \"t\": \"eq\",                 \"v\": \"/load\",                 \"vt\": \"str\"             }         ],         \"checkall\": \"true\",         \"repair\": false,         \"outputs\": 1,         \"x\": 690,         \"y\": 40,         \"wires\": [             [                 \"f8450ada286a255f\",                 \"328128b08bc72b65\"             ]         ]     },     {         \"id\": \"c7af759e6348052a\",         \"type\": \"switch\",         \"z\": \"061f6587029fa891\",         \"name\": \"msg.topic === \\\"$pageview\\\"\",         \"property\": \"topic\",         \"propertyType\": \"msg\",         \"rules\": [             {                 \"t\": \"eq\",                 \"v\": \"$pageview\",                 \"vt\": \"str\"             }         ],         \"checkall\": \"true\",         \"repair\": false,         \"outputs\": 1,         \"x\": 340,         \"y\": 40,         \"wires\": [             [                 \"05f282f697c8d264\"             ]         ]     },     {         \"id\": \"bdd5061dc2808c7b\",         \"type\": \"ui-event\",         \"z\": \"061f6587029fa891\",         \"ui\": \"e6ae26617c24c3ea\",         \"name\": \"UI Event\",         \"x\": 80,         \"y\": 40,         \"wires\": [             [                 \"c7af759e6348052a\"             ]         ]     },     {         \"id\": \"e6ae26617c24c3ea\",         \"type\": \"ui-base\",         \"name\": \"My Dashboard\",         \"path\": \"/dashboard\",         \"appIcon\": \"\",         \"includeClientData\": true,         \"acceptsClientConfig\": [             \"ui-notification\",             \"ui-control\"         ],         \"showPathInSidebar\": true,         \"showPageTitle\": false,         \"navigationStyle\": \"fixed\",         \"titleBarStyle\": \"fixed\",         \"showReconnectNotification\": true,         \"notificationDisplayTime\": \"1\",         \"showDisconnectNotification\": true     } ]",
        "height": "0",
        "x": 1030,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9496c5ceae312a6b",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "group": "4b77e32bb8af68b1",
        "name": "Illustration of the Flow",
        "order": 2,
        "width": 0,
        "height": 0,
        "content": "\n\n## Illustration of the Flow\n\n### **1. UI Event**\n**Node Name**: `UI Event`  \n**Description**: Captures user events from the dashboard (e.g., page navigation).  \n**Connected Dashboard**: `My Dashboard`.\n\n```javascript\n// Emits messages with the topic and page path when an event occurs.\n```\n\n---\n\n### **2. Switch: `$pageview`**\n**Node Name**: `msg.topic === \"$pageview\"`  \n**Description**: Filters messages where `msg.topic` equals `$pageview`, ensuring only page navigation events are processed.\n\n**Rule**:\n```javascript\nmsg.topic === \"$pageview\";\n```\n\n---\n\n### **3. Switch: `/load`**\n**Node Name**: `msg.payload.page.path === \"/load\"`  \n**Description**: Filters messages to pass only those where the page path matches `/load`.\n\n**Rule**:\n```javascript\nmsg.payload.page.path === \"/load\";\n```\n\n---\n\n### **4. Debug**\n**Node Name**: `msg.payload.page.path`  \n**Description**: Outputs the value of `msg.payload.page.path` to the debug sidebar in Node-RED for monitoring purposes.\n\n```javascript\n// Outputs:\n// msg.payload.page.path\n```\n\n---\n\n## Supporting Details\n\n- **Dashboard Base**: `My Dashboard`  \n  - Accessible at `/dashboard`.  \n  - Includes navigation and notification configurations for seamless user interaction.\n\n---\n",
        "className": "",
        "x": 1060,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "bdef59faea812013",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "group": "72483a7aac978971",
        "page": "",
        "ui": "",
        "name": "",
        "order": 3,
        "width": "0",
        "height": "0",
        "head": "",
        "format": "<template>\n    <v-text-field\n        label=\"My variable\"\n        variant=\"outlined\"\n        v-model=\"msg.variable\"\n      hide-details=\"auto\"\n        @update:model-value=\"send({ variable: msg.variable})\"\n    ></v-text-field>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 1460,
        "wires": [
            [
                "fc73d6b9b216ac9c"
            ]
        ]
    },
    {
        "id": "5a9af1c11b3c3c31",
        "type": "function",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "name": "get global variable",
        "func": "// Retrieve the global variable\nmsg.variable = global.get('variable');\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 1460,
        "wires": [
            [
                "bdef59faea812013"
            ]
        ]
    },
    {
        "id": "fc73d6b9b216ac9c",
        "type": "function",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "name": "set global variable",
        "func": "// Set a value in the global context\nglobal.set('variable', msg.variable);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "e3f11510712aac2d",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "group": "72483a7aac978971",
        "name": "Illustration of the Flow",
        "order": 2,
        "width": 0,
        "height": 0,
        "content": "## Illustration of the Flow\n\n### **1. Get Global Variable**\n**Node Name**: `get global variable`  \n**Description**: Retrieves a global variable (`variable`) stored in the Node-RED context.\n\n```javascript\n// Retrieve the global variable\nmsg.variable = global.get('variable');\n\nreturn msg;\n```\n\n---\n\n### **2. Template**\n**Node Name**: `template`  \n**Description**: Displays a Vue.js-based text field in the user interface, allowing the user to view and update the global variable.\n\n```html\n<template>\n    <v-divider class=\"my-5\"></v-divider>\n    <v-text-field\n        label=\"My variable\"\n        variant=\"outlined\"\n        v-model=\"msg.variable\"\n        @update:model-value=\"send({ variable: msg.variable })\"\n    ></v-text-field>\n</template>\n```\n\n---\n\n### **3. Set Global Variable**\n**Node Name**: `set global variable`  \n**Description**: Updates the global variable (`variable`) with the value entered in the UI text field.\n\n```javascript\n// Set a value in the global context\nglobal.set('variable', msg.variable);\n\nreturn msg;\n```\n\n---\n\n## Supporting Details\n\n- **UI Group**: `Value and payloads`  \n  Groups the widgets under a dashboard section for better organization.\n\n- **UI Page**: `Data in global.json`  \n  Displays the group on a dashboard page accessible via the `/data` URL.\n\n- **Theme**: `FairScope Theme`  \n  Configures the visual style of the dashboard, using a clean and modern design with primary and background colors.\n",
        "className": "",
        "x": 620,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "be327c38d0d4571c",
        "type": "ui-flowviewer",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "name": "",
        "group": "72483a7aac978971",
        "order": 1,
        "width": "0",
        "flow": "[     {         \"id\": \"5a9af1c11b3c3c31\",         \"type\": \"function\",         \"z\": \"775111265b9951a8\",         \"name\": \"get global variable\",         \"func\": \"// Retrieve the global variable\\nmsg.variable = global.get('variable');\\n\\nreturn msg;\\n\",         \"outputs\": 1,         \"timeout\": 0,         \"noerr\": 0,         \"initialize\": \"\",         \"finalize\": \"\",         \"libs\": [],         \"x\": 290,         \"y\": 40,         \"wires\": [             [                 \"bdef59faea812013\"             ]         ]     },     {         \"id\": \"bdef59faea812013\",         \"type\": \"ui-template\",         \"z\": \"775111265b9951a8\",         \"group\": \"9db62e7f60daa367\",         \"page\": \"\",         \"ui\": \"\",         \"name\": \"\",         \"order\": 2,         \"width\": \"6\",         \"height\": \"1\",         \"head\": \"\",         \"format\": \"<template>\\n    <v-text-field\\n        label=\\\"My variable\\\"\\n        variant=\\\"outlined\\\"\\n        v-model=\\\"msg.variable\\\"\\n      hide-details=\\\"auto\\\"\\n        @update:model-value=\\\"send({ variable: msg.variable})\\\"\\n    ></v-text-field>\\n</template>\\n\",         \"storeOutMessages\": true,         \"passthru\": true,         \"resendOnRefresh\": true,         \"templateScope\": \"local\",         \"className\": \"\",         \"x\": 520,         \"y\": 40,         \"wires\": [             [                 \"fc73d6b9b216ac9c\"             ]         ]     },     {         \"id\": \"fc73d6b9b216ac9c\",         \"type\": \"function\",         \"z\": \"775111265b9951a8\",         \"name\": \"set global variable\",         \"func\": \"// Set a value in the global context\\nglobal.set('variable', msg.variable);\\n\\nreturn msg;\\n\",         \"outputs\": 1,         \"timeout\": 0,         \"noerr\": 0,         \"initialize\": \"\",         \"finalize\": \"\",         \"libs\": [],         \"x\": 750,         \"y\": 40,         \"wires\": [             []         ]     },     {         \"id\": \"9db62e7f60daa367\",         \"type\": \"ui-group\",         \"name\": \"Get and set variable in Global\",         \"page\": \"69706da10df85266\",         \"width\": \"12\",         \"height\": \"1\",         \"order\": 1,         \"showTitle\": true,         \"className\": \"\",         \"visible\": \"true\",         \"disabled\": \"false\",         \"groupType\": \"default\"     },     {         \"id\": \"69706da10df85266\",         \"type\": \"ui-page\",         \"name\": \"Data in global.json\",         \"ui\": \"e6ae26617c24c3ea\",         \"path\": \"/data\",         \"icon\": \"mdi-database\",         \"layout\": \"grid\",         \"theme\": \"acdf17df5536b1d3\",         \"breakpoints\": [             {                 \"name\": \"Default\",                 \"px\": \"0\",                 \"cols\": \"3\"             },             {                 \"name\": \"Tablet\",                 \"px\": \"576\",                 \"cols\": \"6\"             },             {                 \"name\": \"Small Desktop\",                 \"px\": \"768\",                 \"cols\": \"9\"             },             {                 \"name\": \"Desktop\",                 \"px\": \"1024\",                 \"cols\": \"12\"             }         ],         \"order\": 2,         \"className\": \"\",         \"visible\": \"true\",         \"disabled\": \"false\"     },     {         \"id\": \"e6ae26617c24c3ea\",         \"type\": \"ui-base\",         \"name\": \"My Dashboard\",         \"path\": \"/dashboard\",         \"appIcon\": \"\",         \"includeClientData\": true,         \"acceptsClientConfig\": [             \"ui-notification\",             \"ui-control\"         ],         \"showPathInSidebar\": true,         \"showPageTitle\": false,         \"navigationStyle\": \"fixed\",         \"titleBarStyle\": \"fixed\",         \"showReconnectNotification\": true,         \"notificationDisplayTime\": \"1\",         \"showDisconnectNotification\": true     },     {         \"id\": \"acdf17df5536b1d3\",         \"type\": \"ui-theme\",         \"name\": \"FairScope Theme\",         \"colors\": {             \"surface\": \"#ffffff\",             \"primary\": \"#0094ce\",             \"bgPage\": \"#eeeeee\",             \"groupBg\": \"#ffffff\",             \"groupOutline\": \"#cccccc\"         },         \"sizes\": {             \"density\": \"default\",             \"pagePadding\": \"10px\",             \"groupGap\": \"10px\",             \"groupBorderRadius\": \"0px\",             \"widgetGap\": \"10px\"         }     } ]",
        "height": "0",
        "x": 590,
        "y": 1500,
        "wires": []
    },
    {
        "id": "54d6eeb38d467c03",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "group": "1c1efabff5115209",
        "page": "",
        "ui": "",
        "name": "template number field",
        "order": 1,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<template>\n <v-number-input\n          label=\"Volume of the collector\"\n          variant=\"outlined\"\n          :max=\"50\"\n          :min=\"10\"\n          :step=\"2\"\n          :model-value=\"30\"\n          control-variant=\"hidden\"\n          :precision=\"2\"\n          suffix=\"mL\"\n          clearable\n          hint=\"The volume of water collected after sampling, measured in milliliters (ml).\"\n        ></v-number-input>\n\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 180,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "48666748de82f1a9",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "group": "1c1efabff5115209",
        "name": "template number field",
        "order": 2,
        "width": "4",
        "height": "1",
        "content": "# Template hidden hint\n```html\n<template>\n <v-number-input\n          label=\"Volume of the collector\"\n          variant=\"outlined\"\n          :max=\"50\"\n          :min=\"10\"\n          :step=\"2\"\n          :model-value=\"30\"\n          control-variant=\"hidden\"\n          :precision=\"2\"\n          suffix=\"mL\"\n          clearable\n          hint=\"The volume of water collected after sampling, measured in milliliters (ml).\"\n        ></v-number-input>\n</template>\n\n```",
        "className": "",
        "x": 180,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "9c3c96530b96a5d1",
        "type": "ui-template",
        "z": "68f63f5275b147d3",
        "group": "f8b3bc50def91622",
        "page": "",
        "ui": "",
        "name": "Stream Pi Camera",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<center>\n  <img src=\"/ps/hal/camera/streams/preview.mjpg\"\n    alt=\"If you see this, there probably is an error either with your camera or with the python service. Please try restarting your machine.\"\n    width=\"100%\" height=\"100%\">\n</center>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "bca5fdb275411c2c",
        "type": "mqtt out",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 790,
        "y": 220,
        "wires": []
    },
    {
        "id": "e2f462edae65edea",
        "type": "inject",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "name": "Default: 2mL/min",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "7d9e940e0a76d817"
            ]
        ]
    },
    {
        "id": "8a5154c6b080da73",
        "type": "inject",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "name": "Default: 2mL",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "9c81667a4c9b050e"
            ]
        ]
    },
    {
        "id": "91bf1946ddb3fb46",
        "type": "ui-button",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "group": "ae84f28de970e590",
        "name": "Stop Pump",
        "label": "",
        "order": 3,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "stop",
        "iconPosition": "left",
        "payload": "{\"action\":\"stop\"}",
        "payloadType": "json",
        "topic": "actuator/pump",
        "topicType": "str",
        "buttonColor": "#AD1625",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "b7d4a1f82502ab3e"
            ]
        ]
    },
    {
        "id": "b7d4a1f82502ab3e",
        "type": "mqtt out",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "081ff493602c602a",
        "type": "ui-button",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "group": "ae84f28de970e590",
        "name": "Backward",
        "label": "",
        "order": 2,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "rotate-left",
        "iconPosition": "left",
        "payload": "BACKWARD",
        "payloadType": "str",
        "topic": "actuator/pump",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 340,
        "y": 200,
        "wires": [
            [
                "7be7d0f4f8091465"
            ]
        ]
    },
    {
        "id": "7be7d0f4f8091465",
        "type": "function",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "name": "pump",
        "func": "var manual_volume= global.get(\"pump_manual_volume\");\nvar flowrate= global.get(\"pump_flowrate\");\n\nif (manual_volume === undefined || manual_volume === \"\" || manual_volume === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Volume to pass\";\n    return [null, msg];\n}\nelse if (flowrate === undefined || flowrate === \"\" || flowrate === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Flowrate\";\n    return [null, msg];\n}\nelse {\n    msg.topic = \"actuator/pump\";\n    // msg.payload is FORWARD or BACKWARD here\n    msg.payload={\"action\":\"move\", \n                \"direction\":msg.payload,\n                \"volume\":manual_volume,\n                \"flowrate\":flowrate};\n}\nreturn [msg, null];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 220,
        "wires": [
            [
                "bca5fdb275411c2c"
            ],
            []
        ],
        "inputLabels": [
            "direction"
        ],
        "outputLabels": [
            "message",
            "error"
        ]
    },
    {
        "id": "04397b2484b470d5",
        "type": "ui-button",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "group": "ae84f28de970e590",
        "name": "Forward",
        "label": "",
        "order": 4,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "rotate-right",
        "iconPosition": "left",
        "payload": "FORWARD",
        "payloadType": "str",
        "topic": "actuator/pump",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 340,
        "y": 240,
        "wires": [
            [
                "7be7d0f4f8091465"
            ]
        ]
    },
    {
        "id": "7d9e940e0a76d817",
        "type": "ui-number-input",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "group": "ae84f28de970e590",
        "name": "pump_flowrate",
        "label": "Flowrate (ml/min)*",
        "order": 6,
        "width": "2",
        "height": "1",
        "topic": "pump_flowrate",
        "topicType": "str",
        "min": "1",
        "max": "40",
        "step": 1,
        "tooltip": "",
        "passthru": true,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "spinner": "default",
        "x": 360,
        "y": 300,
        "wires": [
            [
                "aa10a7441bf3a0c3"
            ]
        ]
    },
    {
        "id": "9c81667a4c9b050e",
        "type": "ui-number-input",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "group": "ae84f28de970e590",
        "name": "pump_manual_volume",
        "label": "Volume to pass (ml)*",
        "order": 5,
        "width": "2",
        "height": "1",
        "topic": "pump_manual_volume",
        "topicType": "str",
        "min": "1",
        "max": "40",
        "step": 1,
        "tooltip": "",
        "passthru": true,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "spinner": "default",
        "x": 380,
        "y": 340,
        "wires": [
            [
                "aa10a7441bf3a0c3"
            ]
        ]
    },
    {
        "id": "aa10a7441bf3a0c3",
        "type": "function",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "name": "set global",
        "func": "global.set(msg.topic,msg.payload);",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "fb1a7d1e12afbf61",
        "type": "ui-markdown",
        "z": "68f63f5275b147d3",
        "g": "351aed98aa7531c4",
        "group": "ae84f28de970e590",
        "name": "Pump",
        "order": 1,
        "width": 0,
        "height": 0,
        "content": "# Pump settings\n\n---\n",
        "className": "",
        "x": 110,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c9f8f2f7d2212740",
        "type": "function",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "name": "focus",
        "func": "var distance = global.get(\"focus_distance\");\nvar speed = global.get(\"focus_speed\");\n\nif (distance === undefined || distance === \"\" || distance === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Distance\";\n    return [null, msg]\n}\nif (speed === undefined || speed === \"\" || speed === null) {\n    msg.topic = \"Missing entry :\"\n    msg.payload = \"Speed\";\n    return [null, msg]\n}\n// msg.payload is UP or DOWN here\nmsg.payload={\"action\":\"move\", \n            \"direction\":msg.payload,\n            \"distance\":(distance/1000),\n            \"speed\": (speed/1000)\n};\nreturn [msg, null];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 540,
        "wires": [
            [
                "3994b52159965684"
            ],
            []
        ],
        "inputLabels": [
            "direction"
        ],
        "outputLabels": [
            "message",
            "error"
        ]
    },
    {
        "id": "868fd2a5b5a083db",
        "type": "inject",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "name": "Default: 500µm",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "500",
        "payloadType": "num",
        "x": 200,
        "y": 640,
        "wires": [
            [
                "747a73dd5151b3bb"
            ]
        ]
    },
    {
        "id": "678bf0eece4ac552",
        "type": "inject",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "name": "Default: 1000µm/s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "1000",
        "payloadType": "num",
        "x": 190,
        "y": 600,
        "wires": [
            [
                "869c5f15f4cc5845"
            ]
        ]
    },
    {
        "id": "58ed3f02a7d7e0e4",
        "type": "function",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "name": "set global",
        "func": "global.set(msg.topic,msg.payload);",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "dd23dcc3b10954ae",
        "type": "mqtt out",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 790,
        "y": 480,
        "wires": []
    },
    {
        "id": "872168aa279da8f7",
        "type": "ui-button",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "group": "ae84f28de970e590",
        "name": "Stop Focus",
        "label": "",
        "order": 9,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "stop",
        "iconPosition": "left",
        "payload": "{\"action\":\"stop\"}",
        "payloadType": "json",
        "topic": "actuator/focus",
        "topicType": "str",
        "buttonColor": "#AD1625",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 350,
        "y": 480,
        "wires": [
            [
                "dd23dcc3b10954ae"
            ]
        ]
    },
    {
        "id": "391d8cca2dc63aca",
        "type": "ui-button",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "group": "ae84f28de970e590",
        "name": "Up",
        "label": "",
        "order": 10,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "arrow-right-bold",
        "iconPosition": "left",
        "payload": "UP",
        "payloadType": "str",
        "topic": "actuator/focus",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 350,
        "y": 520,
        "wires": [
            [
                "c9f8f2f7d2212740"
            ]
        ]
    },
    {
        "id": "360e22bb264967c2",
        "type": "ui-button",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "group": "ae84f28de970e590",
        "name": "Down",
        "label": "",
        "order": 8,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "arrow-left-bold",
        "iconPosition": "left",
        "payload": "DOWN",
        "payloadType": "str",
        "topic": "actuator/focus",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 350,
        "y": 560,
        "wires": [
            [
                "c9f8f2f7d2212740"
            ]
        ]
    },
    {
        "id": "2730ffc2f82eed88",
        "type": "ui-markdown",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "group": "ae84f28de970e590",
        "name": "Focus",
        "order": 7,
        "width": 0,
        "height": 0,
        "content": "# Focus settings\n\n---\n",
        "className": "",
        "x": 110,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "3994b52159965684",
        "type": "mqtt out",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 790,
        "y": 540,
        "wires": []
    },
    {
        "id": "869c5f15f4cc5845",
        "type": "ui-number-input",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "group": "ae84f28de970e590",
        "name": "focus_speed",
        "label": "Focus Speed (in µm/sec)",
        "order": 12,
        "width": "2",
        "height": "1",
        "topic": "focus_speed",
        "topicType": "str",
        "min": "1000",
        "max": "5000",
        "step": "100",
        "tooltip": "",
        "passthru": true,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "spinner": "default",
        "x": 370,
        "y": 600,
        "wires": [
            [
                "58ed3f02a7d7e0e4"
            ]
        ]
    },
    {
        "id": "747a73dd5151b3bb",
        "type": "ui-number-input",
        "z": "68f63f5275b147d3",
        "g": "d331e690efb7d6e9",
        "group": "ae84f28de970e590",
        "name": "focus_distance",
        "label": "Focus Distance (in µm)",
        "order": 11,
        "width": "2",
        "height": "1",
        "topic": "focus_distance",
        "topicType": "str",
        "min": "25",
        "max": "10000",
        "step": "25",
        "tooltip": "",
        "passthru": true,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "spinner": "default",
        "x": 380,
        "y": 640,
        "wires": [
            [
                "58ed3f02a7d7e0e4"
            ]
        ]
    },
    {
        "id": "50cb535cd51f7270",
        "type": "mqtt out",
        "z": "68f63f5275b147d3",
        "g": "69f91f750b49fcab",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 790,
        "y": 800,
        "wires": []
    },
    {
        "id": "25f508676747b988",
        "type": "ui-switch",
        "z": "68f63f5275b147d3",
        "g": "69f91f750b49fcab",
        "name": "LED",
        "label": "LED",
        "group": "ae84f28de970e590",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": false,
        "topic": "light",
        "topicType": "str",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "switch",
        "onvalue": "{\"action\":\"on\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"action\":\"off\"}",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 330,
        "y": 800,
        "wires": [
            [
                "50cb535cd51f7270"
            ]
        ]
    },
    {
        "id": "dba284710f71897e",
        "type": "ui-markdown",
        "z": "68f63f5275b147d3",
        "g": "69f91f750b49fcab",
        "group": "ae84f28de970e590",
        "name": "LED",
        "order": 13,
        "width": 0,
        "height": 0,
        "content": "# LED settings\n\n---\n",
        "className": "",
        "x": 110,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "23a52935692ecb49",
        "type": "mqtt out",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 790,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b09174ffcc9250a0",
        "type": "ui-markdown",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "group": "ae84f28de970e590",
        "name": "Camera",
        "order": 15,
        "width": 0,
        "height": 0,
        "content": "# Camera settings\n\n---\n",
        "className": "",
        "x": 120,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "746c989af736cb33",
        "type": "ui-slider",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "group": "ae84f28de970e590",
        "name": "",
        "label": "red",
        "tooltip": "",
        "order": 17,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "red",
        "topicType": "str",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "1",
        "max": "5",
        "step": "0.05",
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 350,
        "y": 940,
        "wires": [
            [
                "7da6b39ccb75384c"
            ]
        ]
    },
    {
        "id": "7da6b39ccb75384c",
        "type": "function",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "name": "gain",
        "func": "msg.payload = {\n    \"action\":\"settings\", \n    \"settings\":{\"white_balance_gain\":{\n        [msg.topic]:Math.round(msg.payload*100)\n        }\n    }\n}\nmsg.topic = \"imager/image\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 960,
        "wires": [
            [
                "66756e43efce9726"
            ]
        ]
    },
    {
        "id": "2451da81a82f7915",
        "type": "ui-slider",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "group": "ae84f28de970e590",
        "name": "",
        "label": "blue",
        "tooltip": "",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "blue",
        "topicType": "str",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "1",
        "max": "5",
        "step": "0.05",
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 350,
        "y": 980,
        "wires": [
            [
                "7da6b39ccb75384c"
            ]
        ]
    },
    {
        "id": "66756e43efce9726",
        "type": "mqtt out",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 790,
        "y": 960,
        "wires": []
    },
    {
        "id": "ac01daf9daeecf2a",
        "type": "ui-slider",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "group": "ae84f28de970e590",
        "name": "ISO",
        "label": "ISO",
        "tooltip": "",
        "order": 18,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "iso",
        "topicType": "str",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "50",
        "max": "500",
        "step": "50",
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 350,
        "y": 1060,
        "wires": [
            [
                "4441ba5d435ed9d7"
            ]
        ]
    },
    {
        "id": "4441ba5d435ed9d7",
        "type": "function",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "name": "settings",
        "func": "msg.payload = {\n    \"action\":\"settings\", \n    \"settings\":{[msg.topic]:msg.payload}\n}\n\nmsg.topic = \"imager/image\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1060,
        "wires": [
            [
                "23a52935692ecb49"
            ]
        ]
    },
    {
        "id": "030373d0c2e162e1",
        "type": "inject",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "name": "Default: ISO 150",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "150",
        "payloadType": "num",
        "x": 170,
        "y": 1060,
        "wires": [
            [
                "ac01daf9daeecf2a"
            ]
        ]
    },
    {
        "id": "7cf9eaa2eb0776bf",
        "type": "ui-slider",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "group": "ae84f28de970e590",
        "name": "Shutter Speed",
        "label": "Shutter Speed",
        "tooltip": "",
        "order": 19,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "shutter_speed",
        "topicType": "str",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "125",
        "max": "300",
        "step": "10",
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 380,
        "y": 1120,
        "wires": [
            [
                "4441ba5d435ed9d7"
            ]
        ]
    },
    {
        "id": "fe63985e284437cd",
        "type": "inject",
        "z": "68f63f5275b147d3",
        "g": "239ace7a73b8b6df",
        "name": "Default: 125µs",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "125",
        "payloadType": "num",
        "x": 180,
        "y": 1120,
        "wires": [
            [
                "7cf9eaa2eb0776bf"
            ]
        ]
    },
    {
        "id": "495e1733d60d5651",
        "type": "switch",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "light",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "actuator/pump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "imager/image/update_config",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "imager/image/image",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "segmenter/segment",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "restart/hardware_controller",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "restart/segmenter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "restart/planktoscope",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "purge",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 350,
        "y": 160,
        "wires": [
            [
                "1c782af30d1ff770",
                "67bcd7bd5a4c38cc"
            ],
            [
                "1c782af30d1ff770",
                "67bcd7bd5a4c38cc"
            ],
            [
                "0fdba9b9b11427db"
            ],
            [
                "8dc5b8c9bfd7cc87"
            ],
            [
                "019662c5bf05e430"
            ],
            [
                "5f5dec5ac53119ae"
            ],
            [
                "61dde05d9a3f805e"
            ],
            [
                "2a55ae214f1e7273"
            ],
            [
                "8447c9830c3aed1e"
            ]
        ]
    },
    {
        "id": "0fdba9b9b11427db",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "update_config command",
        "func": "const now = new Date();\n\nmsg.topic = \"imager/image\";\n\nconst pad = (n) => n.toString().padStart(2, '0');\n\nlet formattedDate = `${now.getUTCFullYear()}_${pad(now.getUTCMonth() + 1)}_${pad(now.getUTCDate())}_${pad(now.getUTCHours())}_${pad(now.getUTCMinutes())}_${pad(now.getUTCSeconds())}`;\n\nglobal.set(\"path\", `${now.toISOString().split('T')[0]}/S1/${formattedDate}`);\n\nmsg.payload = {\n    \"action\": \"update_config\",\n    \"config\": {\n        \"sample_project\": \"FairScope_TenEarth\",\n        \"sample_id\": \"S1\",\n        \"sample_operator\": \"Fairscope\",\n        \"sample_instrument\": \"PlanktoScope v2.6\",\n        \"sample_date\": now.toISOString().split('T')[0],\n        \"acq_id\": formattedDate,\n        \"acq_instrument\": \"PlanktoScope v2.6\",\n        \"acq_magnification\": \"1.2\",\n        \"acq_software\": \"PlanktoScope v2024.0.0-alpha.1\",\n        \"acq_resolution\": \"1080p\",\n        \"acq_time_between_frames\": 0.1,\n        \"acq_minimum_mesh\": 20,\n        \"acq_maximum_mesh\": 300,\n        \"acq_min_esd\": 20,\n        \"acq_max_esd\": 300,\n        \"acq_camera_name\": \"HQ Camera\",\n        \"process_pixel\": 0.75,\n        \"acq_local_datetime\": now.toISOString().split('.')[0] + 'Z',\n        \"object_date\": now.toISOString().split('T')[0],\n        \"object_time\": now.toISOString().split('T')[1].split('.')[0] + 'Z',\n        \"object_lat\": 48.587424697483556,\n        \"object_lon\": -3.8382606493497824\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 180,
        "wires": [
            [
                "1c782af30d1ff770",
                "67bcd7bd5a4c38cc"
            ]
        ]
    },
    {
        "id": "019662c5bf05e430",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "segment command",
        "func": "msg.payload = {\n  \"action\": \"segment\",\n  \"path\": global.get(\"path\"),\n  \"settings\": {\n    \"force\": false,\n    \"recursive\": true,\n    \"ecotaxa\": true,\n    \"keep\": true\n  }\n}\n\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 260,
        "wires": [
            [
                "1c782af30d1ff770",
                "67bcd7bd5a4c38cc"
            ]
        ]
    },
    {
        "id": "8dc5b8c9bfd7cc87",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "image command",
        "func": "msg.topic = \"imager/image\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 220,
        "wires": [
            [
                "1c782af30d1ff770",
                "67bcd7bd5a4c38cc"
            ]
        ]
    },
    {
        "id": "1c782af30d1ff770",
        "type": "mqtt out",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 1270,
        "y": 100,
        "wires": []
    },
    {
        "id": "caf377d323526d14",
        "type": "mqtt in",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "name": "",
        "topic": "status/#",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 100,
        "y": 800,
        "wires": [
            [
                "ff83a2795f988098"
            ]
        ]
    },
    {
        "id": "316dae6f231575b7",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "name": "Count objects segmented",
        "func": "var objectCount = global.get('objectCount') || 0;\n\nif (msg.payload.status === 'Done') {\n    msg.payload.objectCount = objectCount;\n    objectCount=0;\n    }\nelse if (msg.topic === 'status/segmenter/metric') {\n    objectCount++;\n}\n\nglobal.set('objectCount', objectCount);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 860,
        "wires": [
            [
                "9e169af039fc8031"
            ]
        ]
    },
    {
        "id": "9e169af039fc8031",
        "type": "switch",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "name": "msg.payload.metadata.equivalent_diameter is not null",
        "property": "payload.metadata.equivalent_diameter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 880,
        "y": 860,
        "wires": [
            [
                "50629a570b41196e"
            ]
        ]
    },
    {
        "id": "1bc303a19fc9e38b",
        "type": "ui-template",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "7edf5f14f6ca0bdd",
        "page": "",
        "ui": "",
        "name": "Stream Pi Camera",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<center>\n  <img src=\"/ps/hal/camera/streams/preview.mjpg\"\n    alt=\"If you see this, there probably is an error either with your camera or with the python service. Please try restarting your machine.\"\n    width=\"100%\" height=\"100%\">\n</center>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "ff83a2795f988098",
        "type": "switch",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status/segmenter/metric",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 860,
        "wires": [
            [
                "316dae6f231575b7"
            ]
        ]
    },
    {
        "id": "fd3ae27267703c27",
        "type": "ui-chart",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "",
        "label": "Histogram - Equivalent Diameter",
        "order": 4,
        "chartType": "histogram",
        "category": "Equivalent Diameter (μm)",
        "categoryType": "str",
        "xAxisLabel": "Equivalent Diameter (μm)",
        "xAxisProperty": "payload.metadata.equivalent_diameter",
        "xAxisPropertyType": "msg",
        "xAxisType": "bins",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "20",
        "xmax": "100",
        "yAxisLabel": "Abundance",
        "yAxisProperty": "payload.metadata.equivalent_diameter",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": "80",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "removeOlderPoints": "",
        "colors": [
            "#00ff04",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1660,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "5f5dec5ac53119ae",
        "type": "exec",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "command": "sudo systemctl restart planktoscope-org.device-backend.controller-planktoscopehat.service",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart hardware controller",
        "x": 640,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "61dde05d9a3f805e",
        "type": "exec",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "command": "docker restart apps_ps_backend_proc-segmenter-server-1",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart segmenter",
        "x": 610,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "527165cd7171fe26",
        "type": "ui-template",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "7edf5f14f6ca0bdd",
        "page": "",
        "ui": "",
        "name": "Actions Clock",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div class=\"clock-container\">\n        <canvas ref=\"clockCanvas\"></canvas>\n        <div class=\"legend\">\n            <div v-for=\"event in events\" :key=\"event.label\" class=\"legend-item\">\n                <span :style=\"{ backgroundColor: event.color }\" class=\"color-box\"></span>\n                {{ event.label }}\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            events: [\n                { start: 35, end: 36, label: \"Pump dead volume\", color: \"rgba(255, 0, 0, 0.3)\" },\n                { start: 36, end: 40, label: \"Acquisition\", color: \"rgba(0, 255, 0, 0.3)\" },\n                { start: 45, end: 8, label: \"Segmentation\", color: \"rgba(0, 0, 255, 0.3)\" },\n                { start: 18, end: 19, label: \"Purge data\", color: \"rgba(255, 0, 0, 0.3)\" },\n                { start: 34, end: 35, label: \"Agitation\", color: \"rgba(255, 255, 0, 0.3)\" },\n                { start: 25, end: 26, label: \"Restart segmenter\", color: \"rgba(255, 0, 255, 0.3)\" },\n                { start: 30, end: 31, label: \"Restart hardware controller\", color: \"rgba(0, 255, 255, 0.3)\" }\n            ],\n            currentMinute: null,\n            clockRadius: 100\n        };\n    },\n    mounted() {\n        this.updateClock();\n        setInterval(this.updateClock, 1000);\n    },\n    methods: {\n        updateClock() {\n            const now = new Date();\n            this.currentMinute = now.getMinutes() + now.getSeconds() / 60;\n            this.drawClock();\n        },\n        drawClock() {\n            const canvas = this.$refs.clockCanvas;\n            const ctx = canvas.getContext(\"2d\");\n            const size = this.clockRadius * 2;\n            canvas.width = size;\n            canvas.height = size;\n            ctx.clearRect(0, 0, size, size);\n            ctx.translate(this.clockRadius, this.clockRadius);\n\n            // Draw circle\n            ctx.beginPath();\n            ctx.arc(0, 0, this.clockRadius, 0, 2 * Math.PI);\n            ctx.stroke();\n\n            // Draw minute marks\n            for (let i = 0; i < 60; i += 10) {\n                const angle = (i / 60) * 2 * Math.PI - Math.PI / 2;\n                const x1 = Math.cos(angle) * (this.clockRadius - 5);\n                const y1 = Math.sin(angle) * (this.clockRadius - 5);\n                const x2 = Math.cos(angle) * (this.clockRadius - 15);\n                const y2 = Math.sin(angle) * (this.clockRadius - 15);\n                ctx.strokeStyle = \"black\";\n                ctx.lineWidth = 2;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.lineTo(x2, y2);\n                ctx.stroke();\n            }\n\n            // Draw event periods with colors\n            this.events.forEach(event => {\n                let startAngle = (event.start / 60) * 2 * Math.PI - Math.PI / 2;\n                let endAngle = (event.end / 60) * 2 * Math.PI - Math.PI / 2;\n                ctx.fillStyle = event.color;\n                ctx.beginPath();\n                ctx.moveTo(0, 0);\n                ctx.arc(0, 0, this.clockRadius - 10, startAngle, endAngle);\n                ctx.lineTo(0, 0);\n                ctx.fill();\n            });\n\n            // Draw current time hand\n            const angle = (this.currentMinute / 60) * 2 * Math.PI - Math.PI / 2;\n            const x = Math.cos(angle) * (this.clockRadius - 15);\n            const y = Math.sin(angle) * (this.clockRadius - 15);\n            ctx.strokeStyle = \"black\";\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n            ctx.lineTo(x, y);\n            ctx.stroke();\n        }\n    }\n};\n</script>\n\n<style scoped>\n.clock-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\ncanvas {\n    margin-right: 20px;\n}\n\n.legend {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n}\n\n.legend-item {\n    display: flex;\n    align-items: center;\n    margin: 5px 0;\n}\n\n.color-box {\n    width: 15px;\n    height: 15px;\n    margin-right: 5px;\n    border-radius: 3px;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "50629a570b41196e",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "name": "convert px to um",
        "func": "// Conversion factor from pixels to micrometers (µm)\nconst px_to_um = 0.75;\n\n// Convert relevant measurements\nmsg.payload.metadata.equivalent_diameter = Math.round(msg.payload.metadata.equivalent_diameter * px_to_um);\nmsg.payload.metadata.width = Math.round(msg.payload.metadata.width * px_to_um);\nmsg.payload.metadata.height = Math.round(msg.payload.metadata.height * px_to_um);\nmsg.payload.metadata.area = Math.round(msg.payload.metadata.area * (px_to_um ** 2)); // Area is in square units\nmsg.payload.metadata.area_exc = Math.round(msg.payload.metadata.area_exc * (px_to_um ** 2));\nmsg.payload.metadata.convex_area = Math.round(msg.payload.metadata.convex_area * (px_to_um ** 2));\nmsg.payload.metadata.major = Math.round(msg.payload.metadata.major * px_to_um);\nmsg.payload.metadata.minor = Math.round(msg.payload.metadata.minor * px_to_um);\nmsg.payload.metadata.perim = Math.round(msg.payload.metadata[\"perim.\"] * px_to_um); // Ensure proper key reference\nmsg.payload.metadata.bounding_box_area = Math.round(msg.payload.metadata.bounding_box_area * (px_to_um ** 2));\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 860,
        "wires": [
            [
                "fd3ae27267703c27",
                "60d1ad2a7e54e60e",
                "1997fd46811f0331",
                "5f091b11b5c9fa40",
                "0650e037776b3d8a"
            ]
        ]
    },
    {
        "id": "0aef9a09d59e574c",
        "type": "ui-markdown",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "Histogram of equivalent_diameter",
        "order": 5,
        "width": "3",
        "height": "6",
        "content": "### Distribution of Object Sizes  \nUnderstanding the size distribution of planktonic objects helps identify dominant size classes and detect anomalies. A skewed distribution might indicate specific biological trends, such as a bloom of a particular species or a technical issue in the acquisition process.  \n\n*In the graph:*  \n- A **peak in smaller sizes** suggests dominance of tiny plankton.  \n- A **broad distribution** indicates a mix of various size classes.  \n- A **skewed or bimodal pattern** may reflect biological or technical factors (e.g., species-specific blooms or imaging biases).\n",
        "className": "",
        "x": 1660,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "a9701575d8df4ce1",
        "type": "ui-markdown",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "elongation vs. area",
        "order": 8,
        "width": "3",
        "height": "6",
        "content": "### Relationship Between Elongation and Object Area  \nThis scatter plot helps assess whether larger objects tend to be more elongated or compact. Certain plankton species have characteristic shapes, and identifying correlations between elongation and area can aid in distinguishing different taxa or understanding morphological variability.  \n\n*In the graph:*  \n- **Top-right**: Large and highly elongated objects (e.g., filamentous plankton).  \n- **Bottom-right**: Small but highly elongated objects (e.g., thin needle-like forms). \n- **Top-left**: Large but compact objects (e.g., rounded or clustered plankton). \n- **Bottom-left**: Small and compact objects (e.g., spherical or short structures).",
        "className": "",
        "x": 1610,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "60d1ad2a7e54e60e",
        "type": "ui-chart",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "elongation vs. area",
        "label": "elongation vs. area",
        "order": 7,
        "chartType": "scatter",
        "category": "elongation vs. area",
        "categoryType": "str",
        "xAxisLabel": "elongation (ratio of major to minor axis)",
        "xAxisProperty": "payload.metadata.elongation",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "area (μm²)",
        "yAxisProperty": "payload.metadata.area",
        "yAxisPropertyType": "msg",
        "ymin": "300",
        "ymax": "1500",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#ff0088",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1610,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "f8df009e737eb044",
        "type": "ui-markdown",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "equivalent_diameter vs. MeanValue",
        "order": 11,
        "width": "3",
        "height": "6",
        "content": "### Variation of Mean Brightness with Equivalent Diameter  \nThis graph explores whether larger objects tend to be brighter or darker. This can reveal differences in pigmentation, transparency, or even imaging inconsistencies.  \n\n*In the graph:*   \n- **Top-right**: Large and bright objects.\n- **Top-left**: Small and bright objects.\n- **Bottom-right**: Large and dark objects.\n- **Bottom-left**: Small and dark objects.  ",
        "className": "",
        "x": 1660,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "e6eb3b16a1d6bf22",
        "type": "ui-markdown",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "MeanSaturation vs. MeanValue",
        "order": 15,
        "width": "3",
        "height": "6",
        "content": "### Relationship Between Mean Saturation and Mean Brightness\nThis visualization helps understand how color properties vary with brightness. Some plankton groups exhibit distinct coloration, and saturation could be a useful feature for classification. A strong trend might suggest systematic differences in pigmentation or optical properties across plankton groups.\n\n*In the graph:*  \n- **Top-right**: Bright and highly saturated objects (vivid colors).  \n- **Top-left**: Bright but low-saturation objects (pale or near-white).  \n- **Bottom-right**: Dark but highly saturated objects (deep, rich colors).  \n- **Bottom-left**: Dark and low-saturation objects (grayish or faintly colored).",
        "className": "",
        "x": 1650,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "1997fd46811f0331",
        "type": "ui-chart",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "equivalent_diameter vs. MeanValue",
        "label": "equivalent_diameter vs. MeanValue",
        "order": 10,
        "chartType": "scatter",
        "category": "equivalent_diameter vs. MeanValue",
        "categoryType": "str",
        "xAxisLabel": "Equivalent Diameter (μm)",
        "xAxisProperty": "payload.metadata.equivalent_diameter",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "MeanValue (0–255, grayscale value)",
        "yAxisProperty": "payload.metadata.MeanValue",
        "yAxisPropertyType": "msg",
        "ymin": "150",
        "ymax": "255",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#8c00ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1660,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "5f091b11b5c9fa40",
        "type": "ui-chart",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "MeanSaturation vs. MeanValue",
        "label": "MeanSaturation vs. MeanValue",
        "order": 13,
        "chartType": "scatter",
        "category": "MeanSaturation vs. MeanValue",
        "categoryType": "str",
        "xAxisLabel": "MeanSaturation (%)",
        "xAxisProperty": "payload.metadata.MeanSaturation",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "MeanValue (0–255, grayscale value)",
        "yAxisProperty": "payload.metadata.MeanValue",
        "yAxisPropertyType": "msg",
        "ymin": "150",
        "ymax": "255",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#ff9500",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1650,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "b17728471bdfc61e",
        "type": "ui-template",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "group": "7edf5f14f6ca0bdd",
        "page": "",
        "ui": "",
        "name": "Table",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<table border=\"1\" style=\"width:100%; text-align:center;\">\n    <tr>\n        <th>Topic</th>\n        <th>Action</th>\n        <th>Status</th>\n    </tr>\n    <tr>\n        <td>light</td>\n        <td>{{msg.payload.light.action}}</td>\n        <td>{{msg.payload.light.status}}</td>\n    </tr>\n    <tr>\n        <td>actuator/pump</td>\n        <td>{{msg.payload[\"actuator/pump\"].action}}</td>\n        <td>{{msg.payload[\"actuator/pump\"].status}}</td>\n    </tr>\n    <tr>\n        <td>imager/image</td>\n        <td>{{msg.payload[\"imager/image\"].action}}</td>\n        <td>{{msg.payload[\"imager/image\"].status}}</td>\n    </tr>\n    <tr>\n        <td>segmenter/segment</td>\n        <td>{{msg.payload[\"segmenter/segment\"].action}}</td>\n        <td>{{msg.payload[\"segmenter/segment\"].status}}</td>\n    </tr>\n</table>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1330,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "e4719fcedaa61149",
        "type": "switch",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status/light",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/pump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/imager",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/segmenter",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 770,
        "y": 540,
        "wires": [
            [
                "67bcd7bd5a4c38cc"
            ],
            [
                "67bcd7bd5a4c38cc"
            ],
            [
                "67bcd7bd5a4c38cc"
            ],
            [
                "67bcd7bd5a4c38cc"
            ]
        ]
    },
    {
        "id": "9301eaa353ece507",
        "type": "mqtt in",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "",
        "topic": "status/#",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 300,
        "y": 540,
        "wires": [
            [
                "e4719fcedaa61149"
            ]
        ]
    },
    {
        "id": "67bcd7bd5a4c38cc",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "save current actions & status",
        "func": "// Récupérer les données précédentes stockées dans le flow context\nvar storedData = flow.get(\"deviceData\") || {\n    light: { action: \"\", status: \"\" },\n    \"actuator/pump\": { action: \"\", status: \"\" },\n    \"imager/image\": { action: \"\", status: \"\" },\n    \"segmenter/segment\": { action: \"\", status: \"\" }\n};\n\n// Mettre à jour les valeurs en fonction du topic reçu\nif (msg.topic === \"light\") {\n    storedData.light.action = msg.payload.action;\n} else if (msg.topic === \"status/light\") {\n    storedData.light.status = msg.payload.status;\n} else if (msg.topic === \"actuator/pump\") {\n    storedData[\"actuator/pump\"].action = msg.payload;\n} else if (msg.topic === \"status/pump\") {\n    storedData[\"actuator/pump\"].status = msg.payload.status;\n} else if (msg.topic === \"imager/image\") {\n    storedData[\"imager/image\"].action = msg.payload.action;\n} else if (msg.topic === \"status/imager\") {\n    storedData[\"imager/image\"].status = msg.payload.status;\n} else if (msg.topic === \"segmenter/segment\") {\n    storedData[\"segmenter/segment\"].action = msg.payload.action;\n} else if (msg.topic === \"status/segmenter\") {\n    storedData[\"segmenter/segment\"].status = msg.payload.status;\n}\n\n// Sauvegarder les nouvelles valeurs\nflow.set(\"deviceData\", storedData);\n\n// Attacher les données mises à jour au message\nmsg.payload = storedData;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 320,
        "wires": [
            [
                "b17728471bdfc61e"
            ]
        ]
    },
    {
        "id": "2a55ae214f1e7273",
        "type": "exec",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "command": "sudo reboot now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart PlanktoScope",
        "x": 620,
        "y": 440,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "18a7624f3ce50b88",
        "type": "exec",
        "z": "83b2474231efac73",
        "g": "93ddbf84de2d9329",
        "command": "echo -n \"[\"; first=1; for f in data/export/ecotaxa/ecotaxa_*.zip; do ts=$(basename \"$f\" | sed -E 's/ecotaxa_([0-9]{4})_([0-9]{2})_([0-9]{2})_([0-9]{2})_([0-9]{2})_([0-9]{2})\\.zip/\\1-\\2-\\3 \\4:\\5:\\6/'); ts_ms=$(date -d \"$ts\" +%s000); sz=$(stat -c%s \"$f\"); [ $first -eq 1 ] && first=0 || echo -n \",\"; echo -n \"{\\\"myTime\\\":$ts_ms,\\\"size\\\":$sz}\"; done; echo \"]\"",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Get IMG Counts",
        "x": 380,
        "y": 1260,
        "wires": [
            [
                "f5775e188cdc7044"
            ],
            [],
            []
        ]
    },
    {
        "id": "f5775e188cdc7044",
        "type": "json",
        "z": "83b2474231efac73",
        "g": "93ddbf84de2d9329",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 1260,
        "wires": [
            [
                "8a8548667bffc918"
            ]
        ]
    },
    {
        "id": "8a8548667bffc918",
        "type": "split",
        "z": "83b2474231efac73",
        "g": "93ddbf84de2d9329",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 710,
        "y": 1260,
        "wires": [
            [
                "b252475c605ebbbe"
            ]
        ]
    },
    {
        "id": "b252475c605ebbbe",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "93ddbf84de2d9329",
        "name": "Convert to nb per ml",
        "func": "\n// Ajouter la concentration au message\nmsg.payload.concentration_nb_per_mL = msg.payload.size;\n\n// Retourner le message mis à jour\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1260,
        "wires": [
            [
                "4e3b5bdeec6a0be0"
            ]
        ]
    },
    {
        "id": "4e3b5bdeec6a0be0",
        "type": "ui-template",
        "z": "83b2474231efac73",
        "g": "93ddbf84de2d9329",
        "group": "4a8738206c62b02e",
        "page": "",
        "ui": "",
        "name": "Cell abundance",
        "order": 1,
        "width": "6",
        "height": "6",
        "head": "",
        "format": "<template>\n    <div id=\"chart-container\">\n        <canvas id=\"canvas_1\" ref=\"chart\"></canvas>\n    </div>\n</template>\n\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n\n<script>\n    export default {\n        mounted() {\n            // register a listener for incoming data\n            this.$socket.on('msg-input:' + this.id, this.onInput);\n\n            // check with ChartJS has loaded\n            let interval = setInterval(() => {\n                if (window.Chart) {\n                    clearInterval(interval);\n                    this.draw();\n                }\n            }, 100);\n        },\n        methods: {\n            draw() {\n                // get reference to the <canvas /> element\n                const ctx = this.$refs.chart;\n                \n                // Render the chart\n                const chart = new Chart(ctx, {\n                    type: 'line',\n                    data: {\n                        datasets: [{\n                            label: \"Cell abundance\",\n                            data: []\n                        }]\n                    },\n                    options: {\n                        animation: false,\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                            x: {\n                                type: 'time',\n                                title: {\n                                    display: true,\n                                    text: 'Time'\n                                }\n                            },\n                            y: {\n                                title: {\n                                    display: true,\n                                    text: 'Concentration (cells/mL)'\n                                }\n                            }\n                        },\n                        parsing: {\n                            xAxisKey: 'time',\n                            yAxisKey: 'value'\n                        },\n                        plugins: {\n                            legend: {\n                                position: 'top',\n                            },\n                            title: {\n                                display: true,\n                                text: 'Cell Abundance per mL'\n                            }\n                        }   \n                    },\n                });\n                this.chart = chart;\n            },\n            onInput(msg) {\n                this.chart.data.datasets[0].data.push({\n                    time: msg.payload.myTime,\n                    value: msg.payload.concentration_nb_per_mL\n                }); \n                this.chart.update();      \n            }\n        }\n    }\n</script>\n\n<style scoped>\n#chart-container {\n    width: 100%;\n    height: 400px;\n    position: relative;\n}\n#canvas_1 {\n    width: 100% !important;\n    height: 100% !important;\n}\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1080,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "46278c30b8d8f8c2",
        "type": "ui-button",
        "z": "83b2474231efac73",
        "g": "93ddbf84de2d9329",
        "group": "4a8738206c62b02e",
        "name": "",
        "label": "Load the plot (give it 5 sec)",
        "order": 2,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 160,
        "y": 1260,
        "wires": [
            [
                "18a7624f3ce50b88"
            ]
        ]
    },
    {
        "id": "0650e037776b3d8a",
        "type": "ui-chart",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "x vs. y",
        "label": "x vs. y",
        "order": 14,
        "chartType": "scatter",
        "category": "x vs. y",
        "categoryType": "str",
        "xAxisLabel": "x",
        "xAxisProperty": "payload.metadata.x",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "y",
        "yAxisProperty": "payload.metadata.y",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#2b00ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1570,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "8447c9830c3aed1e",
        "type": "exec",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "command": "rm -rf data/img/* data/clean/* data/objects/*",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Purge data",
        "x": 590,
        "y": 500,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a197bfa71c1761b4",
        "type": "cronplus",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "purge",
                "topic": "purge",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 18 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule9",
                "topic": "restart/planktoscope",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 20 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "restart_segmenter",
                "topic": "restart/segmenter",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 25 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "restart_hardware_controller",
                "topic": "restart/hardware_controller",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 30 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "light_on",
                "topic": "light",
                "payloadType": "json",
                "payload": "{\"action\": \"on\"}",
                "expressionType": "cron",
                "expression": "0 35 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "update_config",
                "topic": "imager/image/update_config",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "1 35 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "pump",
                "topic": "actuator/pump",
                "payloadType": "json",
                "payload": "{\"action\": \"move\",\"direction\": \"FORWARD\",\"volume\": 3,\"flowrate\": 30}",
                "expressionType": "cron",
                "expression": "2 35 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "image",
                "topic": "imager/image/image",
                "payloadType": "json",
                "payload": "{\"action\": \"image\",\"pump_direction\": \"FORWARD\",\"volume\": 0.008,\"nb_frame\": 200,\"sleep\": 0.1}",
                "expressionType": "cron",
                "expression": "0 36 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "light_off",
                "topic": "light",
                "payloadType": "json",
                "payload": "{\"action\": \"off\"}",
                "expressionType": "cron",
                "expression": "0 45 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "segment",
                "topic": "segmenter/segment",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "1 45 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 100,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e1_token_login",
        "type": "inject",
        "z": "8555b76c53e789e0",
        "name": "1️⃣ Lancer import",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "e2_credentials"
            ]
        ]
    },
    {
        "id": "e2_credentials",
        "type": "function",
        "z": "8555b76c53e789e0",
        "name": "Identifiants",
        "func": "msg.payload = {\n  username: \"thibaut@fairscope.com\",\n  password: \"XXXX\"\n};\nmsg.headers = {\"Content-Type\": \"application/json\"};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 140,
        "wires": [
            [
                "e3_login"
            ]
        ]
    },
    {
        "id": "e3_login",
        "type": "http request",
        "z": "8555b76c53e789e0",
        "name": "Login EcoTaxa",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://ecotaxa.obs-vlfr.fr/api/login",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 520,
        "y": 140,
        "wires": [
            [
                "e4_save_token",
                "43bc1cea309904dc"
            ]
        ]
    },
    {
        "id": "e4_save_token",
        "type": "function",
        "z": "8555b76c53e789e0",
        "name": "Stocker token",
        "func": "flow.set(\"token\", msg.payload.token);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 140,
        "wires": [
            [
                "e5_read_file"
            ]
        ]
    },
    {
        "id": "e5_read_file",
        "type": "file in",
        "z": "8555b76c53e789e0",
        "name": "Lire .zip",
        "filename": "/home/pi/data/export/ecotaxa/ecotaxa_2025_04_09_15_35_01.zip",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": true,
        "allProps": false,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "e6_prepare_upload",
                "4c3781d1bca2a493"
            ]
        ]
    },
    {
        "id": "e6_prepare_upload",
        "type": "function",
        "z": "8555b76c53e789e0",
        "name": "Préparer PUT",
        "func": "msg.headers = {\n  \"Authorization\": \"Bearer \" + flow.get(\"token\"),\n  \"Content-Type\": \"application/zip\"\n};\nmsg.method = \"PUT\";\nmsg.url = \"https://ecotaxa.obs-vlfr.fr/api/file_import/FairScope/ecotaxa_Projects_name_1_1.zip\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 280,
        "wires": [
            [
                "e7_upload_zip"
            ]
        ]
    },
    {
        "id": "e7_upload_zip",
        "type": "http request",
        "z": "8555b76c53e789e0",
        "name": "PUT vers EcoTaxa",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 280,
        "wires": [
            [
                "e8_post_import",
                "e10f1a376d0e056a"
            ]
        ]
    },
    {
        "id": "e8_post_import",
        "type": "function",
        "z": "8555b76c53e789e0",
        "name": "Préparer POST import",
        "func": "msg.headers = {\n  \"Authorization\": \"Bearer \" + flow.get(\"token\"),\n  \"Content-Type\": \"application/json\"\n};\nmsg.payload = {\n  source_path: \"FairScope/ecotaxa_2025_03_12_14_35_01.zip\",\n  taxo_mappings: {\n    \"23444\": 76543\n  },\n  skip_loaded_files: false,\n  skip_existing_objects: false,\n  update_mode: \"Yes\"\n};\nmsg.method = \"POST\";\nmsg.url = \"https://ecotaxa.obs-vlfr.fr/api/file_import/16205\";\nreturn msg;",
        "outputs": 1,
        "x": 320,
        "y": 400,
        "wires": [
            [
                "e9_post_import"
            ]
        ]
    },
    {
        "id": "e9_post_import",
        "type": "http request",
        "z": "8555b76c53e789e0",
        "name": "POST Import EcoTaxa",
        "method": "use",
        "ret": "obj",
        "url": "",
        "headers": [],
        "x": 540,
        "y": 400,
        "wires": [
            [
                "e10_debug_response"
            ]
        ]
    },
    {
        "id": "e10_debug_response",
        "type": "debug",
        "z": "8555b76c53e789e0",
        "name": "✅ Réponse finale",
        "active": true,
        "tosidebar": true,
        "complete": "payload",
        "x": 750,
        "y": 400,
        "wires": []
    },
    {
        "id": "43bc1cea309904dc",
        "type": "debug",
        "z": "8555b76c53e789e0",
        "name": "JWT Token",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 100,
        "wires": []
    },
    {
        "id": "e10f1a376d0e056a",
        "type": "debug",
        "z": "8555b76c53e789e0",
        "name": "Réponse EcoTaxa",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "4c3781d1bca2a493",
        "type": "debug",
        "z": "8555b76c53e789e0",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 240,
        "wires": []
    },
    {
        "id": "62f79470cdfe7139",
        "type": "http request",
        "z": "8555b76c53e789e0",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8e11bb014b9664be",
        "type": "ui-template",
        "z": "8018bd5586fd4054",
        "group": "822cdc5b6ef13f39",
        "page": "",
        "ui": "",
        "name": "body",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-container>\n    <v-row>\n      <!-- Step 1: White Balance -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-card\n          href=\"calibration_saturation_level\"\n          target=\"_blank\"\n          class=\"text-center py-2\"\n        >\n          <v-icon size=\"64\" color=\"primary\">mdi-eyedropper-variant</v-icon>\n          <v-card-title class=\"text-h6\">White Balance</v-card-title>\n          <v-card-text>\n            Use the color picker to measure the current color values and adjust the white balance accordingly.\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <!-- Step 2: Lightness -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-card\n          href=\"calibration_lightness\"\n          target=\"_blank\"\n          class=\"text-center py-2\"\n        >\n          <v-icon size=\"64\" color=\"primary\">mdi-brightness-6</v-icon>\n          <v-card-title class=\"text-h6\">Lightness</v-card-title>\n          <v-card-text>\n            Measure the current lightness value and update the LED intensity or ISO if below optimal levels.\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <!-- Step 3: Pixel Size -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-card\n          href=\"calibration_pixel_size\"\n          target=\"_blank\"\n          class=\"text-center py-2\"\n        >\n          <v-icon size=\"64\" color=\"primary\">mdi-ruler</v-icon>\n          <v-card-title class=\"text-h6\">Pixel Size</v-card-title>\n          <v-card-text>\n            Place markers on the micrometric ruler image to calculate the pixel size in microns per pixel.\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <!-- Step 4: Pump Calibration -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-card\n          href=\"calibration_pump\"\n          target=\"_blank\"\n          class=\"text-center py-2\"\n        >\n          <v-icon size=\"64\" color=\"primary\">mdi-water-pump</v-icon>\n          <v-card-title class=\"text-h6\">Pump Calibration</v-card-title>\n          <v-card-text>\n            Measure the transferred volume and adjust pump steps to improve accuracy in fluid handling.\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "35d8e8e4b1e0ef7d",
        "type": "ui-template",
        "z": "8018bd5586fd4054",
        "group": "c29c835a70533b69",
        "page": "",
        "ui": "",
        "name": "header",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-empty-state\n    headline=\"Calibration steps\"\n    icon=\"$vuetify\"\n    title=\"Follow these steps to ensure optimal image quality and measurement accuracy\"\n  >\n  </v-empty-state>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "590ff706a46acf3a",
        "type": "ui-template",
        "z": "8018bd5586fd4054",
        "group": "518a4242f548c1f2",
        "page": "",
        "ui": "",
        "name": "links",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <v-row justify=\"center\" class=\"my-2\">\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://www.figma.com/design/KXH3qkalr7eeFbyGsutZKt/PlanktoScope-Dashboard-v2?node-id=6-2&m=dev&t=Nn2N1o9OJveQCSco-1\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"primary\" class=\"mr-1\">mdi-image</v-icon>Figma Design\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard/issues/new?template=bug_report.md\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"red\" class=\"mr-1\">mdi-bug</v-icon>Report a Bug\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard/issues\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"orange\" class=\"mr-1\">mdi-information-outline</v-icon>Open\n        issues\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"black\" class=\"mr-1\">mdi-github</v-icon>View on GitHub\n      </v-chip>\n    </v-row>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3829aff60cdc5be4",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "19c3570e48774bd0",
        "group": "297b9a8eaa0287e2",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "4",
        "height": "6",
        "head": "",
        "format": "<template>\n  <div class=\"image-wrapper\">\n    <img :src=\"dynamicImageUrl\" class=\"rotated-image\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dynamicImageUrl: ''\n    };\n  },\n  mounted() {\n    this.setDynamicImageUrl();\n  },\n  methods: {\n    setDynamicImageUrl() {\n      const currentUrl = new URL(window.location.href);\n      const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n      const relativePath = '/ps/hal/camera/streams/preview.mjpg';\n      const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n      this.dynamicImageUrl = fullUrl.href;\n    },\n  },\n};\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a99be895898a4f2f",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "group": "af8acdfe9afbad74",
        "page": "",
        "ui": "",
        "name": "2. Measure the Current Saturation Level",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card title=\"2. Measure the Current Saturation Level\">\n    <v-card-text>\n      Now, use the color picker to measure the current color at a random location on your streaming:\n      <input class=\"colorpicker\" type=\"color\" v-model=\"selectedColor\" @input=\"onColorInput\" />\n    </v-card-text>\n\n    <!-- Progress Bar for Saturation Level -->\n    <div class=\"progress-container\">\n      <div class=\"progress-bar\" :style=\"progressBarStyle\"></div>\n      <div v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"progress-scale-line\"></div>\n    </div>\n\n    <!-- Scale Labels -->\n    <div class=\"progress-scale\">\n      <span v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"scale-label\">\n        {{ label.value }}%\n      </span>\n    </div>\n\n    <v-card-text>\n      The current saturation level is <b>{{ hsl.s }}%</b>.\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    selectedColor: \"#000000\", // Default value for the color picker\n    hsl: { h: 0, s: 0, l: 0 }, // HSL value for the selected color\n    scaleLabels: [\n      { value: 1, position: 0 },\n      { value: 5, position: 0 },\n      { value: 10, position: 0 },\n      { value: 20, position: 0 },\n      { value: 50, position: 0 },\n      { value: 100, position: 0 }\n    ],\n    msg: {} // Store incoming message\n  }),\n  computed: {\n    progressBarStyle() {\n      const logScaleValue = this.calculateLogScale(this.hsl.s);\n      return {\n        width: `${logScaleValue}%`,\n        backgroundColor: this.hsl.s < 5 ? '#5cd65c' : '#ea5353',\n      };\n    }\n  },\n  methods: {\n    onColorInput(event) {\n      this.selectedColor = event.target.value;\n      this.hsl = this.hexToHsl(this.selectedColor);\n      this.sendHexColor(); // Send the hex color and saturation level to Node-RED\n    },\n    sendHexColor() {\n      // Send hex color and saturation level to Node-RED\n      this.send({ topic: \"change\", acq_wb_hex: this.selectedColor, acq_saturation_value: this.hsl.s });\n    },\n    hexToHsl(hex) {\n      // Convert hex to HSL\n      let r = 0,\n        g = 0,\n        b = 0;\n      if (hex.length === 7) {\n        r = parseInt(hex.slice(1, 3), 16);\n        g = parseInt(hex.slice(3, 5), 16);\n        b = parseInt(hex.slice(5, 7), 16);\n      } else if (hex.length === 4) {\n        r = parseInt(hex[1] + hex[1], 16);\n        g = parseInt(hex[2] + hex[2], 16);\n        b = parseInt(hex[3] + hex[3], 16);\n      }\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      const max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n      let h = 0,\n        s = 0,\n        l = (max + min) / 2;\n      if (max !== min) {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n      return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100), // Saturation value\n        l: Math.round(l * 100),\n      };\n    },\n    calculateLogScale(value) {\n      // Apply logarithmic scale to the saturation value\n      const logValue = Math.log10(value + 1);\n      const logMax = Math.log10(101);\n      return (logValue / logMax) * 100;\n    },\n    calculateScalePositions() {\n      // Calculate the position of each scale label\n      this.scaleLabels = this.scaleLabels.map(label => ({\n        value: label.value,\n        position: this.calculateLogScale(label.value),\n      }));\n    },\n    updateMessage(newMsg) {\n      // Update UI based on the incoming message\n      if (newMsg.acq_saturation_value !== undefined) {\n        this.hsl.s = newMsg.acq_saturation_value; // Update saturation level\n      }\n      if (newMsg.acq_wb_hex !== undefined) {\n        this.selectedColor = newMsg.acq_wb_hex; // Update the selected color\n        this.hsl = this.hexToHsl(this.selectedColor); // Convert hex to HSL\n      }\n    }\n  },\n  watch: {\n    msg: {\n      handler(newMsg) {\n        this.updateMessage(newMsg); // Watch for updates to msg and handle them\n      },\n      deep: true // Deep watch to catch nested changes in the msg object\n    }\n  },\n  mounted() {\n    this.calculateScalePositions(); // Calculate scale positions for the progress bar\n\n    // Listen for WebSocket messages (Node-RED or any backend)\n    this.$socket.on('msg-input:' + this.id, (msg) => {\n      this.msg = msg; // Update msg with the received message\n    });\n  }\n};\n</script>\n\n<style>\n.progress-container {\n  position: relative;\n  width: 90%;\n  height: 30px;\n  background-color: #f4f5f6;\n  border-radius: 5px;\n  margin: 10px 5%;\n  border: 1px solid;\n}\n\n.progress-bar {\n  height: 100%;\n  border-radius: 5px;\n  transition: width 0.3s ease;\n}\n\n.progress-scale-line {\n  position: absolute;\n  height: 100%;\n  width: 1px;\n  top: 0;\n  background-color: #000;\n  pointer-events: none;\n}\n\n.progress-scale {\n  position: relative;\n  margin-top: 5px;\n  height: 20px;\n  width: 90%;\n  margin: 10px 5%;\n}\n\n.scale-label {\n  position: absolute;\n  bottom: 0;\n  font-size: 12px;\n  transform: translateX(-50%);\n  color: #000;\n}\n\n.colorpicker {\n  height: 2vw;\n  vertical-align: middle;\n  width: 5vw;\n  border: 1px solid;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 560,
        "y": 640,
        "wires": [
            [
                "6104a1880402810c"
            ]
        ]
    },
    {
        "id": "f3d25e1060563ac8",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "64fb52a5fc759893",
        "group": "af8acdfe9afbad74",
        "page": "",
        "ui": "",
        "name": "3. Display White Balance Settings",
        "order": 4,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-card title=\"3. Observe the current White Balance Settings\">\n    <v-card-text>\n      <canvas id=\"wbChart\"></canvas>\n    </v-card-text>\n  </v-card>\n</template>\n\n\n\n<script>\nexport default {\n  data() {\n    return {\n      chart: null,\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.createChart(); // Initialize the chart after the component is fully mounted\n    });\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.destroy(); // Clean up the chart if the component is destroyed\n    }\n  },\n  methods: {\n    createChart(hexColor = '#000000') {\n      const canvas = document.getElementById('wbChart');\n      if (!canvas) {\n        console.error(\"Canvas element not found.\");\n        return;\n      }\n\n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        console.error(\"Unable to get canvas context.\");\n        return;\n      }\n\n      const ratios = this.calculateRatiosFromHex(hexColor);\n\n      if (this.chart) {\n        this.chart.destroy(); // Ensure any existing chart is destroyed before creating a new one\n      }\n\n      this.chart = new Chart(ctx, {\n        type: 'scatter',\n        data: {\n          datasets: [\n            {\n              label: 'Current WB',\n              data: [{ x: ratios.bgRatio, y: ratios.rgRatio }],\n              backgroundColor: 'blue',\n              borderColor: 'black',\n              borderWidth: 1,\n              pointRadius: 10,\n              pointHoverRadius: 15,\n            },\n            {\n              label: 'Acceptable WB',\n              data: [{ x: 1, y: 1 }],\n              backgroundColor: '#5cd65c',\n              borderColor: 'black',\n              borderWidth: 1,\n              pointRadius: 50,\n              pointHoverRadius: 55,\n              pointStyle: 'circle',\n              fill: true,\n              showLine: false,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          scales: {\n            x: {\n              type: 'linear',\n              position: 'bottom',\n              title: {\n                display: true,\n                text: 'B/G Ratio',\n              },\n              min: 0.8,\n              max: 1.2,\n            },\n            y: {\n              type: 'linear',\n              title: {\n                display: true,\n                text: 'R/G Ratio',\n              },\n              min: 0.8,\n              max: 1.2,\n            },\n          },\n          plugins: {\n            legend: {\n              display: true,\n            },\n          },\n          animation: {\n            duration: 0, // Disabling animations might prevent some update issues\n          },\n        },\n      });\n    },\n    calculateRatiosFromHex(hex) {\n      const r = parseInt(hex.slice(1, 3), 16);\n      const g = parseInt(hex.slice(3, 5), 16);\n      const b = parseInt(hex.slice(5, 7), 16);\n\n      const rgRatio = r / g || 0;\n      const bgRatio = b / g || 0;\n\n      return { rgRatio, bgRatio };\n    },\n  },\n  watch: {\n    msg(newMsg) {\n      if (newMsg && newMsg.acq_wb_hex) {\n        this.createChart(newMsg.acq_wb_hex);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n#wbChart {\n  width: 100% !important;\n  height: 400px !important;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 260,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "f13c467a5f891268",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "group": "af8acdfe9afbad74",
        "page": "",
        "ui": "",
        "name": "4. Adjust White Balance Settings",
        "order": 5,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-card title=\"4. Adjust White Balance Settings\">\n    <v-card-text>\n      Use the suggested values to adjust the white balance based on the color input.\n    </v-card-text>\n    <v-card-text>\n      <v-row>\n        <v-col cols=\"4\"></v-col>\n        <v-col cols=\"4\">Current</v-col>\n        <v-col cols=\"4\">Suggested</v-col>\n      </v-row>\n      <v-row>\n        <v-col cols=\"4\">AWRed</v-col>\n        <v-col cols=\"4\">\n          <v-text-field v-model=\"currentAWRed\" disabled variant=\"outlined\"></v-text-field>\n        </v-col>\n        <v-col cols=\"4\">\n          <v-text-field v-model=\"suggestedAWRed\" variant=\"outlined\"></v-text-field>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col cols=\"4\">AWBlue</v-col>\n        <v-col cols=\"4\">\n          <v-text-field v-model=\"currentAWBlue\" disabled variant=\"outlined\"></v-text-field>\n        </v-col>\n        <v-col cols=\"4\">\n          <v-text-field v-model=\"suggestedAWBlue\" variant=\"outlined\"></v-text-field>\n        </v-col>\n      </v-row>\n    </v-card-text>\n    <v-card-actions>\n    <v-card-text>\n      We have calculated better values for your AWRed and AWBlue : \n    </v-card-text>\n      <v-btn color=\"primary\" @click=\"sendSettings\" variant=\"outlined\">Improve</v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      currentAWRed: '',\n      currentAWBlue: '',\n      suggestedAWRed: '',\n      suggestedAWBlue: '',\n    };\n  },\n  mounted() {\n    this.setupSocketListeners();\n  },\n  methods: {\n    setupSocketListeners() {\n      if (this.$socket) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.acq_wb_red !== undefined) {\n            this.currentAWRed = msg.acq_wb_red;\n          }\n          if (msg.acq_wb_blue !== undefined) {\n            this.currentAWBlue = msg.acq_wb_blue;\n          }\n          if (msg.acq_wb_hex !== undefined) {\n            this.calculateSuggestedAW(msg.acq_wb_hex);\n          }\n        });\n      }\n    },\n    hexToRgb(hex) {\n      hex = hex.replace(/^#/, '');\n      let bigint = parseInt(hex, 16);\n      let r = (bigint >> 16) & 255;\n      let g = (bigint >> 8) & 255;\n      let b = bigint & 255;\n      return { r, g, b };\n    },\n    calculateSuggestedAW(hexColor) {\n      const { r, g, b } = this.hexToRgb(hexColor);\n      let redAdjustment = (g - r) + parseInt(this.currentAWRed, 10);\n      let blueAdjustment = (g - b) + parseInt(this.currentAWBlue, 10);\n      this.suggestedAWRed = Math.max(0, redAdjustment);\n      this.suggestedAWBlue = Math.max(0, blueAdjustment);\n    },\n    sendSettings() {\n      const payload = {\n        payload: {\n          action: \"settings\",\n          settings: {\n            white_balance_gain: {\n              blue: this.suggestedAWBlue,\n              red: this.suggestedAWRed,\n            },\n          },\n        },\n        acq_wb_blue:this.suggestedAWBlue,\n        acq_wb_red:this.suggestedAWRed,\n        \n        topic: \"imager/image\",\n        \n      };\n      this.send(payload);\n    },\n  },\n};\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 260,
        "y": 900,
        "wires": [
            [
                "3574f41671e9c607",
                "0e406c9af3e5a51e",
                "801d9c0cb77d4caa"
            ]
        ]
    },
    {
        "id": "3b5d942eccbc14ba",
        "type": "mqtt out",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 630,
        "y": 840,
        "wires": []
    },
    {
        "id": "f7aececeb25feee2",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "set acq_wb_hex",
        "func": "global.set(\"acq_wb_hex\", msg.acq_wb_hex);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 640,
        "wires": [
            [
                "4a99ebbebc9e7d65"
            ]
        ]
    },
    {
        "id": "4a99ebbebc9e7d65",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "get acq_wb_red",
        "func": "msg.acq_wb_red = global.get(\"acq_wb_red\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 640,
        "wires": [
            [
                "a6cfdc06c50e2b7c"
            ]
        ]
    },
    {
        "id": "a6cfdc06c50e2b7c",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "get acq_wb_blue",
        "func": "msg.acq_wb_blue = global.get(\"acq_wb_blue\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 640,
        "wires": [
            [
                "69f90516888fb4c2"
            ]
        ]
    },
    {
        "id": "3574f41671e9c607",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "set acq_wb_red",
        "func": "global.set(\"acq_wb_red\", msg.acq_wb_red);\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "0e406c9af3e5a51e",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "set acq_wb_blue",
        "func": "global.set(\"acq_wb_blue\", msg.acq_wb_blue);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "ea8c4596e202f964",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "631f3e38acec1bc6",
        "group": "af8acdfe9afbad74",
        "page": "",
        "ui": "",
        "name": "1. Reset the value of the gains",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card title=\"1. Reset WB Values\">\n    <v-card-text>\n        <span>If needed, you can turn <b>ON</b> the LED that might be temporarly <b>OFF</b>. Just click on this button : </span>\n        <v-btn @click=\"on\" variant=\"outlined\">ON</v-btn>\n        <br>\n      <span>Then, it reset the values of the gains for Red and Blue to 100 :</span>\n      <v-btn @click=\"reset\" variant=\"outlined\">Reset WBBlue and WBRed</v-btn>\n      \n    \n    </v-card-text>\n    \n  </v-card>\n  \n</template>\n\n<script>\nexport default {\n  props: ['id'],\n  methods: {\n    reset() {\n      const payload = {\n        payload: {\n          action: \"settings\",\n          settings: {\n            white_balance_gain: {\n              blue: 100,\n              red: 100,\n            },\n          },\n        },\n        acq_wb_blue: 100,\n        acq_wb_red: 100,\n        topic: \"imager/image\",\n      };\n      this.send(payload);\n    }, \n    on() {\n       this.send({payload: {action: \"on\",led: 1},topic: 'light'});\n    },\n  },\n};\n\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "4c7717ee07b97e8b",
                "0fa68c34208c36d2",
                "958aac3964d0faf4",
                "857257c8697a3b76",
                "778ef58f071d9dc0"
            ]
        ]
    },
    {
        "id": "4c7717ee07b97e8b",
        "type": "mqtt out",
        "z": "6426e7bea6900426",
        "g": "631f3e38acec1bc6",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 430,
        "y": 400,
        "wires": []
    },
    {
        "id": "0fa68c34208c36d2",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "631f3e38acec1bc6",
        "name": "set acq_wb_red",
        "func": "global.set(\"acq_wb_red\", msg.acq_wb_red);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "958aac3964d0faf4",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "631f3e38acec1bc6",
        "name": "set acq_wb_blue",
        "func": "global.set(\"acq_wb_blue\", msg.acq_wb_blue);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "857257c8697a3b76",
        "type": "link out",
        "z": "6426e7bea6900426",
        "g": "631f3e38acec1bc6",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "6d6fdc0c504bbc26"
        ],
        "x": 395,
        "y": 540,
        "wires": []
    },
    {
        "id": "6d6fdc0c504bbc26",
        "type": "link in",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "link in 1",
        "links": [
            "857257c8697a3b76"
        ],
        "x": 75,
        "y": 860,
        "wires": [
            [
                "f13c467a5f891268"
            ]
        ]
    },
    {
        "id": "69f90516888fb4c2",
        "type": "link out",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "cab52c68fd58220b",
            "45f2ad943cee341f"
        ],
        "x": 1435,
        "y": 640,
        "wires": []
    },
    {
        "id": "cab52c68fd58220b",
        "type": "link in",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "link in 2",
        "links": [
            "69f90516888fb4c2"
        ],
        "x": 75,
        "y": 940,
        "wires": [
            [
                "f13c467a5f891268"
            ]
        ]
    },
    {
        "id": "45f2ad943cee341f",
        "type": "link in",
        "z": "6426e7bea6900426",
        "g": "64fb52a5fc759893",
        "name": "link in 3",
        "links": [
            "69f90516888fb4c2"
        ],
        "x": 75,
        "y": 740,
        "wires": [
            [
                "f3d25e1060563ac8"
            ]
        ]
    },
    {
        "id": "062a3af5e12e8445",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "f591255fbfc6c466",
        "group": "af8acdfe9afbad74",
        "page": "",
        "ui": "",
        "name": "Step Bar",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"1\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item value=\"1\" editable @click=\"stepClicked(1)\" class=\"selected-step\">Saturation Level</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"2\" editable @click=\"stepClicked(2)\">Lightness</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"3\" editable @click=\"stepClicked(3)\">Pixel size</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"4\" editable @click=\"stepClicked(4)\">Pump</v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        const stepMapping = {\n          1: { page: 'Calibration - Saturation Level' },\n          2: { page: 'Calibration - Lightness' },\n          3: { page: 'Calibration - Pixel size' },\n          4: { page: 'Calibration - Pump' }\n        };\n\n        const msgPayload = stepMapping[step] || {};\n        \n        this.send({ payload: msgPayload });\n      }\n    }\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "e5da27b9abdcb156"
            ]
        ]
    },
    {
        "id": "e5da27b9abdcb156",
        "type": "ui-control",
        "z": "6426e7bea6900426",
        "g": "f591255fbfc6c466",
        "name": "",
        "ui": "e6ae26617c24c3ea",
        "events": "all",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c253d0e7e41137e5",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "group": "",
        "page": "803aa402d5c66b73",
        "ui": "",
        "name": "CSS (Single Page)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "page:style",
        "className": "",
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "bc2f402f6cdd8434",
        "type": "ui-control",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "",
        "ui": "e6ae26617c24c3ea",
        "events": "all",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "224eba65a1a42b91"
            ]
        ]
    },
    {
        "id": "ec5d9fecc6b0cece",
        "type": "ui-event",
        "z": "6426e7bea6900426",
        "g": "f5929f8fbe9df063",
        "ui": "e6ae26617c24c3ea",
        "name": "",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "5c444b714f250678"
            ]
        ]
    },
    {
        "id": "5c444b714f250678",
        "type": "switch",
        "z": "6426e7bea6900426",
        "g": "f5929f8fbe9df063",
        "name": "",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/calibration_saturation_level",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "cb467ae07b125bcc",
                "aad16ea9eae8d3dd"
            ]
        ]
    },
    {
        "id": "cb467ae07b125bcc",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "f5929f8fbe9df063",
        "name": "get acq_wb_red",
        "func": "msg.acq_wb_red = global.get(\"acq_wb_red\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 260,
        "wires": [
            [
                "97541b0d6dcf6747"
            ]
        ]
    },
    {
        "id": "aad16ea9eae8d3dd",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "f5929f8fbe9df063",
        "name": "get acq_wb_blue",
        "func": "msg.acq_wb_blue = global.get(\"acq_wb_blue\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 300,
        "wires": [
            [
                "97541b0d6dcf6747"
            ]
        ]
    },
    {
        "id": "97541b0d6dcf6747",
        "type": "link out",
        "z": "6426e7bea6900426",
        "g": "f5929f8fbe9df063",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "06e4799523ede341"
        ],
        "x": 555,
        "y": 260,
        "wires": []
    },
    {
        "id": "06e4799523ede341",
        "type": "link in",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "link in 4",
        "links": [
            "97541b0d6dcf6747"
        ],
        "x": 75,
        "y": 900,
        "wires": [
            [
                "f13c467a5f891268"
            ]
        ]
    },
    {
        "id": "801d9c0cb77d4caa",
        "type": "switch",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "imager/image",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 840,
        "wires": [
            [
                "3b5d942eccbc14ba"
            ]
        ]
    },
    {
        "id": "6104a1880402810c",
        "type": "switch",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 640,
        "wires": [
            [
                "f7aececeb25feee2"
            ]
        ]
    },
    {
        "id": "224eba65a1a42b91",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "get acq_wb_hex",
        "func": "msg.acq_wb_hex = global.get(\"acq_wb_hex\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 640,
        "wires": [
            [
                "a99be895898a4f2f"
            ]
        ]
    },
    {
        "id": "778ef58f071d9dc0",
        "type": "debug",
        "z": "6426e7bea6900426",
        "name": "debug 71",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 420,
        "wires": []
    },
    {
        "id": "300c2d2496f1d12d",
        "type": "ui-template",
        "z": "14c685bd04db8be5",
        "g": "0dcebaf2b57a4374",
        "group": "705156ec7eedfb1e",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "4",
        "height": "6",
        "head": "",
        "format": "<template>\n  <div class=\"image-wrapper\">\n    <img :src=\"dynamicImageUrl\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dynamicImageUrl: ''\n    };\n  },\n  mounted() {\n    this.setDynamicImageUrl();\n  },\n  methods: {\n    setDynamicImageUrl() {\n      const currentUrl = new URL(window.location.href);\n      const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n      const relativePath = '/ps/hal/camera/streams/preview.mjpg';\n      const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n      this.dynamicImageUrl = fullUrl.href;\n    },\n  },\n};\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "5fbdba7e61973f9a",
        "type": "ui-template",
        "z": "14c685bd04db8be5",
        "g": "426f6cef77fbb290",
        "group": "728c7ed3d63dfcee",
        "page": "",
        "ui": "",
        "name": "Step Bar",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"1\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item value=\"1\" editable @click=\"stepClicked(1)\">Saturation Level</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"2\" editable @click=\"stepClicked(2)\" class=\"selected-step\">Lightness</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"3\" editable @click=\"stepClicked(3)\">Pixel size</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"4\" editable @click=\"stepClicked(4)\">Pump</v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        const stepMapping = {\n          1: { page: 'Calibration - Saturation Level' },\n          2: { page: 'Calibration - Lightness' },\n          3: { page: 'Calibration - Pixel size' },\n          4: { page: 'Calibration - Pump' }\n        };\n\n        const msgPayload = stepMapping[step] || {};\n        \n        this.send({ payload: msgPayload });\n      }\n    }\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "25cb0163587aee15"
            ]
        ]
    },
    {
        "id": "25cb0163587aee15",
        "type": "ui-control",
        "z": "14c685bd04db8be5",
        "g": "426f6cef77fbb290",
        "name": "",
        "ui": "e6ae26617c24c3ea",
        "events": "all",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a7d7736e2750578e",
        "type": "ui-template",
        "z": "14c685bd04db8be5",
        "group": "",
        "page": "f22f627015431032",
        "ui": "",
        "name": "CSS (Single Page)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": ".selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n}\n\n\n.progress-container {\n  position: relative;\n  width: 90%;\n  height: 30px;\n  background-color: #f4f5f6;\n  border-radius: 5px;\n  margin: 10px 5%;\n  border: 1px solid;\n}\n\n.progress-bar {\n  height: 100%;\n  border-radius: 5px;\n  transition: width 0.3s ease;\n}\n\n.progress-scale-line {\n  position: absolute;\n  height: 100%;\n  width: 1px;\n  top: 0;\n  background-color: #000;\n  pointer-events: none;\n}\n\n.progress-scale {\n  position: relative;\n  margin-top: 5px;\n  height: 20px;\n  width: 90%;\n  margin: 10px 5%;\n}\n\n.scale-label {\n  position: absolute;\n  bottom: 0;\n  font-size: 12px;\n  transform: translateX(-50%);\n  color: #000;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "page:style",
        "className": "",
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "cf237f6cc8d0234d",
        "type": "ui-template",
        "z": "14c685bd04db8be5",
        "group": "728c7ed3d63dfcee",
        "page": "",
        "ui": "",
        "name": "1. Check LED Lifetime",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card title=\"1. Check LED Lifetime\">\n    <v-card-text>\n      Before starting the calibration, it is important to check the remaining hours of use of the LED:\n      <br />\n    </v-card-text>\n    \n    <!-- Slider avec style similaire à la barre de progression -->\n    <div class=\"progress-container\">\n      <div class=\"progress-bar\" :style=\"progressBarStyle\"></div>\n      <div v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"progress-scale-line\"></div>\n    </div>\n    <div class=\"progress-scale\">\n      <span v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"scale-label\">\n        {{ label.value }}h\n      </span>\n    </div>\n    <v-card-text>\n      <span>The current LED duration of use is {{ acq_led_operating_hours }} hours.</span>\n    </v-card-text>\n\n    <!-- Banière affichée si acq_led_operating_hours < 200 -->\n    <v-card-text v-if=\"acq_led_operating_hours < 200\">\n      <span class=\"warning-banner\">\n        Seems like you need to replace your LED by following the provided instructions.\n      </span>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    acq_led_operating_hours: 0, // Valeur initiale par défaut\n    scaleLabels: [\n      { value: 0, position: 0 },\n      { value: 100, position: 16.67 },\n      { value: 200, position: 33.33 },\n      { value: 300, position: 50 },\n      { value: 400, position: 66.67 },\n      { value: 500, position: 83.33 },\n      { value: 600, position: 100 }\n    ],\n  }),\n  computed: {\n    progressBarStyle() {\n      return {\n        width: `${this.calculateLogScale(this.acq_led_operating_hours)}%`,\n        backgroundColor: this.acq_led_operating_hours < 200 ? 'red' : '#5cd65c',\n      };\n    }\n  },\n  methods: {\n    calculateLogScale(value) {\n      // Appliquer une échelle linéaire simple\n      return (value / 600) * 100;\n    },\n    updateMessage(newMsg) {\n      // Méthode appelée quand un nouveau message arrive\n      if (newMsg.acq_led_operating_hours !== undefined) {\n        this.acq_led_operating_hours = newMsg.acq_led_operating_hours;\n      }\n    }\n  },\n  watch: {\n    // Watch sur l'objet entier msg\n    msg: {\n      handler(newMsg) {\n        this.updateMessage(newMsg);\n      },\n      deep: true, // Pour capturer les changements dans les propriétés imbriquées de msg\n    }\n  },\n  mounted() {\n    // Simuler la réception d'un message en utilisant une fonction ou une API Node-RED\n    this.$watch('msg', (newMsg) => {\n      this.updateMessage(newMsg);\n    });\n  }\n};\n</script>\n\n<style>\n.progress-container {\n  position: relative;\n  width: 90%;\n  height: 30px;\n  background-color: #f4f5f6;\n  border-radius: 5px;\n  margin: 10px 5%;\n  border: 1px solid;\n}\n\n.progress-bar {\n  height: 100%;\n  border-radius: 5px;\n  transition: width 0.3s ease;\n}\n\n.progress-scale-line {\n  position: absolute;\n  height: 100%;\n  width: 1px;\n  top: 0;\n  background-color: #000;\n  pointer-events: none;\n}\n\n.progress-scale {\n  position: relative;\n  margin-top: 5px;\n  height: 20px;\n  width: 90%;\n  margin: 10px 5%;\n}\n\n.scale-label {\n  position: absolute;\n  bottom: 0;\n  font-size: 12px;\n  transform: translateX(-50%);\n  color: #000;\n}\n\n.warning-banner {\n  color: red;\n  font-weight: bold;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 300,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "e3be6250ef1fb928",
        "type": "inject",
        "z": "14c685bd04db8be5",
        "name": "150",
        "props": [
            {
                "p": "acq_led_operating_hours",
                "v": "150",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "cf237f6cc8d0234d"
            ]
        ]
    },
    {
        "id": "70566499a56d066d",
        "type": "inject",
        "z": "14c685bd04db8be5",
        "name": "350",
        "props": [
            {
                "p": "acq_led_operating_hours",
                "v": "350",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "cf237f6cc8d0234d"
            ]
        ]
    },
    {
        "id": "bcfea4e20bc583f1",
        "type": "ui-template",
        "z": "14c685bd04db8be5",
        "group": "728c7ed3d63dfcee",
        "page": "",
        "ui": "",
        "name": "2. Calibration of LED intensity and ISO",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card title=\"2. Calibration of LED intensity and ISO\">\n    <v-card-text>\n      Use the color picker to measure the current color value on the streaming:\n      <input class=\"colorpicker\" type=\"color\" v-model=\"selectedColor\" @input=\"onColorInput\" />\n      <br />\n    </v-card-text>\n\n    <!-- Affichage de la lightness -->\n    <v-card-text>\n      <span>The current lightness value is {{ hsl.l }}%.</span>\n    </v-card-text>\n\n    <v-card-text>\n      <span>Adjust the LED Intensity and the ISO if the current lightness value is between 80% and 90%. Redo the measurement if necessary.</span>\n    </v-card-text>\n\n    <!-- Champ pour sélectionner la nouvelle valeur ISO -->\n    <v-card-text>\n      <label for=\"iso-input\">Set ISO Value:</label>\n      <input type=\"number\" id=\"iso-input\" v-model=\"iso\" @input=\"onIsoInput\" min=\"100\" step=\"100\" />\n    </v-card-text>\n     \n    <!-- Slider pour lightness avec style similaire à la barre de progression -->\n    <div class=\"progress-container\">\n      <div class=\"progress-bar\" :style=\"lightnessProgressBarStyle\"></div>\n      <div v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"progress-scale-line\"></div>\n    </div>\n    <div class=\"progress-scale\">\n      <span v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"scale-label\">\n        {{ label.value }}%\n      </span>\n    </div>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    selectedColor: \"#000000\", // Default value for color picker\n    hsl: { h: 0, s: 0, l: 0 }, // Store HSL value of the selected color\n    iso: 100, // Default ISO value\n    scaleLabels: [\n      { value: 0, position: 0 },\n      { value: 20, position: 20 },\n      { value: 40, position: 40 },\n      { value: 60, position: 60 },\n      { value: 80, position: 80 },\n      { value: 100, position: 100 }\n    ],\n    msg: {} // Property to store the incoming message\n  }),\n  computed: {\n    lightnessProgressBarStyle() {\n      let backgroundColor;\n      if (this.hsl.l < 50) {\n        backgroundColor = 'red'; // Too low\n      } else if (this.hsl.l >= 80 && this.hsl.l <= 90) {\n        backgroundColor = '#5cd75d'; // Ideal\n      } else if (this.hsl.l >= 95) {\n        backgroundColor = 'red'; // Too high\n      } else {\n        backgroundColor = 'orange'; // Slightly high\n      }\n      return {\n        width: `${this.hsl.l}%`,\n        backgroundColor: backgroundColor\n      };\n    }\n  },\n  methods: {\n    onColorInput(event) {\n      this.selectedColor = event.target.value;\n      this.hsl = this.hexToHsl(this.selectedColor);\n      this.sendHexColor(); // Send the selected color and lightness value to Node-RED\n    },\n    sendHexColor() {\n      // Send the hex color and lightness value to Node-RED\n      this.send({ acq_wb_hex: this.selectedColor, acq_lightness_value: this.hsl.l });\n    },\n    hexToHsl(hex) {\n      // Convert hex to HSL\n      let r = 0,\n        g = 0,\n        b = 0;\n      if (hex.length === 7) {\n        r = parseInt(hex.slice(1, 3), 16);\n        g = parseInt(hex.slice(3, 5), 16);\n        b = parseInt(hex.slice(5, 7), 16);\n      } else if (hex.length === 4) {\n        r = parseInt(hex[1] + hex[1], 16);\n        g = parseInt(hex[2] + hex[2], 16);\n        b = parseInt(hex[3] + hex[3], 16);\n      }\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      const max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n      let h = 0,\n        s = 0,\n        l = (max + min) / 2;\n      if (max !== min) {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n      return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        l: Math.round(l * 100) // The lightness value is stored here\n      };\n    },\n    onIsoInput() {\n      // Send the new ISO value to Node-RED\n      const payload = {\n        action: \"settings\",\n        settings: {\n          iso: this.iso\n        }\n      };\n      this.send({ topic: \"imager/image\", payload });\n    },\n    updateMessage(newMsg) {\n      // Method to handle incoming messages\n      if (newMsg.acq_lightness_value !== undefined) {\n        this.hsl.l = newMsg.acq_lightness_value; // Update lightness value\n      }\n      if (newMsg.acq_wb_hex !== undefined) {\n        this.selectedColor = newMsg.acq_wb_hex; // Update the selected color\n        this.hsl = this.hexToHsl(this.selectedColor); // Update HSL based on the new hex value\n      }\n      if (newMsg.iso !== undefined) {\n        this.iso = newMsg.iso; // Update ISO value\n      }\n    }\n  },\n  watch: {\n    msg: {\n      handler(newMsg) {\n        this.updateMessage(newMsg); // Handle changes to `msg`\n      },\n      deep: true // Ensure deep watching of nested msg properties\n    }\n  },\n  mounted() {\n    // Listen for incoming WebSocket messages (for example, from Node-RED)\n    this.$socket.on('msg-input:' + this.id, (msg) => {\n      this.msg = msg; // Update msg with the incoming message\n    });\n  }\n};\n</script>\n\n<style>\n.progress-container {\n  position: relative;\n  width: 90%;\n  height: 30px;\n  background-color: #f4f5f6;\n  border-radius: 5px;\n  margin: 10px 5%;\n  border: 1px solid;\n}\n\n.progress-bar {\n  height: 100%;\n  border-radius: 5px;\n  transition: width 0.3s ease;\n}\n\n.progress-scale-line {\n  position: absolute;\n  height: 100%;\n  width: 1px;\n  top: 0;\n  background-color: #000;\n  pointer-events: none;\n}\n\n.progress-scale {\n  position: relative;\n  margin-top: 5px;\n  height: 20px;\n  width: 90%;\n  margin: 10px 5%;\n}\n\n.scale-label {\n  position: absolute;\n  bottom: 0;\n  font-size: 12px;\n  transform: translateX(-50%);\n  color: #000;\n}\n\n.colorpicker {\n  height: 2vw;\n  vertical-align: middle;\n  width: 5vw;\n  border: 1px solid;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 730,
        "y": 480,
        "wires": [
            [
                "611c04b01413daa7",
                "3dbdd07470fcf962",
                "891553cd325b644e"
            ]
        ]
    },
    {
        "id": "970fe623589bb304",
        "type": "debug",
        "z": "14c685bd04db8be5",
        "name": "debug 66",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 240,
        "wires": []
    },
    {
        "id": "93de561b59a417b8",
        "type": "mqtt out",
        "z": "14c685bd04db8be5",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 1190,
        "y": 500,
        "wires": []
    },
    {
        "id": "611c04b01413daa7",
        "type": "switch",
        "z": "14c685bd04db8be5",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "imager/image",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 970,
        "y": 520,
        "wires": [
            [
                "93de561b59a417b8",
                "4c30687e204ba7d7"
            ]
        ]
    },
    {
        "id": "5d31d86812be386d",
        "type": "function",
        "z": "14c685bd04db8be5",
        "name": "set acq_lightness_value",
        "func": "global.set(\"acq_lightness_value\", msg.acq_lightness_value);\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f1ee9cfdfa49fd62",
        "type": "function",
        "z": "14c685bd04db8be5",
        "name": "get acq_lightness_value",
        "func": "msg.acq_lightness_value = global.get(\"acq_lightness_value\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 400,
        "wires": [
            [
                "42c95761adb5cd38"
            ]
        ]
    },
    {
        "id": "55a5d26bd0e73ed4",
        "type": "ui-event",
        "z": "14c685bd04db8be5",
        "ui": "e6ae26617c24c3ea",
        "name": "",
        "x": 100,
        "y": 420,
        "wires": [
            [
                "2579f5467cf5920b"
            ]
        ]
    },
    {
        "id": "2579f5467cf5920b",
        "type": "switch",
        "z": "14c685bd04db8be5",
        "name": "",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/calibration_lightness",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 110,
        "y": 540,
        "wires": [
            [
                "f1ee9cfdfa49fd62"
            ]
        ]
    },
    {
        "id": "6a687638c091a876",
        "type": "debug",
        "z": "14c685bd04db8be5",
        "name": "debug 67",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 740,
        "wires": []
    },
    {
        "id": "3dbdd07470fcf962",
        "type": "switch",
        "z": "14c685bd04db8be5",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 970,
        "y": 460,
        "wires": [
            [
                "5d31d86812be386d",
                "970fe623589bb304",
                "14b35bb2dd3f0c81"
            ]
        ]
    },
    {
        "id": "14b35bb2dd3f0c81",
        "type": "function",
        "z": "14c685bd04db8be5",
        "name": "set acq_wb_hex",
        "func": "global.set(\"acq_wb_hex\", msg.acq_wb_hex);\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "42c95761adb5cd38",
        "type": "function",
        "z": "14c685bd04db8be5",
        "name": "get acq_wb_hex",
        "func": "msg.acq_wb_hex = global.get(\"acq_wb_hex\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 480,
        "wires": [
            [
                "bcfea4e20bc583f1",
                "6a687638c091a876"
            ]
        ]
    },
    {
        "id": "09141e4c94cc7e9f",
        "type": "function",
        "z": "14c685bd04db8be5",
        "name": "set acq_iso",
        "func": "global.set(\"acq_iso\", msg.acq_iso);\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4c30687e204ba7d7",
        "type": "change",
        "z": "14c685bd04db8be5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "acq_iso",
                "pt": "msg",
                "to": "payload.settings.iso",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 760,
        "wires": [
            [
                "09141e4c94cc7e9f"
            ]
        ]
    },
    {
        "id": "891553cd325b644e",
        "type": "debug",
        "z": "14c685bd04db8be5",
        "name": "debug 69",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 160,
        "wires": []
    },
    {
        "id": "05a5a9c4530d07ea",
        "type": "ui-template",
        "z": "3afb1d2b21be9114",
        "g": "da1cb3ed0c90bb56",
        "group": "c966455a52d121c0",
        "page": "",
        "ui": "",
        "name": "Step Bar",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"1\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item value=\"1\" editable @click=\"stepClicked(1)\">Saturation Level</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"2\" editable @click=\"stepClicked(2)\">Lightness</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"3\" editable @click=\"stepClicked(3)\" class=\"selected-step\">Pixel size</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"4\" editable @click=\"stepClicked(4)\">Pump</v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        const stepMapping = {\n          1: { page: 'Calibration - Saturation Level' },\n          2: { page: 'Calibration - Lightness' },\n          3: { page: 'Calibration - Pixel size' },\n          4: { page: 'Calibration - Pump' }\n        };\n\n        const msgPayload = stepMapping[step] || {};\n        \n        this.send({ payload: msgPayload });\n      }\n    }\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "419cccaf23eb2548"
            ]
        ]
    },
    {
        "id": "419cccaf23eb2548",
        "type": "ui-control",
        "z": "3afb1d2b21be9114",
        "g": "da1cb3ed0c90bb56",
        "name": "",
        "ui": "e6ae26617c24c3ea",
        "events": "all",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5b95342353581bba",
        "type": "ui-template",
        "z": "3afb1d2b21be9114",
        "g": "d7c2ea70e05a360f",
        "group": "c9933f7d77fc6f01",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "4",
        "height": "6",
        "head": "",
        "format": "<template>\n  <div class=\"image-wrapper\">\n    <img :src=\"dynamicImageUrl\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dynamicImageUrl: ''\n    };\n  },\n  mounted() {\n    this.setDynamicImageUrl();\n  },\n  methods: {\n    setDynamicImageUrl() {\n      const currentUrl = new URL(window.location.href);\n      const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n      const relativePath = '/ps/hal/camera/streams/preview.mjpg';\n      const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n      this.dynamicImageUrl = fullUrl.href;\n    },\n  },\n};\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c5dfb3fbc57fe27d",
        "type": "ui-template",
        "z": "3afb1d2b21be9114",
        "group": "",
        "page": "aa9ba6cedf56d2cd",
        "ui": "",
        "name": "CSS (Single Page)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "page:style",
        "className": "",
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4ba9c6fbd3e2ce88",
        "type": "ui-template",
        "z": "d5b2c64b84f8ed4f",
        "group": "",
        "page": "48216bc1f7c53a75",
        "ui": "",
        "name": "CSS (Single Page)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "page:style",
        "className": "",
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c92cd7e25b01278d",
        "type": "ui-template",
        "z": "d5b2c64b84f8ed4f",
        "g": "0861054b07c3373d",
        "group": "6039d653304537af",
        "page": "",
        "ui": "",
        "name": "Step Bar",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"1\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item value=\"1\" editable @click=\"stepClicked(1)\">Saturation Level</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"2\" editable @click=\"stepClicked(2)\">Lightness</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"3\" editable @click=\"stepClicked(3)\">Pixel size</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"4\" editable @click=\"stepClicked(4)\" class=\"selected-step\">Pump</v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        const stepMapping = {\n          1: { page: 'Calibration - Saturation Level' },\n          2: { page: 'Calibration - Lightness' },\n          3: { page: 'Calibration - Pixel size' },\n          4: { page: 'Calibration - Pump' }\n        };\n\n        const msgPayload = stepMapping[step] || {};\n        \n        this.send({ payload: msgPayload });\n      }\n    }\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "f8db1578262f6bc8"
            ]
        ]
    },
    {
        "id": "f8db1578262f6bc8",
        "type": "ui-control",
        "z": "d5b2c64b84f8ed4f",
        "g": "0861054b07c3373d",
        "name": "",
        "ui": "e6ae26617c24c3ea",
        "events": "all",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "71ba57a25304e08f",
        "type": "ui-template",
        "z": "d5b2c64b84f8ed4f",
        "g": "508d01c8283ee722",
        "group": "0c3ae4988f81c2ac",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "4",
        "height": "6",
        "head": "",
        "format": "<template>\n  <div class=\"image-wrapper\">\n    <img :src=\"dynamicImageUrl\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dynamicImageUrl: ''\n    };\n  },\n  mounted() {\n    this.setDynamicImageUrl();\n  },\n  methods: {\n    setDynamicImageUrl() {\n      const currentUrl = new URL(window.location.href);\n      const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n      const relativePath = '/ps/hal/camera/streams/preview.mjpg';\n      const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n      this.dynamicImageUrl = fullUrl.href;\n    },\n  },\n};\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 160,
        "wires": [
            []
        ]
    }
]